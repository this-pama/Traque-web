{"version":3,"sources":["store/actions/actionTypes.js","store/actions/index.js","ProtectedRoute/index.js","ProtectedRoute/ProtectedRoute.jsx","assets/logo.png","assets/login2.png","store/localStorage.js","store/reducers/user.js","store/reducers/index.js","store/index.js","Login/Login.jsx","Login/index.js","assets/signup.png","Activate/Activate.jsx","Activate/index.js","Dashboard/MySecondaryNavigation.js","Dashboard/views/CreateMinistry.jsx","shared/Footer/Footer.jsx","shared/Footer/index.jsx","ResetPassword/ResetPassword.jsx","ResetPassword/index.js","shared/Header/Header.jsx","shared/Header/index.jsx","shared/MiddleHeader/MiddleHeader.jsx","shared/MiddleHeader/index.jsx","SuperAdmin/Landing.jsx","Dashboard/hooks/Tile.jsx","Dashboard/hooks/useFilterTiles.js","Dashboard/views/MinistryColDef/Action.jsx","Dashboard/views/Admin/Action.jsx","AdminDashboard/views/DepartmentColDef/Action.js","AdminDashboard/views/SubDepartmentColDef/Action.js","AdminDashboard/views/Staff/Action.jsx","ManageFile/views/IncomingColDef/Action.js","ManageFile/views/OutgoingColDef/Action.js","ManageFile/views/InProcessFileColDef/Action.js","ManageFile/views/SentFileColDef/Action.js","ManageFile/views/DelayedFileColDef/Action.js","ManageFile/views/Registry/Action.js","Dashboard/excelIcon.svg","Dashboard/Grid.jsx","Dashboard/Header/Header.jsx","Dashboard/Header/index.js","Dashboard/TableView/index.js","Dashboard/TableView/TableView.jsx","shared/utils/index.js","Dashboard/views/MinistryColDef/ministryColDef.js","Dashboard/views/Admin/adminColDef.js","AdminDashboard/views/DepartmentColDef/departmentColDef.js","AdminDashboard/views/SubDepartmentColDef/subDepartmentColDef.js","AdminDashboard/views/Staff/staffColDef.js","ManageFile/views/IncomingColDef/incomingColDef.js","ManageFile/views/OutgoingColDef/outgoingColDef.js","ManageFile/views/InProcessFileColDef/inProcessColDef.js","ManageFile/views/SentFileColDef/sentFileColDef.js","ManageFile/views/ArchivedFile/archivedFileColDef.js","ManageFile/views/DelayedFileColDef/delayedFileColDef.js","ManageFile/views/Registry/registryColDef.js","shared/columnDefs.js","Dashboard/views/MinistryTable.js","Dashboard/views/AdminTable.js","Dashboard/Dashboard.jsx","Dashboard/index.js","Dashboard/views/CreateAdmin.jsx","AdminDashboard/views/DepartmentTable.js","AdminDashboard/views/StaffTable.js","AdminDashboard/Dashboard.jsx","AdminDashboard/index.js","AdminDashboard/views/CreateDepartment.jsx","AdminDashboard/views/SubDepartment.js","AdminDashboard/views/CreateSubDepartment.jsx","AdminDashboard/views/CreateStaff.jsx","ManageFile/views/IncomingFile.js","ManageFile/views/OutgoingFile.js","ManageFile/views/PendingFile.js","ManageFile/views/SentFile.js","ManageFile/views/ArchivedFile.js","ManageFile/views/DelayedFile.js","ManageFile/views/Registry.js","ManageFile/Dashboard.jsx","ManageFile/index.js","ManageFile/views/ViewHistory.jsx","ManageFile/views/CreateFile.jsx","shared/MyMainNavigation.js","ManageFile/views/ForwardFile.jsx","App.js","reportWebVitals.js","index.js"],"names":["SET_USER_DATA","CLEAR_STORE","getUserData","data","dispatch","userId","axios","get","then","res","user","type","payload","logout","a","ProtectedRoute","isAllowed","props","to","stateName","state","serializedState","JSON","stringify","localStorage","setItem","removeItem","USER_STATE","initialState","getItem","parse","err","ls","action","newState","appReducer","combineReducers","rootReducer","undefined","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","Wrapper","styled","div","Logo","Login","useState","loading","setLoading","onSubmit","values","formData","email","password","post","isSuper","history","push","isAdmin","isStaff","console","log","toast","error","closeOnClick","autoClose","className","src","alt","style","width","height","active","withOverlay","class","justifyContent","alignItems","LoginIcon","validate","errors","value","render","onSave","valid","reset","fluid","xs","md","component","ReduxFormWrapper","inputComponent","TextInput","id","name","labelText","onClick","e","preventDefault","float","checked","cursor","paddingTop","Activate","confirmPassword","confirm","activationKey","code","message","activate","key","catch","SignUp","color","fontWeight","MyBannerNavigation","pageWidth","additional","l1Label","l1Link","l2Label","l2Link","l3Label","l3Link","l4Label","l4Link","pageTitle","tabs","Create","lastSaved","showErrors","admin","fetchAdmin","setState","location","edit","ministry","_id","put","goBack","scrollTo","this","MySecondaryNavigation","minHeight","spacing","mobilePageWidth","initialValues","show","noMargin","fontSize","sm","FieldWrapper","placeholder","input","meta","classNamePrefix","closeMenuOnSelect","options","getOptionValue","option","getOptionLabel","textAlign","margin","kind","padding","background","React","Component","withRouter","Footer","Date","getFullYear","ResetPassword","setCode","success","resetCode","handleSubmit","submitError","form","submitting","pristine","paddingBottom","Header","icon","iconHeaderAvatar","href","MiddleHeader","marginTop","closeButtonLabelText","placeHolderText","colourOptions","label","disabled","WarningIcon","span","StyledTile","warning","Tile","header","amount","role","amountLabel","defaultProps","useFilterTiles","filters","hideEmptyTiles","activeFilterIndex","setActiveFilterIndex","map","f","count","filter","d","comparator","length","filteredData","TilesWrapper","stretch","i","title","filterIndex","PositionLink","pathname","Action","request_status","reviewed_candidate","create_user","isAction","setAction","dispaly","borderRadius","border","marginLeft","iconChevronDown","fill","description","open","modalLabel","primaryButtonText","passiveModal","onRequestClose","onRequestSubmit","department","onValueChange","getState","onConfirm","reload","secondaryButtonText","wide","justification","setJustification","isAchive","setAchive","onAchive","onChange","target","onDelete","iconRestartGlyph","paddingLeft","iconEditGlyph","iconDeleteGlyph","iconAppServices","danger","defaultColDef","sortable","resizable","floatingFilter","headerHeight","suppressMenu","filterParams","newRowsAction","enableBrowserTooltips","Grid","_isMounted","api","params","onGridReady","sortModel","onResize","sizeColumnsToFit","onExport","config","allColumns","fileName","exportFileName","moment","format","columnKeys","exportedColumns","sheetName","exportDataAsExcel","addEventListener","removeEventListener","statusPanels","portalElement","document","getElementById","ReactDOM","createPortal","ExportButtonContent","Math","max","min","StyleRewrite","rowData","columnDefs","frameworkComponents","gridComponents","reactNext","suppressScrollOnNewData","sideBar","gridOptions","rowHeight","getContextMenuItems","statusBar","statusPanel","align","groupMultiAutoColumn","excelStyles","font","size","bold","uppercase","borders","borderBottom","lineStyle","weight","interior","pattern","alignment","horizontal","vertical","italic","connect","userRole","createGlobalStyle","HeaderWrapper","TableView","fetchData","gridConfig","middle","useEffect","getData","filteredApplications","filterTiles","globalFilterParams","filterOptions","textFormatter","r","toLowerCase","replace","RegExp","debounceMs","caseSensitive","suppressAndOrCondition","cellRenderBasedOnKey","gender","deptType","gradeLevel","fileType","createServiceFile","createManagementFile","headerName","lockPosition","__isExported","hide","editable","field","valueGetter","firstName","lastName","keyCreator","date1","date2","createdAt","toDateString","cellRenderer","cellRendererParams","staff","subDepartment","incoming","sentBy","originatingDept","originatingSubDept","sentDate","outgoing","receivingDept","receivingSubDept","receivedBy","pending","receivedDate","sent","createdDate","archived","archivedDate","delayed","delayedDept","delayedSubDept","delayedDate","getColumnDefs","viewName","ministryColDef","adminColDef","departmentColDef","staffColDef","incomingFile","outgoingFile","inProcessFile","sentFile","archivedFile","delayedFile","registryFile","col","def","customProps","colCopy","MinistryView","useSWR","applications","iconAddOutline","small","endpoint","Admin","trigger","listElReactRouter","index","selected","exact","handleTabClick","path","children","match","Dashboard","views","permissions","default","MinistryTable","AdminTable","defaultView","find","view","allowedViews","customTabContent","renderListElement","InnerWrapper","fetchMinistry","telephone","designation","View","iconDocument","StaffTable","fetchDept","fetchSubDept","val","subDeparment","filePerm","permission","mapData","p","fileNo","IncomingFile","OutgoingFile","SentFile","DelayedFile","ArchivedFile","Registry","fetchFile","file","date","focused","serviceType","serviceFileType","oldNumber","slice","fetchService","fileList","isDisabled","datePicker","SingleDatePicker","inputIconPosition","onDateChange","onFocusChange","numberOfMonths","showDefaultInputIcon","isOutsideRange","CustomWrapper","MainNav","closeMenu","child","current","onChangeSub","createRef","prevProps","prevState","locaction","showSbpMenu","logo","subNavigation","ellipsis","deptList","staffList","receiverId","designatedOfficer","sentTime","fetchDepartment","fetchStaff","App","timeOut","setTimeout","showModal","toggleModal","idleTimer","checkLoginStatus","logOut","timeout","isTimedOut","onIdle","_onIdle","bind","isLogged","comment","documentMode","fetcher","revalidateOnFocus","dedupingInterval","ref","element","debounce","MyMainNavigation","CreateMinistry","CreateAdmin","CreateStaff","AdminDashboard","CreateDepartment","CreateSubDepartment","ManageFile","CreateFile","ForwardFile","onSecondarySubmit","modalHeading","is_login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.d7b4e962.chunk.js","sourcesContent":["export const SET_USER_DATA = 'SET_USER_DATA'\r\nexport const CLEAR_STORE = 'CLEAR_STORE'\r\n\r\n\r\n","import axios from 'axios'\r\nimport {\r\n    SET_USER_DATA,\r\n    CLEAR_STORE,\r\n} from './actionTypes'\r\n\r\n\r\nconst setUserData = (user) => ({\r\n    type: SET_USER_DATA,\r\n    payload: user,\r\n})\r\n\r\n\r\nexport const clearStore = () => ({ type: CLEAR_STORE })\r\n\r\n\r\nexport const checkLoginStatus = () => {\r\n    return (dispatch) => {\r\n        return axios.get('/api/is-login').then((res) => {\r\n            const { is_login } = res.data\r\n            if (is_login) {\r\n                dispatch(getUserData())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserData = (data) => {\r\n    return (dispatch) => {\r\n        if (data.userId) {\r\n            axios.get(`/v1/user/${data.userId}`).then((res) => {\r\n                dispatch(setUserData(res.data))\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => \r\n        dispatch(clearStore())\r\n}\r\n","import ProtectedRoute from './ProtectedRoute.jsx'\r\n\r\nexport default ProtectedRoute\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router'\r\nconst ProtectedRoute = ({ isAllowed, ...props }) => {\r\n    return isAllowed ? <Route {...props} /> : <Redirect to=\"/login\" />\r\n}\r\n\r\nexport default ProtectedRoute\r\n","export default __webpack_public_path__ + \"static/media/logo.ae98358b.png\";","export default __webpack_public_path__ + \"static/media/login2.0a114d65.png\";","const loadState = (stateName) => {\r\n    try {\r\n        const serializedState = localStorage.getItem(stateName)\r\n        if (serializedState === null) {\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedState)\r\n    } catch (err) {\r\n        return undefined\r\n    }\r\n}\r\nconst saveState = (stateName, state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem(stateName, serializedState)\r\n    } catch {\r\n        // ignore write errors\r\n    }\r\n}\r\n\r\nconst clearState = (stateName) => {\r\n    try {\r\n        localStorage.removeItem(stateName)\r\n    } catch {\r\n        // ignore write errors\r\n    }\r\n}\r\nexport default {\r\n    loadState,\r\n    saveState,\r\n    clearState,\r\n}\r\n","import { SET_USER_DATA, CLEAR_STORE } from '../actions/actionTypes'\r\n\r\nimport ls from '../localStorage'\r\n\r\nconst USER_STATE = 'USER_STATE'\r\n\r\n// const initialState = ls.loadState(USER_STATE) || null\r\nconst initialState = ls.loadState(USER_STATE) || null\r\n\r\nconst user = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            const newState = {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n            // save user data to local storage\r\n            ls.saveState(USER_STATE, newState)\r\n            return newState\r\n        case CLEAR_STORE:\r\n            // when user logs out, clear local storage data\r\n            ls.clearState(USER_STATE)\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default user\r\n","import { combineReducers } from 'redux'\r\nimport user from './user'\r\n\r\nimport { CLEAR_STORE } from '../actions/actionTypes'\r\n\r\nconst appReducer = combineReducers({\r\n    user,\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    // when users log out, clear reset store to its initial state\r\n    if (action.type === CLEAR_STORE) {\r\n        state = undefined\r\n    }\r\n    return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n        : compose\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\r\n\r\nconst store = createStore(rootReducer, enhancer)\r\n\r\nexport default store\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Logo from '../assets/logo.png'\r\nimport LoginIcon from '../assets/login2.png'\r\nimport { Grid, Row, Col } from 'react-flexbox-grid'\r\nimport { Form, Field } from 'react-final-form'\r\nimport {\r\n    Checkbox,\r\n    FormGroup,\r\n    TextInput,\r\n    Loading,\r\n    ReduxFormWrapper,\r\n} from '@wfp/ui'\r\nimport { Link, Redirect  } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport store from '../store'\r\nimport {getUserData} from '../store/actions'\r\n\r\nconst Wrapper = styled.div`\r\n    .login {\r\n        width: 100vw;\r\n        height: 100vh;\r\n        background-color: #193A9D;\r\n        // background-image: url(${Logo})\r\n        color: #fff;\r\n        text-align: center;\r\n        &--banner {\r\n            width: 20px;\r\n            min-height: 20px;\r\n            margin: 0 auto;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            // padding: 30px;\r\n        }\r\n        &--title {\r\n            text-transform: uppercase;\r\n            font-weight: 600;\r\n            font-size: 1.6rem;\r\n            margin: 1rem 0;\r\n        }\r\n        &--border {\r\n            margin: 0 20rem 0 20rem;\r\n            align-items: center;\r\n            justify-content: center;\r\n            align-items: center;\r\n        }\r\n        &--description {\r\n            font-size: 0.8rem;\r\n            // margin: 1rem 0;\r\n            justify-content: center;\r\n            align-item: center;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n        &--paragraph {\r\n            font-size: 0.8rem;\r\n            margin-top: -2rem;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: ;\r\n            padding-bottom: 1rem;\r\n        }\r\n        &&--card {\r\n            align-items: center;\r\n            justify-content: ;\r\n            display: flex;\r\n            color: red;\r\n        }\r\n        .card {\r\n            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n            transition: 0.3s;\r\n            background-color: #fff;\r\n            color: #193A9D;\r\n            padding: 1rem;\r\n            border-radius: 10px;\r\n          }\r\n        .card:hover {\r\n            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\r\n        }\r\n        .container {\r\n            padding: 2px 16px;\r\n        }\r\n        .button {\r\n            padding: 1rem;\r\n            background-color: #1841BA;\r\n            color: #fff;\r\n            font-weight: bold;\r\n            border-radius: 0.5rem;\r\n            cursor: pointer;\r\n        }\r\n        .link{\r\n            color: #fff;\r\n        }\r\n\r\n        .footer{\r\n            // display: flex;\r\n            color: #AEAFB0;\r\n            font-size: 12px;\r\n            padding-top: 1rem;\r\n            // position: absolute;\r\n        }\r\n        .wfp--label{\r\n            color: #1841BA\r\n        }\r\n        .wfp--input{\r\n            border-radius: 0.5rem;\r\n        }\r\n}\r\n`\r\n\r\nconst Login = (props) => {\r\n    const [ loading, setLoading ]= useState(false);\r\n\r\n    const onSubmit = async (values) => {\r\n        setLoading(true);\r\n        let formData;\r\n        try {\r\n            formData={\r\n                email: values.email,\r\n                password: values.password\r\n            }\r\n\r\n            await axios.post(`/v1/account/login`, formData)\r\n            .then((data)=> {\r\n                if(data.data){\r\n                    store.dispatch(getUserData(data.data))\r\n                }\r\n                if(data.data && data.data.isSuper){\r\n                    props.history.push('/ministry');\r\n                }\r\n                else if(data.data && data.data.isAdmin){\r\n                    props.history.push('/department');\r\n                }\r\n                else if(data.data && data.data.isStaff){\r\n                    props.history.push('/file');\r\n                }\r\n                setLoading(false)\r\n            });  \r\n        } catch (err) {\r\n            console.log('Ooops! login failed', err)\r\n            toast.error('Ooops! login failed', {closeOnClick: true, autoClose: 1000 }); \r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div className=\"login\">\r\n                <div className=\"login--banner\">\r\n                    <img src={Logo} alt=\"Logo\" style={{ width: 150, height: 150 }} />\r\n                </div>\r\n                <div className='login--border'>\r\n                    <p className=\"login--paragraph\">\r\n                        Introducing Traquer, a passionate bird that helps you watch over your files\r\n                        while you go about your daily business. Traquer is a location file tracking system.\r\n                        A simulation of manual file movement to electronic file monitoring\r\n                    </p>\r\n                </div>\r\n            <div className='login--border'>\r\n                <Loading active={loading} withOverlay={true} />\r\n                    <div >\r\n                        <div class=\"card\">\r\n                            <div style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                                <img src={LoginIcon} alt=\"Logo\" style={{ width: '30%', height: '30%', }} />\r\n                            </div>\r\n                            <div class=\"container\">\r\n                                \r\n                            <Form\r\n                                onSubmit={onSubmit}\r\n                                validate={(values) => {\r\n                                    const errors = {}\r\n                                    const {\r\n                                        password,\r\n                                        email\r\n                                    } = values\r\n\r\n                                    if (!email) {\r\n                                        errors.email = {\r\n                                            value:\r\n                                                'Email required',\r\n                                        }\r\n                                    } \r\n                                    if (!password) {\r\n                                        errors.password = {\r\n                                            value:\r\n                                                'Password required',\r\n                                        }\r\n                                    } \r\n                                    return errors\r\n                                }}\r\n                                render={({ values, onSave, valid, reset }) => (\r\n                                    <form>\r\n                            <Grid fluid>\r\n                                <Row>\r\n                                    <Col xs={2} md={2} />\r\n                                    <Col xs={8} md={8}>\r\n                                        <Form\r\n                                            onSubmit={onSubmit}\r\n                                            render={({\r\n                                                values,\r\n                                                errors,\r\n                                            }) => (\r\n                                                <form\r\n                                                    className=\"wfp--form-long\"\r\n                                                    // onSubmit={handleSubmit}\r\n                                                >\r\n                                                    <div>\r\n                                                        <FormGroup\r\n                                                            className=\"some-class\"\r\n                                                        >\r\n                                                            <Field\r\n                                                                component={\r\n                                                                    ReduxFormWrapper\r\n                                                                }\r\n                                                                inputComponent={\r\n                                                                    TextInput\r\n                                                                }\r\n                                                                id=\"email\"\r\n                                                                name=\"email\"\r\n                                                                type=\"text\"\r\n                                                                labelText=\"Email\"\r\n                                                            />\r\n\r\n                                                            <Field\r\n                                                                component={\r\n                                                                    ReduxFormWrapper\r\n                                                                }\r\n                                                                inputComponent={\r\n                                                                    TextInput\r\n                                                                }\r\n                                                                id=\"password\"\r\n                                                                name=\"password\"\r\n                                                                type=\"password\"\r\n                                                                labelText=\"Password\"\r\n                                                            />\r\n\r\n                                                            <div\r\n                                                                className=\"button\"\r\n                                                                type=\"submit\"\r\n                                                                onClick={(e) => {\r\n                                                                    e.preventDefault()\r\n                                                                    onSubmit(\r\n                                                                        values\r\n                                                                    )\r\n                                                                }}\r\n                                                            >\r\n                                                                LOGIN\r\n                                                            </div>\r\n\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                </form>\r\n                                             )}\r\n                                             />\r\n\r\n                                             <div className='footer' >\r\n                                                <div style={{ float: 'left'}}>\r\n                                                <Checkbox\r\n                                                    checked\r\n                                                    id=\"check-2\"\r\n                                                    labelText=\"Remember me\"\r\n                                                    // onChange={function noRefCheck(){}}\r\n                                                />\r\n                                                </div>\r\n                                                <div style={{ \r\n                                                    float: 'right',\r\n                                                    cursor: 'pointer'\r\n                                                     }}\r\n                                                > \r\n                                                    <Link to='/reset-password'>\r\n                                                        Forgot password?\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                         </Col>\r\n                                         <Col xs={2} md={2} />\r\n                                     </Row>\r\n                                 </Grid>  \r\n                                 </form>\r\n                                )}\r\n                            />\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                    <div style={{ paddingTop: 20 }} />\r\n                    <Link \r\n                        className='link'\r\n                        to={'/activate'}\r\n                    >\r\n                        Activate account\r\n                    </Link> \r\n                </div>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import Login from './Login.jsx'\r\n\r\nexport default Login\r\n","export default __webpack_public_path__ + \"static/media/signup.0b685196.png\";","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Logo from '../assets/logo.png'\r\nimport SignUp from '../assets/signup.png'\r\nimport { Grid, Row, Col } from 'react-flexbox-grid'\r\nimport { Form, Field } from 'react-final-form'\r\nimport {\r\n    Checkbox,\r\n    FormGroup,\r\n    TextInput,\r\n    Loading,\r\n    ReduxFormWrapper,\r\n} from '@wfp/ui'\r\nimport { Link  } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Wrapper = styled.div`\r\n    .login {\r\n        // width: 100vw;\r\n        // height: 100vh;\r\n        background-color: #193A9D;\r\n        // background-image: url(${Logo})\r\n        color: #fff;\r\n        text-align: center;\r\n        &--banner {\r\n            width: 20px;\r\n            min-height: 20px;\r\n            margin: 0 auto;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            // padding: 30px;\r\n        }\r\n        &--title {\r\n            text-transform: uppercase;\r\n            font-weight: 600;\r\n            font-size: 1.6rem;\r\n            margin: 1rem 0;\r\n        }\r\n        &--border {\r\n            margin: 0 20rem 0 20rem;\r\n            align-items: center;\r\n            justify-content: center;\r\n            align-items: center;\r\n        }\r\n        &--description {\r\n            font-size: 0.8rem;\r\n            // margin: 1rem 0;\r\n            justify-content: center;\r\n            align-item: center;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n        &--paragraph {\r\n            font-size: 0.8rem;\r\n            margin-top: -2rem;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: ;\r\n            padding-bottom: 1rem;\r\n        }\r\n        &&--card {\r\n            align-items: center;\r\n            justify-content: ;\r\n            display: flex;\r\n            color: red;\r\n        }\r\n        .card {\r\n            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n            transition: 0.3s;\r\n            background-color: #fff;\r\n            color: #193A9D;\r\n            padding: 1rem;\r\n            border-radius: 10px;\r\n          }\r\n        .card:hover {\r\n            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\r\n        }\r\n        .container {\r\n            padding: 2px 16px;\r\n        }\r\n        .button {\r\n            padding: 1rem;\r\n            background-color: #1841BA;\r\n            color: #fff;\r\n            font-weight: bold;\r\n            border-radius: 0.5rem;\r\n            cursor: pointer;\r\n        }\r\n        .link{\r\n            color: #fff;\r\n        }\r\n\r\n        .footer{\r\n            // display: flex;\r\n            color: #AEAFB0;\r\n            font-size: 14px;\r\n            // padding-top: 1rem;\r\n            padding-bottom: 2rem;\r\n        }\r\n        .wfp--label{\r\n            color: #1841BA\r\n        }\r\n        .wfp--input{\r\n            border-radius: 0.5rem;\r\n        }\r\n}\r\n`\r\n\r\nconst Login = (props) => {\r\n    const [ loading, setLoading ]= useState(false);\r\n\r\n    const onSubmit = async (values) => {\r\n        setLoading(true)\r\n        let formData;\r\n        try {\r\n            formData={\r\n                password: values.password,\r\n                confirmPassword: values.confirm\r\n            }\r\n\r\n            await axios.post(`/v1/user/validate`, {activationKey: values.code})\r\n            .then(async (data)=> {\r\n                if(data.data.message && data.data.message == 'success'){\r\n                    return activate(data.data, formData)\r\n                }\r\n                setLoading(false)\r\n\r\n                return toast.error('Ooops! login failed', {closeOnClick: true, autoClose: 1000 }); \r\n            });  \r\n        } catch (err) {\r\n            console.log('Ooops! activation error', err)\r\n            toast.error('Ooops! activation failed', {closeOnClick: true, autoClose: 1000 }); \r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const activate = async (data, formData)=>{\r\n        const { userId } = data.data.key;\r\n        const { email } = data.data.user;\r\n        await axios.post(`/v1/user/activate/${userId}`, {...formData, email })\r\n        .then(res=>{\r\n            if(res.data && res.data.message == 'success'){\r\n                toast('Account activation successful', {closeOnClick: true, autoClose: 1000 }); \r\n                props.history.push('/login');\r\n            }\r\n\r\n            toast.error('Ooops! activation failed', {closeOnClick: true, autoClose: 1000 });\r\n            \r\n            setLoading(false)\r\n        })\r\n        .catch(e=> {\r\n            toast.error('Ooops! activation failed', {closeOnClick: true, autoClose: 1000 })\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div className=\"login\">\r\n                <div className=\"login--banner\">\r\n                    <img src={Logo} alt=\"Logo\" style={{ width: 150, height: 150 }} />\r\n                </div>\r\n                <div className='login--border'>\r\n                    <p className=\"login--paragraph\">\r\n                        Introducing Traquer, a passionate bird that helps you watch over your files\r\n                        while you go about your daily business. Traquer is a location file tracking system.\r\n                        A simulation of manual file movement to electronic file monitoring\r\n                    </p>\r\n                </div>\r\n            <div className='login--border'>\r\n                <Loading active={loading} withOverlay={true} />\r\n                    <div >\r\n                        <div class=\"card\">\r\n                            <div style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                                <img src={SignUp} alt=\"Logo\" style={{ width: '30%', height: '30%', }} />\r\n                            </div>\r\n                            <div class=\"container\">\r\n                            <Form\r\n                                onSubmit={onSubmit}\r\n                                // initialValues={formData}\r\n                                validate={(values) => {\r\n                                    const errors = {}\r\n                                    const {\r\n                                        password,\r\n                                        email\r\n                                    } = values\r\n\r\n                                    if (!email) {\r\n                                        errors.email = {\r\n                                            value:\r\n                                                'Email required',\r\n                                        }\r\n                                    } \r\n                                    if (!password) {\r\n                                        errors.password = {\r\n                                            value:\r\n                                                'Password required',\r\n                                        }\r\n                                    } \r\n                                    return errors\r\n                                }}\r\n                                render={({ values, onSave, valid, reset }) => (\r\n                                    <form>\r\n                            <Grid fluid>\r\n                                <Row>\r\n                                    <Col xs={2} md={2} />\r\n                                    <Col xs={8} md={8}>\r\n                                        <Form\r\n                                            onSubmit={onSubmit}\r\n                                            render={({\r\n                                                values,\r\n                                                errors,\r\n                                            }) => (\r\n                                                <form\r\n                                                    className=\"wfp--form-long\"\r\n                                                >\r\n                                                    <div>\r\n                                                        <FormGroup\r\n                                                            className=\"some-class\"\r\n                                                        >\r\n                                                            <Field\r\n                                                                component={\r\n                                                                    ReduxFormWrapper\r\n                                                                }\r\n                                                                inputComponent={\r\n                                                                    TextInput\r\n                                                                }\r\n                                                                id=\"code\"\r\n                                                                name=\"code\"\r\n                                                                type=\"text\"\r\n                                                                labelText=\"Activation code\"\r\n                                                            />\r\n\r\n                                                            <Field\r\n                                                                component={\r\n                                                                    ReduxFormWrapper\r\n                                                                }\r\n                                                                inputComponent={\r\n                                                                    TextInput\r\n                                                                }\r\n                                                                id=\"password\"\r\n                                                                name=\"password\"\r\n                                                                type=\"password\"\r\n                                                                labelText=\"Password\"\r\n                                                            />\r\n\r\n                                                            <Field\r\n                                                                component={\r\n                                                                    ReduxFormWrapper\r\n                                                                }\r\n                                                                inputComponent={\r\n                                                                    TextInput\r\n                                                                }\r\n                                                                id=\"confirm\"\r\n                                                                name=\"confirm\"\r\n                                                                type=\"password\"\r\n                                                                labelText=\"Confirm Password\"\r\n                                                            />\r\n\r\n                                                            <div\r\n                                                                className=\"button\"\r\n                                                                type=\"submit\"\r\n                                                                onClick={(e) => {\r\n                                                                    e.preventDefault()\r\n                                                                    onSubmit(\r\n                                                                        values\r\n                                                                    )\r\n                                                                }}\r\n                                                            >\r\n                                                                SIGN UP\r\n                                                            </div>\r\n\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                </form>\r\n                                             )}\r\n                                             />\r\n                                         </Col>\r\n                                         <Col xs={2} md={2} />\r\n                                     </Row>\r\n                                 </Grid> \r\n                                 </form>\r\n                                )}\r\n                            /> \r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                    <div style={{ paddingTop: 20 }} />\r\n                    <div className='footer' >\r\n                            Already registered?\r\n                        <span style={{ color: 'white', fontWeight: 'bold' }}>\r\n                            {`  `}\r\n                            <Link className='link' to='/login'>Login</Link>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import Activate from './Activate.jsx'\r\n\r\nexport default Activate\r\n","import React from 'react'\r\nimport {\r\n    SecondaryNavigation,\r\n    SecondaryNavigationTitle,\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    BreadcrumbHome,\r\n} from '@wfp/ui'\r\nimport { Link as RouteLink } from 'react-router-dom'\r\n\r\nconst MyBannerNavigation = (props) => {\r\n    return (\r\n        <SecondaryNavigation pageWidth=\"lg\" additional={props.additional}>\r\n            {props.l1Label && (\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <RouteLink to={'#'} className=\"wfp--link\">\r\n                            <BreadcrumbHome />\r\n                        </RouteLink>\r\n                    </BreadcrumbItem>\r\n                    {props.l1Label && (\r\n                        <BreadcrumbItem>\r\n                            <RouteLink to={props.l1Link}>\r\n                                {props.l1Label}\r\n                            </RouteLink>\r\n                        </BreadcrumbItem>\r\n                    )}\r\n\r\n                    {props.l2Label && (\r\n                        <BreadcrumbItem>\r\n                            <RouteLink to={props.l2Link}>\r\n                                {props.l2Label}\r\n                            </RouteLink>\r\n                        </BreadcrumbItem>\r\n                    )}\r\n\r\n                    {props.l3Label && (\r\n                        <BreadcrumbItem>\r\n                            <RouteLink to={props.l3Link}>\r\n                                {props.l3Label}\r\n                            </RouteLink>\r\n                        </BreadcrumbItem>\r\n                    )}\r\n\r\n                    {props.l4Label && (\r\n                        <BreadcrumbItem>\r\n                            <RouteLink to={props.l4Link}>\r\n                                {props.l4Label}\r\n                            </RouteLink>\r\n                        </BreadcrumbItem>\r\n                    )}\r\n                </Breadcrumb>\r\n            )}\r\n            {props.pageTitle ? (\r\n                <SecondaryNavigationTitle>\r\n                    {props.pageTitle}\r\n                </SecondaryNavigationTitle>\r\n            ) : null}\r\n            {props.tabs ? props.tabs : null}\r\n        </SecondaryNavigation>\r\n    )\r\n}\r\n\r\nexport default MyBannerNavigation\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport _ from 'lodash'\r\nimport { Row, Col } from 'react-flexbox-grid'\r\nimport { toast } from 'react-toastify'\r\nimport Select from 'react-select'\r\n\r\nimport MySecondaryNavigation from '../MySecondaryNavigation'\r\nimport {\r\n    Wrapper,\r\n    Loading,\r\n    Module,\r\n    ModuleHeader,\r\n    ModuleBody,\r\n    ModuleFooter,\r\n    Button,\r\n    FormGroup,\r\n    TextInput,\r\n    ReduxFormWrapper,\r\n} from '@wfp/ui'\r\nimport { iconCloseOutline } from '@wfp/icons'\r\n\r\nimport { Form, FormSpy, Field } from 'react-final-form'\r\n\r\n\r\nclass Create extends React.Component {\r\n    state = {\r\n        lastSaved: null,\r\n        formData: null,\r\n        showErrors: false,\r\n        loading: false,\r\n        admin: []\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        this.fetchAdmin()\r\n\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n\r\n        if(state && state.edit && state.data){\r\n            this.setState({\r\n                formData: {\r\n                    ministry: state.data.name,\r\n                    admin: state.data.userId\r\n                }\r\n            })\r\n        };\r\n    }\r\n\r\n    fetchAdmin=  async () => {\r\n        try {\r\n            axios.get(`/v1/user/admin/admin-list`)\r\n            .then(data=> this.setState({ admin : data.data.data }))\r\n        } catch (err) {\r\n            console.log('Error while loading ministry', err)\r\n        }\r\n    }\r\n    \r\n    onSubmit = async (values) => {\r\n        this.setState({ loading: true });\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n        let formData;\r\n       \r\n        try {\r\n            if(state && state.edit){\r\n                formData={\r\n                    name: values.ministry,\r\n                    userId: values.admin._id\r\n                }\r\n    \r\n                await axios.put(`/v1/ministry/update/${state.id}`, formData)\r\n                .then(()=> this.setState({ loading: false }))\r\n                toast('Successfully updated a ministry', {closeOnClick: true, autoClose: 1000 });\r\n                this.props.history.goBack()\r\n            }\r\n            else{\r\n                await axios.post(`/v1/ministry/add`, { name: values.ministry })\r\n                .then(()=> this.setState({ loading: false }))\r\n                toast('Successfully created a ministry', {closeOnClick: true, autoClose: 1000 });\r\n                this.props.history.goBack()\r\n            }\r\n            \r\n            \r\n        } catch (err) {\r\n            console.log('Ooops! error occurred, please try again', err)\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        const { showErrors } = this.state;\r\n        const { formData, loading, admin } = this.state;\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n        return (\r\n            <>\r\n                <MySecondaryNavigation\r\n                    l1Label=\"Ministry\"\r\n                    l1Link=\"/ministry\"\r\n                    l2Label={  state && state.edit ? 'Update ministry' : 'Create ministry' }\r\n                    l2Link=\"#\"\r\n                    pageTitle={  state && state.edit ? 'Update ministry' : 'Create ministry' }\r\n                />\r\n                {loading ? (\r\n                    <Loading active={true} withOverlay={true} />\r\n                ) : (\r\n                    <div\r\n                        className=\"wfp--module__background\"\r\n                        style={{ minHeight: '400px' }}\r\n                    >\r\n                        <Wrapper\r\n                            pageWidth=\"lg\"\r\n                            spacing=\"md\"\r\n                            mobilePageWidth=\"full\"\r\n                        >\r\n                            <Form\r\n                                onSubmit={this.onSubmit}\r\n                                initialValues={formData}\r\n                                validate={(values) => {\r\n                                    const errors = {}\r\n                                    const {\r\n                                        ministry,\r\n                                    } = values\r\n\r\n                                    if (!ministry) {\r\n                                        errors.ministry = {\r\n                                            value: 'Ministry name is required',\r\n                                            show: showErrors,\r\n                                        }\r\n                                    } \r\n                                    return errors\r\n                                }}\r\n                                render={({ values, onSave, valid, reset }) => (\r\n                                    <form>\r\n                                        <Module noMargin>\r\n                                            <ModuleHeader>\r\n                                                <span style={{ fontSize: 20 }}>\r\n                                                    {  state && state.edit ? 'Update ministry' : 'Create ministry' }\r\n                                                </span>\r\n                                            </ModuleHeader>\r\n                                            <ModuleBody>\r\n                                                <Col \r\n                                                    md={6}\r\n                                                    sm={6}\r\n                                                    xs={12}\r\n                                                >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"ministry\"\r\n                                                        name=\"ministry\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"Ministry name\"\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                            {\r\n                                                state && state.edit ?\r\n                                                (\r\n                                                    <Col \r\n                                                        md={6}\r\n                                                        sm={6}\r\n                                                        xs={12}\r\n                                                    >\r\n                                                        <FieldWrapper>\r\n                                                            <Field\r\n                                                                component={\r\n                                                                    ReduxFormWrapper\r\n                                                                }\r\n                                                                name=\"admin\"\r\n                                                                labelText=\"Admin\"\r\n                                                                placeholder=\"Select designated admin\"\r\n                                                            >\r\n                                                                {({\r\n                                                                    input,\r\n                                                                    meta,\r\n                                                                }) => (\r\n                                                                    <>\r\n                                                                    <div className='wfp--label'>Designated Admin</div>\r\n                                                                    <Select\r\n                                                                        className=\"wfp--react-select-container auto-width\"\r\n                                                                        classNamePrefix=\"wfp--react-select\"\r\n                                                                        closeMenuOnSelect={true}\r\n                                                                        // onChange={(vars) => {\r\n                                                                        //     this.languageChange(vars, originalOnChange)\r\n                                                                        // }}\r\n                                                                        options={admin}\r\n                                                                        getOptionValue={(option) =>\r\n                                                                            option['_id'] \r\n                                                                        }\r\n                                                                        getOptionLabel={(option) =>\r\n                                                                            option['firstName'] + \" \" + option['lastName'] \r\n                                                                        }\r\n                                                                        {...input}\r\n                                                                        {...meta}\r\n                                                                    />\r\n                                                                    </>\r\n                                                                )}\r\n                                                            </Field>\r\n                                                        </FieldWrapper>\r\n                                                    </Col>\r\n                                                )\r\n                                                : null\r\n                                            }\r\n                                            </ModuleBody>\r\n                                            <ModuleFooter>\r\n                                                <div></div>\r\n                                                <div\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        textAlign: 'right',\r\n                                                        margin: '1.5rem 0',\r\n                                                    }}\r\n                                                >\r\n                                                    <Button\r\n                                                        kind=\"secondary\"\r\n                                                        onClick={() =>\r\n                                                            this.props.history.goBack()\r\n                                                        }\r\n                                                    >\r\n                                                        Go back\r\n                                                    </Button>\r\n\r\n                                                    <Button\r\n                                                        // disabled={!valid}\r\n                                                        onClick={(e) => {\r\n                                                            e.preventDefault()\r\n                                                            this.onSubmit(\r\n                                                                values\r\n                                                            )\r\n                                                        }}\r\n                                                    >\r\n                                                       { state && state.edit ? 'Update' : 'Create' } \r\n                                                    </Button>\r\n                                                </div>\r\n                                            </ModuleFooter>\r\n                                        </Module>\r\n                                        {showErrors && (\r\n                                            <div\r\n                                                style={{\r\n                                                    padding: '5px',\r\n                                                    width: '100%',\r\n                                                    background: '#C5192D',\r\n                                                    color: 'white',\r\n                                                    textAlign: 'center',\r\n                                                }}\r\n                                            >\r\n                                                Please fill in all required\r\n                                                fields\r\n                                            </div>\r\n                                        )}\r\n                                    </form>\r\n                                )}\r\n                            />\r\n                        </Wrapper>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Create)\r\nconst FieldWrapper = styled.div`\r\n    margin-bottom: 30px;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\n    .footer {\r\n        font-family: \"Open Sans\",sans-serif;\r\n        border-top: 2px solid #fff;\r\n        // background-color: #1841BA;\r\n        z-index: 5000;\r\n        padding: 1.25rem 0;\r\n        font-size: 12px;\r\n    }\r\n}\r\n.wrapper {\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n    margin: auto;\r\n    width: 100%;\r\n}\r\n.wrapper--width-lg {\r\n    max-width: 1200px;\r\n}\r\n.footer__content {\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 3.5rem;\r\n    width: 100%;\r\n    color: #1841BA;\r\n}\r\n`\r\n\r\nconst Header = (props)=>{\r\n\r\n    return(\r\n        <Wrapper >\r\n            <footer className='footer'>\r\n                <div className='wrapper wrapper--width-lg'>\r\n                    <div className='footer__content'>\r\n                        Copyright {new Date().getFullYear()} &#64; Traquer\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Header;","import Footer from './Footer'\r\n\r\nexport default Footer;","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Logo from '../assets/logo.png'\r\nimport SignUp from '../assets/signup.png'\r\nimport { Grid, Row, Col } from 'react-flexbox-grid'\r\nimport { Form, Field } from 'react-final-form'\r\nimport {\r\n    Checkbox,\r\n    FormGroup,\r\n    TextInput,\r\n    Loading,\r\n    ReduxFormWrapper,\r\n} from '@wfp/ui'\r\nimport { Link  } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Wrapper = styled.div`\r\n    .login {\r\n        width: 100vw;\r\n        height: 100vh;\r\n        background-color: #193A9D;\r\n        // background-image: url(${Logo})\r\n        color: #fff;\r\n        text-align: center;\r\n        &--banner {\r\n            width: 20px;\r\n            min-height: 20px;\r\n            margin: 0 auto;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            // padding: 30px;\r\n        }\r\n        &--title {\r\n            text-transform: uppercase;\r\n            font-weight: 600;\r\n            font-size: 1.6rem;\r\n            margin: 1rem 0;\r\n        }\r\n        &--border {\r\n            margin: 0 20rem 0 20rem;\r\n            align-items: center;\r\n            justify-content: center;\r\n            align-items: center;\r\n        }\r\n        &--description {\r\n            font-size: 0.8rem;\r\n            // margin: 1rem 0;\r\n            justify-content: center;\r\n            align-item: center;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n        &--paragraph {\r\n            font-size: 1rem;\r\n            margin-top: 0rem;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content:center;\r\n            padding-bottom: 1rem;\r\n        }\r\n        &&--card {\r\n            align-items: center;\r\n            justify-content: ;\r\n            display: flex;\r\n            color: red;\r\n        }\r\n        .card {\r\n            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n            transition: 0.3s;\r\n            background-color: #fff;\r\n            color: #193A9D;\r\n            padding: 1rem;\r\n            border-radius: 10px;\r\n          }\r\n        .card:hover {\r\n            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\r\n        }\r\n        .container {\r\n            padding: 2px 16px;\r\n        }\r\n        .button {\r\n            padding: 1rem;\r\n            background-color: #1841BA;\r\n            color: #fff;\r\n            font-weight: bold;\r\n            border-radius: 0.5rem;\r\n            cursor: pointer;\r\n        }\r\n        .link{\r\n            color: #fff;\r\n        }\r\n\r\n        .footer{\r\n            // display: flex;\r\n            color: #AEAFB0;\r\n            font-size: 14px;\r\n            // padding-top: 1rem;\r\n            padding-bottom: 2rem;\r\n        }\r\n        .wfp--label{\r\n            color: #1841BA\r\n        }\r\n        .wfp--input{\r\n            border-radius: 0.5rem;\r\n        }\r\n}\r\n`\r\n\r\nconst Login = (props) => {\r\n    const [ loading, setLoading ]= useState(false);\r\n    const [ code, setCode ] = useState(false);\r\n\r\n    const onSubmit = async (values) => {\r\n        setLoading(true);\r\n        let formData;\r\n        try {\r\n            formData={\r\n                email: values.email,\r\n            }\r\n\r\n            await axios.post(`/v1/account/forgot`, formData)\r\n            .then((data)=> {\r\n                if(data.data.success){\r\n                    setCode(true)\r\n                }\r\n                else{\r\n                    toast.error('Ooops! error occurred. Please try again', {closeOnClick: true, autoClose: 1000 }); \r\n                }\r\n                setLoading(false)\r\n            });  \r\n        } catch (err) {\r\n            console.log('Error occurred', err)\r\n            toast.error('Ooops! erro occured', {closeOnClick: true, autoClose: 1000 }); \r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const resetCode = async (values) => {\r\n        setLoading(true);\r\n        let formData;\r\n        try {\r\n            formData={\r\n                password: values.password,\r\n                confirmPassword: values.confirm\r\n            }\r\n\r\n            await axios.post(`/v1/account/reset/${values.code}`, formData)\r\n            .then((data)=> {\r\n                if(data.data.success){\r\n                    toast('Successfully reset password', {closeOnClick: true, autoClose: 1000 });\r\n                    props.history.push('/login');\r\n                }\r\n                else{\r\n                    data.data.message ?\r\n                    toast.error(data.data.message, {closeOnClick: true, autoClose: 1000 })\r\n                    : toast.error('Ooops! error occurred. Please try again', {closeOnClick: true, autoClose: 1000 }); \r\n                }\r\n                setLoading(false)\r\n            });  \r\n        } catch (err) {\r\n            console.log('Error occurred', err)\r\n            toast.error('Ooops! erro occured', {closeOnClick: true, autoClose: 1000 }); \r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <Wrapper>\r\n            <div className=\"login\">\r\n                <div className=\"login--banner\">\r\n                    <img src={Logo} alt=\"Logo\" style={{ width: 150, height: 150 }} />\r\n                </div>\r\n                <div className='login--border'>\r\n                    <p className=\"login--paragraph\">\r\n                        A code will be sent to your email address.\r\n                    </p>\r\n                </div>\r\n            <div className='login--border'>\r\n            <Loading active={loading} withOverlay={true} />\r\n                    <div >\r\n                        <div class=\"card\">\r\n                            <div style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                                <img src={SignUp} alt=\"Logo\" style={{ width: '30%', height: '30%', }} />\r\n                            </div>\r\n                            <div class=\"container\">\r\n                                \r\n                            <Form\r\n                                onSubmit={onSubmit}\r\n                                validate={(values) => {\r\n                                    const errors = {}\r\n                                    const {\r\n                                        password,\r\n                                        email\r\n                                    } = values\r\n\r\n                                    if (!email) {\r\n                                        errors.email = {\r\n                                            value:\r\n                                                'Email required',\r\n                                        }\r\n                                    } \r\n                                    if (!password) {\r\n                                        errors.password = {\r\n                                            value:\r\n                                                'Password required',\r\n                                        }\r\n                                    } \r\n                                    return errors\r\n                                }}\r\n                                render={({ values, onSave, valid, reset }) => (\r\n                                    <form>\r\n                            <Grid fluid>\r\n                                <Row>\r\n                                    <Col xs={2} md={2} />\r\n                                    <Col xs={8} md={8}>\r\n                                        <Form\r\n                                            onSubmit={onSubmit}\r\n                                            render={({\r\n                                                handleSubmit,\r\n                                                submitError,\r\n                                                form,\r\n                                                submitting,\r\n                                                pristine,\r\n                                                values,\r\n                                                errors,\r\n                                            }) => (\r\n                                                <form\r\n                                                    className=\"wfp--form-long\"\r\n                                                    // onSubmit={handleSubmit}\r\n                                                >\r\n                                                    { code == false ? (\r\n                                                        <div>\r\n                                                        <FormGroup\r\n                                                            className=\"some-class\"\r\n                                                        >\r\n                                                            <Field\r\n                                                                component={\r\n                                                                    ReduxFormWrapper\r\n                                                                }\r\n                                                                inputComponent={\r\n                                                                    TextInput\r\n                                                                }\r\n                                                                id=\"email\"\r\n                                                                name=\"email\"\r\n                                                                type=\"text\"\r\n                                                                labelText=\"Email\"\r\n                                                            />\r\n\r\n                                                            <div style={{\r\n                                                                paddingBottom: 20\r\n                                                            }}>\r\n                                                                <div\r\n                                                                    className=\"button\"\r\n                                                                    type=\"submit\"\r\n                                                                    onClick={()=> onSubmit(values)}\r\n                                                                >\r\n                                                                    SUBMIT\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </FormGroup>\r\n                                                    </div>)\r\n                                                    :\r\n                                                    (\r\n                                                    <div>\r\n                                                        <FormGroup\r\n                                                            className=\"some-class\"\r\n                                                        >\r\n                                                            <Field\r\n                                                                component={\r\n                                                                    ReduxFormWrapper\r\n                                                                }\r\n                                                                inputComponent={\r\n                                                                    TextInput\r\n                                                                }\r\n                                                                id=\"code\"\r\n                                                                name=\"code\"\r\n                                                                type=\"text\"\r\n                                                                labelText=\"Activation code\"\r\n                                                            />\r\n\r\n                                                            <Field\r\n                                                                component={\r\n                                                                    ReduxFormWrapper\r\n                                                                }\r\n                                                                inputComponent={\r\n                                                                    TextInput\r\n                                                                }\r\n                                                                id=\"password\"\r\n                                                                name=\"password\"\r\n                                                                type=\"password\"\r\n                                                                labelText=\"New Password\"\r\n                                                            />\r\n\r\n                                                            <Field\r\n                                                                component={\r\n                                                                    ReduxFormWrapper\r\n                                                                }\r\n                                                                inputComponent={\r\n                                                                    TextInput\r\n                                                                }\r\n                                                                id=\"confirm\"\r\n                                                                name=\"confirm\"\r\n                                                                type=\"password\"\r\n                                                                labelText=\"Confirm Password\"\r\n                                                            />\r\n\r\n                                                            <div style={{\r\n                                                                paddingBottom: 10\r\n                                                            }}>\r\n                                                                <div\r\n                                                                    className=\"button\"\r\n                                                                    type=\"submit\"\r\n                                                                    onClick={()=> resetCode(values)}\r\n                                                                >\r\n                                                                    SUBMIT\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </FormGroup>\r\n                                                    </div>\r\n                                                )}\r\n                                                </form>\r\n                                             )}\r\n                                             />\r\n                                         </Col>\r\n                                         <Col xs={2} md={2} />\r\n                                     </Row>\r\n                                 </Grid>  \r\n                                 </form>\r\n                                )}\r\n                            />\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                    <div style={{ paddingTop: 20 }} />\r\n                    {/* <div className='footer' >\r\n                            Already registered?\r\n                        <span style={{ color: 'white', fontWeight: 'bold' }}>\r\n                            {`  `}\r\n                            <Link className='link' to='/login'>Login</Link>\r\n                        </span>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import ResetPassword from './ResetPassword.jsx'\r\n\r\nexport default ResetPassword\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport\r\n  {iconHeaderAvatar}\r\nfrom '@wfp/icons'\r\nimport { Icon } from '@wfp/ui';\r\n\r\nconst Wrapper = styled.div`\r\n    background-color: #EEF1FA;\r\n    color: #1841BA;\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    text-align: right;\r\n    padding-right: 10rem;\r\n    font-size: 14px;\r\n    .account {\r\n        margin: 0.7rem; \r\n    }\r\n\r\n    .dropdown {\r\n        position: relative;\r\n        display: inline-block;\r\n    }\r\n\r\n    .dropdown-content {\r\n        display: none;\r\n        position: absolute;\r\n        text-align: left !important;\r\n        background-color: #fff;\r\n        min-width: 160px;\r\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n        z-index: 1;\r\n    }\r\n\r\n    .dropdown-content a {\r\n        color: black;\r\n        padding: 12px 16px;\r\n        text-decoration: none;\r\n        display: block;\r\n    }\r\n\r\n    .dropdown-content a:hover {background-color: #ddd;}\r\n\r\n    .dropdown:hover .dropdown-content {display: block;}\r\n\r\n    .dropdown:hover {background-color: #EEF1FA; }\r\n`\r\n\r\nconst Header = (props)=>{\r\n\r\n    return(\r\n        <Wrapper >\r\n            <div className='background'>\r\n            <div className='account'>\r\n                <div class=\"dropdown\">\r\n                    <Icon icon={iconHeaderAvatar} color={'#1841BA'} width={20} height={20} />\r\n                    {`  `}  <span style={{ paddingTop: -20 }}>Hi,</span>\r\n                <div class=\"dropdown-content\">\r\n                    <a href=\"#\">Link 1</a>\r\n                    <a href=\"#\">Link 2</a>\r\n                    <a href=\"#\">Link 3</a>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Header;","import Header from './Header'\r\n\r\nexport default Header;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Logo from '../../assets/logo.png'\r\nimport { iconHome } from '@wfp/icons';\r\nimport { Icon, TextInput, Search   } from '@wfp/ui';\r\nimport { Col, Row } from 'react-flexbox-grid'\r\n\r\nconst Wrapper = styled.div`\r\n    background-color: #1841BA;\r\n    color: #fff;\r\n    // text-align: center;\r\n    width: 100%;            \r\n    .wrapper{\r\n        margin: 2rem 0 1rem 2rem;\r\n        display: flex;\r\n    }\r\n    .text-wrapper {\r\n        justfy-content: center;\r\n        align-item: center;\r\n        margin-top: 2rem;\r\n        text-align: center;\r\n        // position: absolute;\r\n    }\r\n\r\n    .wfp--search--lg .wfp--search-input {\r\n        background-color: #1841BA;\r\n        color: white;\r\n        border: 2px solid white;\r\n        border-color: white;\r\n    }\r\n\r\n    .wfp--search-magnifier {\r\n        fill: #fff;\r\n    }\r\n`\r\n\r\nconst Header = (props)=>{\r\n\r\n    return(\r\n        <Row>\r\n        <Wrapper >\r\n           \r\n            <div className='wrapper'>\r\n            <Col xs={3} md={3}>\r\n                <img src={Logo} alt=\"Logo\" style={{ width: 80, height: 80, marginTop: '1rem' }} />\r\n            </Col>\r\n            <Col xs={6} md={6}>\r\n                <div className='text-wrapper'>\r\n                            \r\n                    <Search\r\n                        className=\"some-class\"\r\n                        kind=\"large\"\r\n                        name=\"input-name\"\r\n                        // labelText=\"Label\"\r\n                        closeButtonLabelText=\"The label text for the close button (closeButtonLabelText)\"\r\n                        placeHolderText=\"Search\"\r\n                        // onChange={(e) => action('onChange')}\r\n                    />\r\n                </div>\r\n            </Col>\r\n            <Col xs={3} md={3}></Col>\r\n            </div>\r\n            </Wrapper>\r\n            </Row>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header;","import MiddleHeader from './MiddleHeader'\r\n\r\nexport default MiddleHeader;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Logo from '../assets/logo.png'\r\nimport SignUp from '../assets/signup.png'\r\nimport { Grid, Row, Col } from 'react-flexbox-grid'\r\nimport { Form, Field } from 'react-final-form'\r\nimport {\r\n    Checkbox,\r\n    FormGroup,\r\n    TextInput,\r\n    Loading,\r\n    ReduxFormWrapper,\r\n} from '@wfp/ui'\r\nimport { Link  } from 'react-router-dom'\r\nimport Header from '../shared/Header'\r\nimport Footer from '../shared/Footer'\r\nimport MiddleWraper from '../shared/MiddleHeader'\r\n\r\nconst Wrapper = styled.div`\r\n    // background-color: #fff;\r\n}\r\n`\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <MiddleWraper />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst colourOptions = {\r\n    ocean: { label: 'Ocean', color: '#00B8D9', isFixed: true },\r\n    blue: { label: 'Blue', color: '#0a6eb4', disabled: true },\r\n    purple: { label: 'Purple', color: '#5243AA' },\r\n    red: { label: 'Red', color: '#FF5630', isFixed: true },\r\n    orange: { label: 'Orange', color: '#FF8B00' },\r\n    yellow: { label: 'Yellow', color: '#F7B825' },\r\n    green: { label: 'Green', color: '#3f7e44' },\r\n    forest: { label: 'Forest', color: '#00875A' },\r\n    slate: { label: 'Slate', color: '#253858' },\r\n    silver: { label: 'Silver', color: '#666666' },\r\n    gray: { label: 'Gray', color: '#8C9BA5' },\r\n    lightGray: { label: 'Light Gray', color: 'rgba(224, 230, 234, 0.53)' },\r\n}\r\n\r\n//TODO:\r\n//-- Prop types\r\n//-- Box shadow\r\nconst WarningIcon = styled.span`\r\n    position: absolute;\r\n    display: inline-block;\r\n    width: 24px;\r\n    height: 22px;\r\n    background: #edb124;\r\n    color: white;\r\n    top: 10px;\r\n    right: 14px;\r\n    clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\r\n    :after {\r\n        display: inline-block;\r\n        content: '!';\r\n        color: white;\r\n        font-size: 17px;\r\n        text-align: center;\r\n        width: 24px;\r\n        height: 22px;\r\n        line-height: 27px;\r\n        font-weight: 600;\r\n    }\r\n`\r\nconst StyledTile = styled.div`\r\n    position: relative;\r\n    min-height: 120px;\r\n    border: ${(props) =>\r\n        props.warning && !props.active\r\n            ? `1px solid ${colourOptions.yellow.color}`\r\n            : '1px solid transparent'};\r\n    background-color: ${(props) =>\r\n        props.active ? colourOptions.blue.color : 'white'};\r\n    width: 210px;\r\n    padding: 1rem 1rem 37px;\r\n    margin: 0 0 0.5rem 0;\r\n    color: ${(props) => (props.active ? 'white' : 'black')};\r\n    cursor: pointer;\r\n    .tile {\r\n        &--header {\r\n            font-size: 0.9rem;\r\n            font-weight: 400;\r\n            margin: 0 0 0.25rem;\r\n        }\r\n        &--label {\r\n            position: absolute;\r\n            left: 16px;\r\n            bottom: 15px;\r\n            line-height: 16px;\r\n            font-size: 12px;\r\n            color: ${(props) => (props.active ? 'inherit' : props.color)};\r\n            border-radius: 25px;\r\n            padding: 0 8px;\r\n            font-weight: 600;\r\n            border: 2px solid\r\n                ${(props) => (props.active ? 'white' : props.color + '30')};\r\n\r\n            text-transform: capitalize;\r\n        }\r\n    }\r\n    .content {\r\n        position: absolute;\r\n        bottom: 40px;\r\n        left: 16px;\r\n        display: flex;\r\n        align-items: baseline;\r\n        justify-content: left;\r\n        margin: 0 0 0.5rem 0;\r\n        &--number {\r\n            font-size: 1.5rem;\r\n            font-weight: bold;\r\n            margin: 0 0.5rem 0 0;\r\n        }\r\n        &--label {\r\n            text-transform: uppercase;\r\n            color: ${(props) =>\r\n                props.active ? 'inherit' : 'rgba(21, 41, 53, 0.7)'};\r\n        }\r\n    }\r\n    box-shadow: 0px 0px 10px #343c4845;\r\n    &:hover {\r\n        border: 1px solid ${colourOptions.blue.color};\r\n    }\r\n`\r\n\r\nconst Tile = ({\r\n    header,\r\n    amount,\r\n    role,\r\n    color,\r\n    amountLabel,\r\n    active,\r\n    warning,\r\n    onClick,\r\n}) => {\r\n    return (\r\n        <StyledTile\r\n            active={active}\r\n            warning={warning}\r\n            onClick={onClick}\r\n            color={color}\r\n        >\r\n            <h3 className=\"tile--header\">{header}</h3>\r\n            <div className=\"tile--content content\">\r\n                <span className=\"content--number\">{amount}</span>\r\n                <span className=\"content--label\">{amountLabel}</span>\r\n            </div>\r\n            <span className=\"tile--label\">{role}</span>\r\n            {warning && <WarningIcon />}\r\n        </StyledTile>\r\n    )\r\n}\r\n\r\n// Tile.propTypes = {\r\n//     title:\r\n// }\r\n\r\nTile.defaultProps = {\r\n    amount: '00',\r\n    amountLabel: 'applicants',\r\n    label: 'screener',\r\n    active: false,\r\n    warning: false,\r\n    onClick: () => console.log('clicked callback tile'),\r\n}\r\n\r\nexport default Tile\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Tile from './Tile'\r\n\r\n\r\n// filters props structure:\r\n// [\r\n//     {\r\n//         title:\"Pending Screening\",\r\n//         role: \"Screener\",\r\n//         warning: true, (optional)\r\n//         comparator: rowData => rowData.status.grouping === 'released_director',\r\n//     }\r\n// ]\r\n\r\nconst useFilterTiles = ({ data, filters, hideEmptyTiles }) => {\r\n    const [activeFilterIndex, setActiveFilterIndex] = useState(null)\r\n\r\n    if (!data || !filters) return [null, null]\r\n    // TODO optimize counting\r\n    filters = filters\r\n        .map((f) => ({\r\n            ...f,\r\n            count: data.filter((d) => f.comparator(d)).length,\r\n        }))\r\n        .filter((filter) => !(hideEmptyTiles && filter.count === 0))\r\n    let filteredData = data\r\n    if (activeFilterIndex !== null) {\r\n        filteredData = data.filter(filters[activeFilterIndex].comparator)\r\n    }\r\n\r\n    const handleFilterChange = (filterIndex) => {\r\n        if (activeFilterIndex === filterIndex) {\r\n            setActiveFilterIndex(null)\r\n        } else {\r\n            setActiveFilterIndex(filterIndex)\r\n        }\r\n    }\r\n    const tiles = (\r\n        <TilesWrapper stretch={filters.length >= 4}>\r\n            {filters.map((filter, i) => {\r\n                const { count, warning, title, role, amountLabel } = filter\r\n                return (\r\n                    <Tile\r\n                        key={i}\r\n                        onClick={() => {\r\n                            handleFilterChange(i)\r\n                        }}\r\n                        header={title}\r\n                        amount={count}\r\n                        warning={count !== 0 && warning}\r\n                        active={activeFilterIndex === i}\r\n                        amountLabel={amountLabel}\r\n                    />\r\n                )\r\n            })}\r\n        </TilesWrapper>\r\n    )\r\n\r\n    return [filteredData, tiles]\r\n}\r\n\r\nexport default useFilterTiles\r\n\r\nconst TilesWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: ${(props) =>\r\n        props.stretch ? 'space-between' : 'flex-start'};\r\n    & > * {\r\n        margin-right: ${(props) => (props.stretch ? '0px' : '20px')};\r\n    }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PositionLink = (props) => {\r\n    const {  _id, } = props.data\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Link\r\n                className=\"wfp--link\"\r\n                style={{ fontWeight: 'bold' }}\r\n                to={{\r\n                    pathname: \"/create-ministry\",\r\n                    state: { edit: true, id : _id, data: props.data }\r\n                  }}\r\n            >\r\n                Edit\r\n            </Link>\r\n           \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default PositionLink\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    div:last-child {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        font-weight: bold;\r\n    }\r\n    a.wfp--link {\r\n        float: left;\r\n        color: #fbfcfc;\r\n        background: #0e7fce;\r\n        border-radius: 6px;\r\n        padding: 4px 10px;\r\n        height: 27px;\r\n        display: inline-block;\r\n        -webkit-text-decoration: none;\r\n        text-decoration: none;\r\n    }\r\n        \r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Action = (props) => {\r\n    const { _id } = props.data\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Link\r\n                className=\"wfp--link\"\r\n                style={{ fontWeight: 'bold' }}\r\n                to={{\r\n                    pathname: \"/create-admin\",\r\n                    state: { edit: true, id : _id, data: props.data }\r\n                  }}\r\n            >\r\n                Edit\r\n            </Link>\r\n           \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Action\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    div:last-child {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        font-weight: bold;\r\n    }\r\n    a.wfp--link {\r\n        float: left;\r\n        color: #fbfcfc;\r\n        background: #0e7fce;\r\n        border-radius: 6px;\r\n        padding: 4px 10px;\r\n        height: 27px;\r\n        display: inline-block;\r\n        -webkit-text-decoration: none;\r\n        text-decoration: none;\r\n    }\r\n        \r\n`\r\n","import React, { useState, useEffect }  from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport {iconChevronDown} from '@wfp/icons'\r\nimport { Icon, Modal } from  '@wfp/ui';\r\n\r\nconst Action = (props) => {\r\n    \r\n    const { request_status, _id, reviewed_candidate, create_user } = props.data;\r\n\r\n    const [isAction, setAction ] = useState(false);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div style={{ dispaly: 'inline'}}>\r\n                <div style={{ dispaly: 'inline'}}>\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold' }}\r\n                        to={{\r\n                            pathname: \"/create-department\",\r\n                            state: { edit: true, id : _id, data: props.data }\r\n                          }}\r\n                    >\r\n                        Edit department\r\n                    </Link>\r\n\r\n                        <div \r\n                            style={{ \r\n                                borderRadius: '6px', \r\n                                border: '2px solid rgb(11 119 193)',\r\n                                cursor: 'pointer',\r\n                                float: 'left',\r\n                                marginLeft: 10,\r\n                                background: '#0d7fce',\r\n                                padding: '3px 5px 4px'\r\n                            }}\r\n                            onClick={()=> setAction(true) }\r\n                        >\r\n                            <Icon\r\n                                className=\"wfp--link\"\r\n                                icon={iconChevronDown}\r\n                                width={'14px'}\r\n                                height={'14px'}\r\n                                fill='#fff'\r\n                                description=\"More actions\"\r\n                                className=\"dropbtn\"\r\n                            />\r\n                        </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n                <Modal\r\n                    open={isAction}\r\n                    modalLabel=\"Other actions\"\r\n                    primaryButtonText=\"Close\"\r\n                    passiveModal\r\n                    onRequestClose={() => setAction(false)}\r\n                    onRequestSubmit={() => setAction(false)}\r\n                >\r\n                    \r\n                    <Link className=\"wfp--link\"\r\n                        to={ '/create-sub-department/' + _id} \r\n                    >\r\n                        Add sub department\r\n                    </Link>\r\n\r\n\r\n                    <br /><br />\r\n                    <Link className=\"wfp--link\"\r\n                         to={'/sub/department/' + _id }\r\n                    >\r\n                        View sub department\r\n                    </Link>\r\n                        \r\n\r\n                </Modal>\r\n\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Action\r\n\r\nconst Wrapper = styled.div`\r\n    div:last-child {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        font-weight: bold;\r\n    }\r\n    a.wfp--link {\r\n        float: left;\r\n        color: #fbfcfc;\r\n        background: #0e7fce;\r\n        border-radius: 6px;\r\n        padding: 4px 10px;\r\n        height: 27px;\r\n        display: inline-block;\r\n        -webkit-text-decoration: none;\r\n        text-decoration: none;\r\n    }\r\n    // @media (min-width: 600px) {\r\n        .wfp--modal-container {\r\n            min-width: 280px;\r\n        }\r\n    // }\r\n        \r\n`","import React, { useState, useEffect }  from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport {iconChevronDown} from '@wfp/icons'\r\nimport { Icon, Modal } from  '@wfp/ui';\r\n\r\nconst Action = (props) => {\r\n    \r\n    const {  _id, department } = props.data;\r\n\r\n    const [isAction, setAction ] = useState(false);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div style={{ dispaly: 'inline'}}>\r\n                <div style={{ dispaly: 'inline'}}>\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold' }}\r\n                        to={{\r\n                            pathname: \"/create-sub-department/\" + department,\r\n                            state: { edit: true, id : _id, data: props.data }\r\n                          }}\r\n                    >\r\n                        Edit sub department\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Action\r\n\r\nconst Wrapper = styled.div`\r\n    div:last-child {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        font-weight: bold;\r\n    }\r\n    a.wfp--link {\r\n        float: left;\r\n        color: #fbfcfc;\r\n        background: #0e7fce;\r\n        border-radius: 6px;\r\n        padding: 4px 10px;\r\n        height: 27px;\r\n        display: inline-block;\r\n        -webkit-text-decoration: none;\r\n        text-decoration: none;\r\n    }\r\n    // @media (min-width: 600px) {\r\n        .wfp--modal-container {\r\n            min-width: 280px;\r\n        }\r\n    // }\r\n        \r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Action = (props) => {\r\n    const { _id } = props.data\r\n\r\n    return (\r\n        <Wrapper>\r\n\r\n            <Link className=\"wfp--link\"\r\n                style={{ fontWeight: 'bold' }}\r\n                to={{\r\n                    pathname: \"/create-staff\",\r\n                    state: { edit: true, id : _id, data: props.data }\r\n                    }}\r\n            >\r\n                Edit \r\n            </Link>\r\n           \r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Action\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    div:last-child {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        font-weight: bold;\r\n    }\r\n    a.wfp--link {\r\n        float: left;\r\n        color: #fbfcfc;\r\n        background: #0e7fce;\r\n        border-radius: 6px;\r\n        padding: 4px 10px;\r\n        height: 27px;\r\n        display: inline-block;\r\n        -webkit-text-decoration: none;\r\n        text-decoration: none;\r\n    }\r\n        \r\n`\r\n","import React, { useState, useEffect }  from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport {iconChevronDown} from '@wfp/icons'\r\nimport { Icon, Modal, Loading } from  '@wfp/ui';\r\nimport store from '../../../store'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Action = (props) => {\r\n    const { onValueChange } = props;\r\n    const { _id } = props.data;\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n\r\n    const [isAction, setAction ] = useState(false);\r\n    const [ loading, setLoading ] = useState(false);\r\n\r\n    const onConfirm = async ()=>{\r\n        setLoading(true)\r\n        try {\r\n            await axios.post(`/v1/file/receive/${_id}/${user && user._id}`)\r\n            .then(()=> setLoading(false))\r\n            onValueChange()\r\n            toast('Successfully acknowledged receipt of file', {closeOnClick: true, autoClose: 1000 });\r\n            window.location.reload();\r\n        } catch (err) {\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            setLoading(false)\r\n        }\r\n\r\n        setAction(false);\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            \r\n            <div style={{ dispaly: 'inline'}}>\r\n                <div style={{ dispaly: 'inline'}}>\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold', marginLeft : 10 }}\r\n                        to='#'\r\n                        onClick={()=>setAction(true)}\r\n                    >\r\n                        RECEIVED FILE\r\n                    </Link>\r\n\r\n\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold', marginLeft : 10 }}\r\n                        to={{\r\n                            pathname: `/history/file/${_id}`,\r\n                          }}\r\n                    >\r\n                        VIEW HISTORY\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <Modal\r\n                open={isAction}\r\n                primaryButtonText=\"Confirm\"\r\n                secondaryButtonText=\"No\"\r\n                onRequestSubmit={onConfirm}\r\n                onRequestClose={()=>setAction(false)}\r\n                modalLabel=\"Confirm receipt\"\r\n                wide={false}\r\n                type='info'\r\n            >\r\n                <Loading active={loading} withOverlay={true} />\r\n                <p className=\"wfp--modal-content__text\">\r\n                    By acknowledging receipt, you confirm receipt of the file. Do you confirm receipt?\r\n                </p>\r\n            </Modal>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Action\r\n\r\nconst Wrapper = styled.div`\r\n    div:last-child {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        font-weight: bold;\r\n    }\r\n    a.wfp--link {\r\n        float: left;\r\n        color: #fbfcfc;\r\n        font-size: 8px;\r\n        background: #0e7fce;\r\n        border-radius: 6px;\r\n        padding: 4px 10px;\r\n        // height: 27px;\r\n        display: inline-block;\r\n        -webkit-text-decoration: none;\r\n        text-decoration: none;\r\n    }\r\n    // @media (min-width: 600px) {\r\n        .wfp--modal-container {\r\n            min-width: 280px;\r\n        }\r\n    // }\r\n        \r\n`","import React, { useState, useEffect }  from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport {iconChevronDown} from '@wfp/icons'\r\nimport { Icon, Modal } from  '@wfp/ui';\r\n\r\nconst Action = (props) => {\r\n    \r\n    const { request_status, _id, reviewed_candidate, create_user } = props.data;\r\n\r\n    const [isAction, setAction ] = useState(false);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div style={{ dispaly: 'inline'}}>\r\n                <div style={{ dispaly: 'inline'}}>\r\n\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold' }}\r\n                        to={{\r\n                            pathname: `/history/file/${_id}`,\r\n                          }}\r\n                    >\r\n                        VIEW HISTORY\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Action\r\n\r\nconst Wrapper = styled.div`\r\n    div:last-child {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        font-weight: bold;\r\n    }\r\n    a.wfp--link {\r\n        float: left;\r\n        color: #fbfcfc;\r\n        font-size: 8px;\r\n        background: #0e7fce;\r\n        border-radius: 6px;\r\n        padding: 4px 10px;\r\n        // height: 27px;\r\n        display: inline-block;\r\n        -webkit-text-decoration: none;\r\n        text-decoration: none;\r\n    }\r\n    // @media (min-width: 600px) {\r\n        .wfp--modal-container {\r\n            min-width: 280px;\r\n        }\r\n    // }\r\n        \r\n`","import React, { useState, useEffect }  from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport {iconChevronDown} from '@wfp/icons'\r\nimport { Icon, Modal, Loading, TextArea } from  '@wfp/ui';\r\nimport store from '../../../store'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Action = (props) => {\r\n    const { onValueChange } = props;\r\n    const { _id } = props.data;\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n    const [justification, setJustification ] = useState('');\r\n\r\n    const [isAction, setAction ] = useState(false);\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [ isAchive, setAchive ] = useState(false);\r\n\r\n    const onConfirm = async ()=>{\r\n        setLoading(true)\r\n        try {\r\n            await axios.post(`/v1/file/delay/${_id}/${user && user._id}`, { justification })\r\n            .then(()=> {\r\n                setLoading(false)\r\n                onValueChange();\r\n                toast('Successfully acknowledged receipt of file', {closeOnClick: true, autoClose: 1000 });\r\n                window.location.reload();\r\n            })\r\n           \r\n        } catch (err) {\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            setLoading(false)\r\n        }\r\n\r\n        setAction(false);\r\n    }\r\n\r\n    \r\n    const onAchive = async ()=>{\r\n        setLoading(true)\r\n        try {\r\n            await axios.post(`/v1/file/archive/${_id}/${user && user._id}`)\r\n            .then(()=> {\r\n                setLoading(false)\r\n                props.onValueChange && props.onValueChange();\r\n                toast('Successful', {closeOnClick: true, autoClose: 1000 });\r\n                window.location.reload();\r\n            })\r\n            \r\n        } catch (err) {\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            setLoading(false)\r\n        }\r\n\r\n        setAchive(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <Wrapper>\r\n            <div style={{ dispaly: 'inline'}}>\r\n            \r\n                <div style={{ dispaly: 'inline'}}>\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold' }}\r\n                        to={{\r\n                            pathname: \"/forward/file/\" + _id,\r\n                            state: { edit: true, id : _id, data: props.data }\r\n                          }}\r\n                    >\r\n                        FORWARD\r\n                    </Link>\r\n\r\n                    {/* <br /> */}\r\n\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold', marginLeft : 5 }}\r\n                        to={{\r\n                            pathname: `/history/file/${_id}`,\r\n                          }}\r\n                    >\r\n                        VIEW HISTORY\r\n                    </Link>\r\n\r\n                    {/* <div style={{ marginLeft : 80}} /> */}\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold', marginLeft : 5 }}\r\n                        to='#'\r\n                        onClick={()=>setAction(true)}\r\n                    >\r\n                        DELAY\r\n                    </Link>\r\n\r\n                    {/* <div style={{ marginLeft : 20}} /> */}\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold', marginLeft : 5 }}\r\n                        to='#'\r\n                        onClick={()=> setAchive(true)}\r\n                    >\r\n                        ARCHIVE\r\n                    </Link>\r\n\r\n                    <Modal\r\n                        open={isAction}\r\n                        primaryButtonText=\"Delay\"\r\n                        secondaryButtonText=\"Cancel\"\r\n                        onRequestSubmit={onConfirm}\r\n                        onRequestClose={()=>setAction(false)}\r\n                        modalLabel=\"Delay file\"\r\n                        wide={false}\r\n                        type='info'\r\n                    >\r\n                        <Loading active={loading} withOverlay={true} />\r\n\r\n                        <p className=\"wfp--modal-content__text\">\r\n                            \r\n                            <br />\r\n                            <TextArea\r\n                                // helperText=\"Optional helperText\"\r\n                                labelText=\"Please provide justification for your delay.\"\r\n                                name=\"inputname\"\r\n                                onChange={e=>setJustification(e.target.value)}\r\n                            />\r\n                        </p>\r\n                    </Modal>\r\n\r\n                    \r\n            <Modal\r\n                open={isAchive}\r\n                primaryButtonText=\"Archive file\"\r\n                secondaryButtonText=\"Cancel\"\r\n                onRequestSubmit={onAchive}\r\n                onRequestClose={()=>setAchive(false)}\r\n                modalLabel=\"Archive\"\r\n                wide={false}\r\n                type='info'\r\n            >\r\n                <Loading active={loading} withOverlay={true} />\r\n                <p className=\"wfp--modal-content__text\">\r\n                    Are you sure you want to Archive this file?\r\n                </p>\r\n            </Modal>\r\n            \r\n                </div>\r\n            </div>\r\n        </Wrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Action\r\n\r\nconst Wrapper = styled.div`\r\n    div:last-child {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        font-weight: bold;\r\n    }\r\n    a.wfp--link {\r\n        float: left;\r\n        color: #fbfcfc;\r\n        font-size: 8px;\r\n        background: #0e7fce;\r\n        border-radius: 6px;\r\n        padding: 4px 10px;\r\n        // height: 27px;\r\n        display: inline-block;\r\n        -webkit-text-decoration: none;\r\n        text-decoration: none;\r\n    }      \r\n`","import React, { useState, useEffect }  from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport {iconChevronDown} from '@wfp/icons'\r\nimport { Icon, Modal, Loading } from  '@wfp/ui';\r\nimport store from '../../../store'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Action = (props) => {\r\n    const { onValueChange } = props;\r\n    const { _id } = props.data;\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n\r\n    const [isAction, setAction ] = useState(false);\r\n    const [ loading, setLoading ] = useState(false);\r\n\r\n    const onConfirm = async ()=>{\r\n        setLoading(true)\r\n        try {\r\n            await axios.post(`/v1/file/receive/${_id}/${user && user._id}`)\r\n            .then(()=> setLoading(false))\r\n            onValueChange()\r\n            toast('Successfully acknowledged receipt of file', {closeOnClick: true, autoClose: 1000 });\r\n        } catch (err) {\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            setLoading(false)\r\n        }\r\n\r\n        setAction(false);\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            \r\n            <div style={{ dispaly: 'inline'}}>\r\n                <div style={{ dispaly: 'inline'}}>\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold', marginLeft : 10 }}\r\n                        to={{\r\n                            pathname: `/history/file/${_id}`,\r\n                          }}\r\n                    >\r\n                        VIEW HISTORY\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <Modal\r\n                open={isAction}\r\n                primaryButtonText=\"Confirm\"\r\n                secondaryButtonText=\"No\"\r\n                onRequestSubmit={onConfirm}\r\n                onRequestClose={()=>setAction(false)}\r\n                modalLabel=\"Confirm receipt\"\r\n                wide={false}\r\n                type='info'\r\n            >\r\n                <Loading active={loading} withOverlay={true} />\r\n                <p className=\"wfp--modal-content__text\">\r\n                    By acknowledging receipt, you confirm receipt of the file. Do you confirm receipt?\r\n                </p>\r\n            </Modal>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Action\r\n\r\nconst Wrapper = styled.div`\r\n    div:last-child {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        font-weight: bold;\r\n    }\r\n    a.wfp--link {\r\n        float: left;\r\n        color: #fbfcfc;\r\n        font-size: 8px;\r\n        background: #0e7fce;\r\n        border-radius: 6px;\r\n        padding: 4px 10px;\r\n        // height: 27px;\r\n        display: inline-block;\r\n        -webkit-text-decoration: none;\r\n        text-decoration: none;\r\n    }\r\n    // @media (min-width: 600px) {\r\n        .wfp--modal-container {\r\n            min-width: 280px;\r\n        }\r\n    // }\r\n        \r\n`","import React, { useState, useEffect }  from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport {iconChevronDown} from '@wfp/icons'\r\nimport { Icon, Modal, Loading } from  '@wfp/ui';\r\nimport store from '../../../store'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Action = (props) => {\r\n    const { onValueChange } = props;\r\n    const { _id } = props.data;\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n\r\n    const [isAction, setAction ] = useState(false);\r\n    const [ isAchive, setAchive ] = useState(false);\r\n    const [ loading, setLoading ] = useState(false);\r\n\r\n    const onConfirm = async ()=>{\r\n        setLoading(true)\r\n        try {\r\n            await axios.post(`/v1/file/receive/${_id}/${user && user._id}`)\r\n            .then(()=> setLoading(false))\r\n            onValueChange()\r\n            toast('Successfully acknowledged receipt of file', {closeOnClick: true, autoClose: 1000 });\r\n        } catch (err) {\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            setLoading(false)\r\n        }\r\n\r\n        setAction(false);\r\n    }\r\n\r\n    const onAchive = async ()=>{\r\n        setLoading(true)\r\n        try {\r\n            await axios.post(`/v1/file/archive/${_id}/${user && user._id}`)\r\n            .then(()=> {\r\n                setLoading(false)\r\n                props.onValueChange && props.onValueChange();\r\n                toast('Successful', {closeOnClick: true, autoClose: 1000 });\r\n                window.location.reload();\r\n            })\r\n            \r\n        } catch (err) {\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            setLoading(false)\r\n        }\r\n\r\n        setAchive(false);\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            \r\n            <div style={{ dispaly: 'inline'}}>\r\n                <div style={{ dispaly: 'inline'}}>\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold', marginLeft : 10 }}\r\n                        to={{\r\n                            pathname: \"/forward/file/\" + _id,\r\n                            state: { edit: true, id : _id, data: props.data }\r\n                          }}\r\n                    >\r\n                        FORWARD\r\n                    </Link>\r\n\r\n\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold', marginLeft : 10 }}\r\n                        to={{\r\n                            pathname: `/history/file/${_id}`,\r\n                          }}\r\n                    >\r\n                        VIEW HISTORY\r\n                    </Link>\r\n\r\n                    <Link className=\"wfp--link\"\r\n                        style={{ fontWeight: 'bold', marginLeft : 10 }}\r\n                        to='#'\r\n                        onClick={()=> setAchive(true)}\r\n                    >\r\n                        ARCHIVE\r\n                    </Link>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <Modal\r\n                open={isAction}\r\n                primaryButtonText=\"Confirm\"\r\n                secondaryButtonText=\"No\"\r\n                onRequestSubmit={onConfirm}\r\n                onRequestClose={()=>setAction(false)}\r\n                modalLabel=\"Confirm receipt\"\r\n                wide={false}\r\n                type='info'\r\n            >\r\n                <Loading active={loading} withOverlay={true} />\r\n                <p className=\"wfp--modal-content__text\">\r\n                    By acknowledging receipt, you confirm receipt of the file. Do you confirm receipt?\r\n                </p>\r\n            </Modal>\r\n\r\n            \r\n            <Modal\r\n                open={isAchive}\r\n                primaryButtonText=\"Archive file\"\r\n                secondaryButtonText=\"Cancel\"\r\n                onRequestSubmit={onAchive}\r\n                onRequestClose={()=>setAchive(false)}\r\n                modalLabel=\"Archive\"\r\n                wide={false}\r\n                type='info'\r\n            >\r\n                <Loading active={loading} withOverlay={true} />\r\n                <p className=\"wfp--modal-content__text\">\r\n                    Are you sure you want to Archive this file?\r\n                </p>\r\n            </Modal>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Action\r\n\r\nconst Wrapper = styled.div`\r\n    div:last-child {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        font-weight: bold;\r\n    }\r\n    a.wfp--link {\r\n        float: left;\r\n        color: #fbfcfc;\r\n        font-size: 8px;\r\n        background: #0e7fce;\r\n        border-radius: 6px;\r\n        padding: 4px 10px;\r\n        // height: 27px;\r\n        display: inline-block;\r\n        -webkit-text-decoration: none;\r\n        text-decoration: none;\r\n    }\r\n    // @media (min-width: 600px) {\r\n        .wfp--modal-container {\r\n            min-width: 280px;\r\n        }\r\n    // }\r\n        \r\n`","import React, { useState, useEffect }  from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport {iconRestartGlyph, iconEditGlyph,iconDeleteGlyph, iconSave, iconAppServices  } from '@wfp/icons'\r\nimport { Icon, Modal, Loading } from  '@wfp/ui';\r\nimport store from '../../../store'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Action = (props) => {\r\n    const { onValueChange } = props;\r\n    const { _id } = props.data;\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n\r\n    const [isAction, setAction ] = useState(false);\r\n    const [ isAchive, setAchive ] = useState(false);\r\n    const [ loading, setLoading ] = useState(false);\r\n\r\n    const onDelete = async ()=>{\r\n        setLoading(true)\r\n        try {\r\n            await axios.put(`/v1/file/delete/${_id}`)\r\n            .then(()=> {\r\n                setLoading(false)\r\n                props.onValueChange && props.onValueChange();\r\n                toast('Successfully acknowledged receipt of file', {closeOnClick: true, autoClose: 1000 });\r\n                window.location.reload();\r\n            })\r\n            \r\n        } catch (err) {\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            setLoading(false)\r\n        }\r\n\r\n        setAction(false);\r\n    }\r\n\r\n\r\n    const onAchive = async ()=>{\r\n        setLoading(true)\r\n        try {\r\n            await axios.post(`/v1/file/archive/${_id}/${user && user._id}`)\r\n            .then(()=> {\r\n                setLoading(false)\r\n                props.onValueChange && props.onValueChange();\r\n                toast('Successful', {closeOnClick: true, autoClose: 1000 });\r\n                window.location.reload();\r\n            })\r\n            \r\n        } catch (err) {\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            setLoading(false)\r\n        }\r\n\r\n        setAchive(false);\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            \r\n            <div style={{ dispaly: 'inline'}}>\r\n                <div style={{ dispaly: 'inline'}}>\r\n                    <Link \r\n                        to={{\r\n                            pathname: \"/forward/file/\" + _id,\r\n                            state: { edit: true, id : _id, data: props.data }\r\n                          }}\r\n                      >\r\n                    <Icon\r\n                        class=\"wfp--link\"\r\n                        icon={iconRestartGlyph}\r\n                        width={14}\r\n                        height={14}\r\n                        fill='#0b77c2'\r\n                        description=\"FORWARD\"\r\n                    />\r\n                    </Link>\r\n                    <span style={{ paddingLeft: 20 }} />\r\n\r\n                    <Link \r\n                        to={{\r\n                        pathname: \"/create-file\",\r\n                        state: { edit: true, id : _id, data: props.data }\r\n                      }}\r\n                      >\r\n                          <Icon\r\n                            class=\"wfp--link\"\r\n                            icon={iconEditGlyph}\r\n                            width={14}\r\n                            height={14}\r\n                            fill='#0b77c2'\r\n                            description=\"EDIT\"\r\n                        />\r\n\r\n                    </Link>\r\n                    \r\n\r\n                    <span style={{ paddingLeft: 20 }} />\r\n\r\n                    <Icon\r\n                        class=\"wfp--link\"\r\n                        icon={iconDeleteGlyph}\r\n                        width={14}\r\n                        height={14}\r\n                        fill='#0b77c2'\r\n                        description=\"DELETE\"\r\n                        onClick={()=> setAction(true)}\r\n                    />\r\n\r\n                    <span style={{ paddingLeft: 20 }} />\r\n\r\n                    <Icon\r\n                        class=\"wfp--link\"\r\n                        icon={iconAppServices}\r\n                        width={14}\r\n                        height={14}\r\n                        fill='#0b77c2'\r\n                        description=\"ARCHIVE\"\r\n                        onClick={()=> setAchive(true)}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <Modal\r\n                open={isAction}\r\n                primaryButtonText=\"Delete\"\r\n                secondaryButtonText=\"Cancel\"\r\n                onRequestSubmit={onDelete}\r\n                onRequestClose={()=>setAction(false)}\r\n                modalLabel=\"Delete\"\r\n                wide={false}\r\n                danger\r\n                type='danger'\r\n            >\r\n                <Loading active={loading} withOverlay={true} />\r\n                <p className=\"wfp--modal-content__text\">\r\n                    Are you sure you want to delete this file?\r\n                </p>\r\n            </Modal>\r\n\r\n            \r\n            <Modal\r\n                open={isAchive}\r\n                primaryButtonText=\"Archive file\"\r\n                secondaryButtonText=\"Cancel\"\r\n                onRequestSubmit={onAchive}\r\n                onRequestClose={()=>setAchive(false)}\r\n                modalLabel=\"Archive\"\r\n                wide={false}\r\n                type='info'\r\n            >\r\n                <Loading active={loading} withOverlay={true} />\r\n                <p className=\"wfp--modal-content__text\">\r\n                    Are you sure you want to Archive this file?\r\n                </p>\r\n            </Modal>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Action\r\n\r\nconst Wrapper = styled.div`\r\n    div:last-child {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        font-weight: bold;\r\n    }\r\n    a.wfp--link {\r\n        float: left;\r\n        color: #fbfcfc;\r\n        font-size: 8px;\r\n        background: #0e7fce;\r\n        border-radius: 6px;\r\n        padding: 4px 10px;\r\n        // height: 27px;\r\n        display: inline-block;\r\n        -webkit-text-decoration: none;\r\n        text-decoration: none;\r\n    }\r\n    // @media (min-width: 600px) {\r\n        .wfp--modal-container {\r\n            min-width: 280px;\r\n        }\r\n    // }\r\n        \r\n`","export default __webpack_public_path__ + \"static/media/excelIcon.0a7f7555.svg\";","import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\nimport styled, { createGlobalStyle } from 'styled-components'\r\nimport { AgGridReact } from 'ag-grid-react'\r\n// import 'ag-grid-enterprise'\r\nimport { Button, Link, Icon } from '@wfp/ui'\r\nimport {iconOverflowMenu, iconChevronDown} from '@wfp/icons'\r\nimport moment from 'moment'\r\nimport * as gridComponents from '../shared/GridComponent/index'\r\n\r\nimport ExcelIcon from './excelIcon.svg'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\n// TODO move defaultColDef and frameworkComponents to another file ?\r\nconst defaultColDef = {\r\n    key: 0,\r\n    sortable: true,\r\n    resizable: true,\r\n    filter: true,\r\n    floatingFilter: true,\r\n    headerHeight: 150,\r\n    suppressMenu: true,\r\n    filterParams: {\r\n        newRowsAction: 'keep',\r\n    },\r\n    enableBrowserTooltips: true,\r\n}\r\n\r\nclass Grid extends React.Component {\r\n    _isMounted = false\r\n    state = {\r\n        api: null,\r\n        params: null,\r\n    }\r\n    onGridReady = (params) => {\r\n        const { sortModel, data, onResize, } = this.props\r\n\r\n        if (this._isMounted) {\r\n            const api = params.api\r\n\r\n            this.setState({ api, params }, () => this.onResize())\r\n        }\r\n    }\r\n    onResize = () => {\r\n        const { api } = this.state\r\n        api && api.sizeColumnsToFit()\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true\r\n        window.addEventListener('resize', this.onResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.saveGridState();\r\n        this._isMounted = false\r\n        window.removeEventListener('resize', this.onResize)\r\n    }\r\n\r\n    onExport = (e) => {\r\n        const { config } = this.props\r\n        const { api } = this.state\r\n        const fileName =\r\n            this.props.exportFileName +\r\n            ' ' +\r\n            moment().format('YYYY-MM-DD HH-mm-ss')\r\n\r\n        const params = {\r\n            // 'allColumns: true' enables exporting hidden columns\r\n            allColumns: true,\r\n            fileName: fileName,\r\n            columnKeys: config.exportedColumns,\r\n            sheetName: this.props.exportFileName\r\n        }\r\n        \r\n        console.log('export', api)\r\n        api && api.exportDataAsExcel(params)\r\n    }\r\n\r\n    render() {\r\n        const { data, config, floatingFilter, statusPanels } = this.props\r\n        const portalElement = document.getElementById('export-button-portal')\r\n\r\n        return (\r\n            <>\r\n                {portalElement &&\r\n                    ReactDOM.createPortal(\r\n                        <ExportButtonContent>\r\n                            {/* <Button\r\n                                onClick={this.onExport}\r\n                                kind=\"secondary\"\r\n                                small\r\n                            >\r\n                                <div className=\"export-btn\">\r\n                                    <div className=\"export-btn__text\">\r\n                                        Export{' '}\r\n                                    </div>\r\n                                    <img\r\n                                        className=\"export-btn__img\"\r\n                                        src={ExcelIcon}\r\n                                        alt=\"Spreadsheet icon\"\r\n                                    />\r\n                                </div>\r\n                            </Button> */}\r\n                        </ExportButtonContent>,\r\n                        portalElement\r\n                    )}\r\n                \r\n                <div\r\n                    id=\"custom-ag-grid\"\r\n                    className=\"ag-theme-balham\"\r\n                    style={{\r\n                        width: '100%',\r\n                        height: `${\r\n                            Math.max(Math.min(8, data.length) * 80, 180) + 142\r\n                        }px`,\r\n                        marginTop: 20,\r\n                    }}\r\n                >\r\n                    <StyleRewrite />\r\n                    <AgGridReact\r\n                        rowData={data}\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={config.columnDefs}\r\n                        frameworkComponents={gridComponents}\r\n                        reactNext={true}\r\n                        suppressScrollOnNewData={true}\r\n                        sideBar={ this.props.sideBar && 'columns'}\r\n                        gridOptions={{\r\n                            rowHeight: 80,\r\n                            headerHeight: 80,\r\n                            getContextMenuItems: (params) => {\r\n                                var result = [\r\n                                    'copy',\r\n                                    'copyWithHeaders',\r\n                                    'paste',\r\n                                    'separator',\r\n                                    'export',\r\n                                    'separator',\r\n                                ]\r\n                                return result\r\n                            },\r\n                            statusBar: {\r\n                                statusPanels: statusPanels != null ? statusPanels : [\r\n                                    {\r\n                                        statusPanel:\r\n                                            'agTotalAndFilteredRowCountComponent',\r\n                                        align: 'left',\r\n                                    },\r\n                                    {\r\n                                        statusPanel: 'agTotalRowCountComponent',\r\n                                        align: 'center',\r\n                                    },\r\n                                    {\r\n                                        statusPanel:\r\n                                            'agFilteredRowCountComponent',\r\n                                    },\r\n                                    {\r\n                                        statusPanel:\r\n                                            'agSelectedRowCountComponent',\r\n                                    },\r\n                                    { statusPanel: 'agAggregationComponent' },\r\n                                ],\r\n                            },\r\n                            groupMultiAutoColumn: true,\r\n                        }}\r\n                        onGridReady={this.onGridReady}\r\n                        floatingFilter={floatingFilter != null ? floatingFilter : true }\r\n                        excelStyles={[\r\n                            {\r\n                                id: 'header',\r\n                                rowHeight: '40px',\r\n                                font: { \r\n                                    size: 15, bold: true, uppercase: true, color: '#ffffff' \r\n                                },\r\n                                borders: {\r\n                                    borderBottom: {\r\n                                        lineStyle: 'Continuous', weight: 2\r\n                                    },\r\n                                },\r\n                                interior: {\r\n                                    color: \"#0a6eb4\", pattern: 'Solid'\r\n                                },\r\n                                alignment: {\r\n                                    horizontal: 'Left', vertical: 'Center'\r\n                                },\r\n                            },\r\n                            {\r\n                                id: 'bold',\r\n                                font: {\r\n                                    size: 14, bold: true, color: '#000000'\r\n                                },\r\n                            },\r\n                            {\r\n                                id: 'darkGreyBackground',\r\n                                interior: {\r\n                                    color: '#727272',\r\n                                    italic: true,\r\n                                    pattern: 'Solid',\r\n                                },\r\n                                font: {\r\n                                    color: '#ffffff',\r\n                                },\r\n                            },\r\n                            {\r\n                                id: 'darkRedBackground',\r\n                                interior: {\r\n                                    color: '#c5192d',\r\n                                    italic: true,\r\n                                    pattern: 'Solid',\r\n                                },\r\n                                font: {\r\n                                    color: '#ffffff',\r\n                                },\r\n                            },\r\n                            {\r\n                                id: 'orangeBackground',\r\n                                interior: {\r\n                                    color: '#ebab34',\r\n                                    pattern: 'Solid',\r\n                                },\r\n                                font: {\r\n                                    color: '#000000',\r\n                                },\r\n                            },\r\n                            {\r\n                                id: 'greenBackground',\r\n                                interior: {\r\n                                    color: '#008000',\r\n                                    pattern: 'Solid',\r\n                                },\r\n                                font: {\r\n                                    color: '#ffffff',\r\n                                },\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userRole: state.user,\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Grid))\r\n\r\n//TODO check if theres no better option for rendering the export button instead of Portal\r\nconst ExportButtonContent = styled.div`\r\n    .export-btn {\r\n        display: inline-flex;\r\n        align-items: center;\r\n    }\r\n    .export-btn__img {\r\n        width: 16px;\r\n        height: 16px;\r\n        margin-left: 8px;\r\n    }\r\n    &:hover {\r\n        .export-btn__img {\r\n            filter: brightness(0) invert(1);\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyleRewrite = createGlobalStyle`\r\n    #custom-ag-grid.ag-theme-balham .ag-root {\r\n        border: 0;\r\n    }\r\n    #custom-ag-grid .ag-root-wrapper {\r\n        box-shadow: 0px 0px 10px #343C481F;\r\n        overflow: visible;\r\n    }\r\n\r\n    #custom-ag-grid.ag-theme-balham .ag-root .ag-header-cell-label .ag-header-cell-text {\r\n        line-height: 1.5;\r\n        white-space: normal;\r\n        color: #404040;\r\n        font-weight: bold;\r\n        display: inline;\r\n        align-self: center;\r\n    }\r\n\r\n    #custom-ag-grid.ag-theme-balham .ag-header-row:first-child .ag-header-cell{\r\n        background: #ffffffed;\r\n    }\r\n    #custom-ag-grid.ag-theme-balham .ag-header-cell:not(.ag-header-group-cell-no-group){\r\n        background: white;\r\n    }\r\n    #custom-ag-grid.ag-theme-balham .ag-header{\r\n        background: #ffffffed;\r\n    }\r\n\r\n    #custom-ag-grid.ag-theme-balham .ag-header-cell::after,\r\n    #custom-ag-grid.ag-theme-balham .ag-header-group-cell::after {\r\n        height: 60%;\r\n        margin: 0;\r\n        transform: translateY(-50%);\r\n        top: 50%;\r\n    }\r\n    #custom-ag-grid.ag-theme-balham .ag-root .ag-cell {\r\n        padding: 10px;\r\n        line-height: initial;\r\n        white-space: normal;\r\n    }\r\n\r\n    /* #custom-ag-grid.ag-theme-balham .ag-cell-inline-editing {\r\n        height: 100%;\r\n        padding: 0;\r\n    } */\r\n\r\n    #custom-ag-grid.ag-theme-balham  .ag-root .ag-header-cell-menu-button,\r\n    #custom-ag-grid.ag-theme-balham .ag-root .ag-header-cell-menu-button .ag-icon-menu,\r\n    #custom-ag-grid.ag-theme-balham .ag-root .ag-icon {\r\n        height: 100%;\r\n    }\r\n\r\n    #custom-ag-grid.ag-theme-balham .ag-status-bar  {\r\n        background: #fff;\r\n        border: 1px solid #BDC3C7;\r\n    }\r\n\r\n    #swaggin {\r\n        color: red;\r\n    }\r\n\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Header = ({ title, count = null }) => (\r\n    <HeaderWrapper>\r\n        <h5>DASHBOARD</h5>\r\n        <h3>\r\n            {title} {count ? <span>({count} in total)</span> : null}\r\n        </h3>\r\n    </HeaderWrapper>\r\n)\r\n\r\nexport default Header\r\n\r\nconst HeaderWrapper = styled.header`\r\n    margin: 0 0 15px;\r\n    h5 {\r\n        font-weight: 500;\r\n        color: #8c9ba5;\r\n        text-transform: uppercase;\r\n        font-size: 14px;\r\n    }\r\n    h3 {\r\n        font-weight: 500;\r\n        color: #031c2d;\r\n        font-size: 25px;\r\n\r\n        span {\r\n            font-weight: 300;\r\n            font-size: 14px;\r\n        }\r\n    }\r\n`\r\n","import Header from './Header'\r\n\r\nexport default Header\r\n","import TableView from './TableView'\r\n\r\nexport default TableView\r\n","import React, { useEffect } from 'react'\r\nimport { Loading } from '@wfp/ui'\r\nimport useFilterTiles from '../hooks/useFilterTiles'\r\nimport Grid from '../../Dashboard/Grid'\r\nimport Header from '../Header'\r\n\r\nconst Applicants = ({\r\n    data,\r\n    filters,\r\n    fetchData,\r\n    title,\r\n    gridConfig,\r\n    middle,\r\n    hideEmptyTiles,\r\n    sortModel,\r\n    exportFileName,\r\n}) => {\r\n    useEffect(() => {\r\n        const getData = async () => fetchData()\r\n        getData()\r\n    }, [])\r\n    const [filteredApplications, filterTiles] = useFilterTiles({\r\n        data: data ? data : null,\r\n        filters: filters,\r\n        hideEmptyTiles,\r\n    })\r\n    if (!filteredApplications || !filterTiles)\r\n        return <Loading active withOverlay={true} />\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                count={data.length || 0}\r\n                title={title}\r\n            ></Header>\r\n            {filterTiles}\r\n            {middle || null}\r\n\r\n            <Grid\r\n                data={filteredApplications}\r\n                config={gridConfig}\r\n                exportFileName={exportFileName}\r\n                sortModel={sortModel}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Applicants\r\n","export const globalFilterParams = {\r\n    filterOptions: ['contains', 'notContains'],\r\n    textFormatter: function (r) {\r\n        if (r == null) return null\r\n        // TODO to lowercase because native ag-grid 'caseSensitive'\r\n        // prop is not working with text Formatter\r\n        r = r.toLowerCase()\r\n        r = r.replace(new RegExp('[àáâãäå]', 'g'), 'a')\r\n        r = r.replace(new RegExp('æ', 'g'), 'ae')\r\n        r = r.replace(new RegExp('ç', 'g'), 'c')\r\n        r = r.replace(new RegExp('[èéêë]', 'g'), 'e')\r\n        r = r.replace(new RegExp('[ìíîï]', 'g'), 'i')\r\n        r = r.replace(new RegExp('ñ', 'g'), 'n')\r\n        r = r.replace(new RegExp('[òóôõøö]', 'g'), 'o')\r\n        r = r.replace(new RegExp('œ', 'g'), 'oe')\r\n        r = r.replace(new RegExp('[ùúûü]', 'g'), 'u')\r\n        r = r.replace(new RegExp('[ýÿ]', 'g'), 'y')\r\n        return r\r\n    },\r\n    debounceMs: 0,\r\n    newRowsAction: 'keep',\r\n    caseSensitive: false,\r\n    // TODO decide if we allow the and/or condition\r\n    suppressAndOrCondition: true,\r\n}\r\n\r\nexport function cellRenderBasedOnKey(params, key = 'label') {\r\n    const { value } = params\r\n    return value ? value[key] : null\r\n}\r\n\r\nexport const caseInsensitiveCompare = (valueA, valueB) =>\r\n    valueA.toLowerCase().localeCompare(valueB.toLowerCase())\r\n\r\nexport const gender=[\r\n    {\r\n        id: 1,\r\n        label: \"Male\",\r\n        value: \"Male\"\r\n    },\r\n    {\r\n        id: 2,\r\n        label: \"Female\",\r\n        value: \"Female\"\r\n    }\r\n]\r\n\r\nexport const deptType =[\r\n    {\r\n        id: 1,\r\n        label: \"Agency\",\r\n        value: \"Agency\"\r\n    },\r\n    {\r\n        id: 2,\r\n        label: \"Department\",\r\n        value: \"Department\"\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Unit',\r\n        value: 'Unit'\r\n    }\r\n]\r\n\r\nexport const gradeLevel = [\r\n    {\r\n        id: 1,\r\n        label: 'Level 2',\r\n        value: 'Level 2'\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Level 3',\r\n        value: 'Level 3'\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Level 4',\r\n        value: 'Level 4'\r\n    },\r\n    {\r\n        id: 4,\r\n        label: 'Level 5',\r\n        value: 'Level 5'\r\n    },\r\n    {\r\n        id: 5,\r\n        label: 'Level 6',\r\n        value: 'Level 6'\r\n    },\r\n    {\r\n        id: 6,\r\n        label: 'Level 7',\r\n        value: 'Level 7'\r\n    },\r\n    {\r\n        id: 7,\r\n        label: 'Level 8',\r\n        value: 'Level 8'\r\n    },\r\n    {\r\n        id: 8,\r\n        label: 'Level 9',\r\n        value: 'Level 9'\r\n    },\r\n    {\r\n        id: 9,\r\n        label: 'Level 10',\r\n        value: 'Level 10'\r\n    },\r\n    {\r\n        id: 10,\r\n        label: 'Level 11',\r\n        value: 'Level 11'\r\n    },\r\n    {\r\n        id: 11,\r\n        label: 'Level 12',\r\n        value: 'Level 12'\r\n    },\r\n    {\r\n        id: 12,\r\n        label: 'Level 13',\r\n        value: 'Level 13'\r\n    },\r\n    {\r\n        id: 13,\r\n        label: 'Level 14',\r\n        value: 'Level 14'\r\n    },\r\n    {\r\n        id: 14,\r\n        label: 'Level 15',\r\n        value: 'Level 15'\r\n    },\r\n    {\r\n        id: 15,\r\n        label: 'Level 16',\r\n        value: 'Level 16'\r\n    }\r\n]\r\n\r\nexport const fileType = [\r\n    {\r\n        id: 1,\r\n        label: 'Service file',\r\n        value: 'Service file',\r\n        createServiceFile: true,\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Management file',\r\n        value: \"Management file\",\r\n        createManagementFile: true\r\n    }\r\n]","import { globalFilterParams, cellRenderBasedOnKey } from '../../../shared/utils'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\n\r\nexport const name = () => ({\r\n    headerName: 'Ministry name',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'name',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const createdAt = () => ({\r\n    headerName: 'Created on',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    field: 'createdAt',\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: (params) => {\r\n        return params.data.createdAt && new Date(params.data.createdAt).toDateString()\r\n    },\r\n})\r\n\r\nexport const admin = () => ({\r\n    headerName: 'Designated Admin',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    valueGetter: ({ data }) => \r\n        data.userId \r\n        ? `${data.userId.firstName} ${data.userId.lastName}`\r\n        : null,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'userId',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const action = (onValueChange) => ({\r\n    headerName: 'Action',\r\n    lockPosition: true,\r\n\r\n    __isExported: false,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'action',\r\n    cellRenderer: \"MinistryAction\",\r\n    cellRendererParams: ({data}) => ({\r\n        onValueChange,\r\n        // id: data.sbp_request_id\r\n    }),\r\n    filter: false,\r\n})\r\n\r\n\r\nexport default [\r\n    name,\r\n    admin,\r\n    createdAt,\r\n    action\r\n]","import { globalFilterParams, cellRenderBasedOnKey } from '../../../shared/utils'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\n\r\nexport const firstName = () => ({\r\n    headerName: 'First name',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'firstName',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const lastName = () => ({\r\n    headerName: 'Last name',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'lastName',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const gender = () => ({\r\n    headerName: 'Gender',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'gender',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const email = () => ({\r\n    headerName: 'Email',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'email',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\n\r\nexport const designation = () => ({\r\n    headerName: 'Designation',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'designation',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const telephone = () => ({\r\n    headerName: 'Telephone',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'telephone',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const createdAt = () => ({\r\n    headerName: 'Created on',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    field: 'createdAt',\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: (params) => {\r\n        return params.data.createdAt && new Date(params.data.createdAt).toDateString()\r\n    },\r\n})\r\n\r\nexport const ministry = () => ({\r\n    headerName: 'Ministry',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    valueGetter: ({ data }) => \r\n        data.ministry \r\n        ? `${data.ministry.name}`\r\n        : null,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'ministry',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const action = (onValueChange) => ({\r\n    headerName: 'Action',\r\n    lockPosition: true,\r\n\r\n    __isExported: false,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'action',\r\n    cellRenderer: \"AdminAction\",\r\n    cellRendererParams: ({data}) => ({\r\n        onValueChange,\r\n        // id: data.sbp_request_id\r\n    }),\r\n    filter: false,\r\n})\r\n\r\n\r\nexport default [\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    telephone,\r\n\r\n    gender,\r\n    designation,\r\n\r\n    ministry,\r\n    action\r\n]","import { globalFilterParams, cellRenderBasedOnKey } from '../../../shared/utils'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\n\r\nexport const name = () => ({\r\n    headerName: 'Name',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'name',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const createdAt = () => ({\r\n    headerName: 'Created on',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    field: 'createdAt',\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: (params) => {\r\n        return params.data.createdAt && new Date(params.data.createdAt).toDateString()\r\n    },\r\n})\r\n\r\nexport const no_of_staff = () => ({\r\n    headerName: 'No of staff',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    // field: 'staff',\r\n    valueGetter: ({data}) => data.staff ? data.staff.length : 0,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const sub = () => ({\r\n    headerName: 'No of sub department',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    valueGetter: ({data}) => data.subDepartment ? data.subDepartment.length : 0,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const type = () => ({\r\n    headerName: 'Type',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'type',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const action = (onValueChange) => ({\r\n    headerName: 'Action',\r\n    lockPosition: true,\r\n\r\n    __isExported: false,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'action',\r\n    cellRenderer: \"DepartmentAction\",\r\n    cellRendererParams: ({data}) => ({\r\n        onValueChange,\r\n        // id: data.sbp_request_id\r\n    }),\r\n    filter: false,\r\n})\r\n\r\n\r\nexport default [\r\n    name,\r\n    type,\r\n    no_of_staff,\r\n    sub,\r\n    createdAt,\r\n    action\r\n]","import { globalFilterParams, cellRenderBasedOnKey } from '../../../shared/utils'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\n\r\nexport const name = () => ({\r\n    headerName: 'Name',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'name',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const createdAt = () => ({\r\n    headerName: 'Created on',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    field: 'createdAt',\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: (params) => {\r\n        return params.data.createdAt && new Date(params.data.createdAt).toDateString()\r\n    },\r\n})\r\n\r\nexport const no_of_staff = () => ({\r\n    headerName: 'No of staff',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    // field: 'staff',\r\n    valueGetter: ({data}) => data.staff ? data.staff.length : 0,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const sub = () => ({\r\n    headerName: 'No of sub department',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    valueGetter: ({data}) => data.subDepartment ? data.subDepartment.length : 0,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const type = () => ({\r\n    headerName: 'Type',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'type',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const action = (onValueChange) => ({\r\n    headerName: 'Action',\r\n    lockPosition: true,\r\n\r\n    __isExported: false,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'action',\r\n    cellRenderer: \"SubDepartmentAction\",\r\n    cellRendererParams: ({data}) => ({\r\n        onValueChange,\r\n        // id: data.sbp_request_id\r\n    }),\r\n    filter: false,\r\n})\r\n\r\n\r\nexport default [\r\n    name,\r\n    type,\r\n    no_of_staff,\r\n    // sub,\r\n    createdAt,\r\n    action\r\n]","import { globalFilterParams, cellRenderBasedOnKey } from '../../../shared/utils'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\n\r\nexport const firstName = () => ({\r\n    headerName: 'First name',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'firstName',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const lastName = () => ({\r\n    headerName: 'Last name',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'lastName',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const gender = () => ({\r\n    headerName: 'Gender',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'gender',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    width: 80,\r\n})\r\n\r\nexport const email = () => ({\r\n    headerName: 'Email',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'email',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\n\r\nexport const designation = () => ({\r\n    headerName: 'Designation',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'designation',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const telephone = () => ({\r\n    headerName: 'Telephone',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'telephone',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const createdAt = () => ({\r\n    headerName: 'Created on',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    field: 'createdAt',\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: (params) => {\r\n        return params.data.createdAt && new Date(params.data.createdAt).toDateString()\r\n    },\r\n})\r\n\r\nexport const ministry = () => ({\r\n    headerName: 'Ministry',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    valueGetter: ({ data }) => \r\n        data.ministry \r\n        ? `${data.ministry.name}`\r\n        : null,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'ministry',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const subDepartment = () => ({\r\n    headerName: 'Sub department',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    valueGetter: ({ data }) => \r\n        data.subDepartment \r\n        ? `${data.subDepartment.name}`\r\n        : null,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'subDepartment',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const department = () => ({\r\n    headerName: 'Department',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    valueGetter: ({ data }) => \r\n        data.department \r\n        ? `${data.department.name}`\r\n        : null,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'department',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const action = (onValueChange) => ({\r\n    headerName: 'Action',\r\n    lockPosition: true,\r\n\r\n    __isExported: false,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'action',\r\n    cellRenderer: \"StaffAction\",\r\n    cellRendererParams: ({data}) => ({\r\n        onValueChange,\r\n        // id: data.sbp_request_id\r\n    }),\r\n    filter: false,\r\n    width: 120,\r\n})\r\n\r\n\r\nexport default [\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    telephone,\r\n\r\n    gender,\r\n    designation,\r\n\r\n    department,\r\n    subDepartment,\r\n\r\n    ministry,\r\n    action\r\n]","import { globalFilterParams, cellRenderBasedOnKey } from '../../../shared/utils'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\n\r\nexport const name = () => ({\r\n    headerName: 'File Name/Title',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'name',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const no = () => ({\r\n    headerName: 'File number',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'fileNo',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const type = () => ({\r\n    headerName: 'File type',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'type',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const sentBy = () => ({\r\n    headerName: 'Sent from',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'incoming',\r\n    valueGetter: ({data}) => {\r\n        return data.incoming && data.incoming.sentBy\r\n        ? `${data.incoming.sentBy.firstName}  ${data.incoming.sentBy.lastName}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const department = () => ({\r\n    headerName: 'Department',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'incoming',\r\n    valueGetter: ({data}) => {\r\n        return data.incoming && data.incoming.originatingDept\r\n        ? `${data.incoming.originatingDept.name}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\n\r\n\r\nexport const subDepartment = () => ({\r\n    headerName: 'Sub Department',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'incoming',\r\n    valueGetter: ({data}) => {\r\n        return data.incoming && data.incoming.originatingSubDept\r\n        ? `${data.incoming.originatingSubDept.name}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const sentDate = () => ({\r\n    headerName: 'Sent date',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    // field: 'createdAt',\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: ({data }) => {\r\n        return data.incoming && data.incoming.sentDate \r\n        ? new Date(data.incoming.sentDate).toDateString()\r\n        : null\r\n    },\r\n})\r\n\r\nexport const action = (onValueChange) => ({\r\n    headerName: 'Action',\r\n    lockPosition: true,\r\n    __isExported: false,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'action',\r\n    cellRenderer: \"IncomingFileAction\",\r\n    cellRendererParams: ({data}) => ({\r\n        onValueChange,\r\n        // id: data.sbp_request_id\r\n    }),\r\n    filter: false,\r\n    width: 300,\r\n})\r\n\r\n\r\nexport default [\r\n    name,\r\n    no,\r\n    type,\r\n\r\n    sentBy,\r\n    department,\r\n    subDepartment,\r\n\r\n    sentDate,\r\n\r\n    action\r\n]","import { globalFilterParams, cellRenderBasedOnKey } from '../../../shared/utils'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\n\r\nexport const name = () => ({\r\n    headerName: 'File Name/Title',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'name',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const no = () => ({\r\n    headerName: 'File number',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'fileNo',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const type = () => ({\r\n    headerName: 'File type',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'type',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const destination = () => ({\r\n    headerName: 'Destination',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'outgoing',\r\n    valueGetter: ({data}) => {\r\n        return data.outgoing && data.outgoing.receivingDept\r\n        ? `${data.outgoing.receivingDept.name}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const destinationSubDept = () => ({\r\n    headerName: 'Sub Department',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'outgoing',\r\n    valueGetter: ({data}) => {\r\n        return data.outgoing && data.outgoing.receivingSubDept\r\n        ? `${data.outgoing.receivingSubDept.name}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const designationOfficer = () => ({\r\n    headerName: 'Designated Officer',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'outgoing',\r\n    valueGetter: ({data}) => {\r\n        return data.outgoing && data.outgoing.receivedBy\r\n        ? `${data.outgoing.receivedBy.firstName} ${data.outgoing.receivedBy.lastName}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\n\r\n\r\n\r\nexport const date = () => ({\r\n    headerName: 'Date forwarded',\r\n    editable: false,\r\n    lockPosition: true,\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: ({data }) => {\r\n        return data.outgoing && data.outgoing.sentDate \r\n        ? new Date(data.outgoing.sentDate).toDateString()\r\n        : null\r\n    },\r\n})\r\n\r\nexport const status = () => ({\r\n    headerName: 'Status',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    valueGetter: ({data}) => \"Awaiting response\",\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const action = (onValueChange) => ({\r\n    headerName: 'Action',\r\n    lockPosition: true,\r\n    __isExported: false,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'action',\r\n    cellRenderer: \"OutgoingFileAction\",\r\n    cellRendererParams: ({data}) => ({\r\n        onValueChange,\r\n        // id: data.sbp_request_id\r\n    }),\r\n    filter: false,\r\n})\r\n\r\n\r\nexport default [\r\n    name,\r\n    no,\r\n    type,\r\n\r\n    destination,\r\n    destinationSubDept,\r\n    designationOfficer,\r\n\r\n    date,\r\n    status,\r\n\r\n    action\r\n]","import { globalFilterParams, cellRenderBasedOnKey } from '../../../shared/utils'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\n\r\nexport const name = () => ({\r\n    headerName: 'File Name/Title',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'name',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const no = () => ({\r\n    headerName: 'File number',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'fileNo',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const type = () => ({\r\n    headerName: 'File type',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'type',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const sentBy = () => ({\r\n    headerName: 'Sent from',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'incoming',\r\n    valueGetter: ({data}) => {\r\n        return data.pending  && data.pending.sentBy\r\n        ? `${data.pending.sentBy.firstName}  ${data.pending.sentBy.lastName}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const department = () => ({\r\n    headerName: 'Department',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'pending',\r\n    valueGetter: ({data}) => {\r\n        return data.pending && data.pending.originatingDept\r\n        ? `${data.pending.originatingDept.name}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\n\r\n\r\nexport const subDepartment = () => ({\r\n    headerName: 'Sub Department',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'pending',\r\n    valueGetter: ({data}) => {\r\n        return data.pending && data.pending.originatingSubDept\r\n        ? `${data.pending.originatingSubDept.name}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const sentDate = () => ({\r\n    headerName: 'Sent date',\r\n    editable: false,\r\n    lockPosition: true,\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: ({data }) => {\r\n        return data.pending && data.pending.receivedDate \r\n        ? new Date(data.pending.receivedDate).toDateString()\r\n        : null\r\n    },\r\n})\r\n\r\nexport const action = (onValueChange) => ({\r\n    headerName: 'Action',\r\n    lockPosition: true,\r\n    __isExported: false,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'action',\r\n    cellRenderer: \"InProcessFileAction\",\r\n    cellRendererParams: ({data}) => ({\r\n        onValueChange,\r\n        // id: data.sbp_request_id\r\n    }),\r\n    filter: false,\r\n    width: 450,\r\n})\r\n\r\n\r\nexport default [\r\n    name,\r\n    no,\r\n    type,\r\n\r\n    sentBy,\r\n    department,\r\n    subDepartment,\r\n\r\n    sentDate,\r\n\r\n    action\r\n]","import { globalFilterParams, cellRenderBasedOnKey } from '../../../shared/utils'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\n\r\nexport const name = () => ({\r\n    headerName: 'File Name/Title',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'name',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const no = () => ({\r\n    headerName: 'File number',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'fileNo',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const type = () => ({\r\n    headerName: 'File type',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'type',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const sentBy = () => ({\r\n    headerName: 'Sent from',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'incoming',\r\n    valueGetter: ({data}) => {\r\n        return data.sent && data.sent[0].sentBy\r\n        ? `${data.sent[0].sentBy.firstName}  ${data.sent[0].sentBy.lastName}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const department = () => ({\r\n    headerName: 'Department',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'incoming',\r\n    valueGetter: ({data}) => {\r\n        return data.sent && data.sent[0].originatingDept\r\n        ? `${data.sent[0].originatingDept.name}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\n\r\n\r\nexport const subDepartment = () => ({\r\n    headerName: 'Sub Department',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'incoming',\r\n    valueGetter: ({data}) => {\r\n        return data.sent && data.sent[0].originatingSubDept\r\n        ? `${data.sent[0].originatingSubDept.name}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const sentDate = () => ({\r\n    headerName: 'Sent date',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    // field: 'createdAt',\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: ({data }) => {\r\n        return data.sent && data.sent[0].sentDate \r\n        ? new Date(data.sent[0].sentDate).toDateString()\r\n        : null\r\n    },\r\n})\r\n\r\nexport const action = (onValueChange) => ({\r\n    headerName: 'Action',\r\n    lockPosition: true,\r\n    __isExported: false,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'action',\r\n    cellRenderer: \"SentFileAction\",\r\n    cellRendererParams: ({data}) => ({\r\n        onValueChange,\r\n        // id: data.sbp_request_id\r\n    }),\r\n    filter: false,\r\n    // width: 300,\r\n})\r\n\r\nexport const status = () => ({\r\n    headerName: 'Status',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    valueGetter: ({data}) => \"File received\",\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\n\r\nexport default [\r\n    name,\r\n    no,\r\n    type,\r\n\r\n    sentBy,\r\n    department,\r\n    subDepartment,\r\n\r\n    sentDate,\r\n    status,\r\n\r\n    action\r\n]","import { globalFilterParams, cellRenderBasedOnKey } from '../../../shared/utils'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\n\r\nexport const name = () => ({\r\n    headerName: 'File Name/Title',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'name',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const no = () => ({\r\n    headerName: 'File number',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'fileNo',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const type = () => ({\r\n    headerName: 'File type',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'type',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\n\r\nexport const openingDate = () => ({\r\n    headerName: 'Opening date',\r\n    editable: false,\r\n    lockPosition: true,\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: ({data }) => {\r\n        return data.createdDate  \r\n        ? new Date(data.createdDate).toDateString()\r\n        : null\r\n    },\r\n})\r\n\r\n\r\nexport const closingDate = () => ({\r\n    headerName: 'Closing date',\r\n    editable: false,\r\n    lockPosition: true,\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: ({data }) => {\r\n        return data.archived && data.archived.archivedDate  \r\n        ? new Date(data.archived.archivedDate).toDateString()\r\n        : null\r\n    },\r\n})\r\n\r\nexport const action = (onValueChange) => ({\r\n    headerName: 'Action',\r\n    lockPosition: true,\r\n    __isExported: false,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'action',\r\n    cellRenderer: \"SentFileAction\",\r\n    cellRendererParams: ({data}) => ({\r\n        onValueChange,\r\n        // id: data.sbp_request_id\r\n    }),\r\n    filter: false,\r\n    // width: 300,\r\n})\r\n\r\n\r\n\r\nexport default [\r\n    name,\r\n    no,\r\n    type,\r\n\r\n    openingDate,\r\n    closingDate,\r\n\r\n    action\r\n]","import { globalFilterParams, cellRenderBasedOnKey } from '../../../shared/utils'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\n\r\nexport const name = () => ({\r\n    headerName: 'File Name/Title',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'name',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const no = () => ({\r\n    headerName: 'File number',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'fileNo',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const type = () => ({\r\n    headerName: 'File type',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'type',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const justification = () => ({\r\n    headerName: 'Justification',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'delayed',\r\n    valueGetter: ({data}) => {\r\n        return data.delayed && data.delayed.justification\r\n        ? data.delayed.justification\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const department = () => ({\r\n    headerName: 'Department',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'incoming',\r\n    valueGetter: ({data}) => {\r\n        return data.delayed && data.delayed.delayedDept\r\n        ? `${data.delayed.delayedDept.name}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\n\r\n\r\nexport const subDepartment = () => ({\r\n    headerName: 'Sub Department',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'incoming',\r\n    valueGetter: ({data}) => {\r\n        return data.delayed && data.delayed.delayedSubDept\r\n        ? `${data.delayed.delayedSubDept.name}`\r\n        : null\r\n    },\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const delayedDate = () => ({\r\n    headerName: 'Delayed date',\r\n    // width: 140,\r\n    editable: false,\r\n    lockPosition: true,\r\n    // field: 'createdAt',\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: ({data }) => {\r\n        return data.delayed && data.delayed.delayedDate \r\n        ? new Date(data.delayed.delayedDate).toDateString()\r\n        : null\r\n    },\r\n})\r\n\r\nexport const action = (onValueChange) => ({\r\n    headerName: 'Action',\r\n    lockPosition: true,\r\n    __isExported: false,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'action',\r\n    cellRenderer: \"DelayedFileAction\",\r\n    cellRendererParams: ({data}) => ({\r\n        onValueChange,\r\n        // id: data.sbp_request_id\r\n    }),\r\n    filter: false,\r\n    width: 400,\r\n})\r\n\r\n\r\nexport default [\r\n    name,\r\n    no,\r\n    type,\r\n\r\n    department,\r\n    subDepartment,\r\n\r\n    delayedDate,\r\n    justification,\r\n\r\n    action\r\n]","import { globalFilterParams, cellRenderBasedOnKey } from '../../../shared/utils'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\n\r\n\r\nexport const name = () => ({\r\n    headerName: 'File Name/Title',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'name',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const no = () => ({\r\n    headerName: 'File number',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'fileNo',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\nexport const type = () => ({\r\n    headerName: 'File type',\r\n    lockPosition: true,\r\n    __isExported: true,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'type',\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n})\r\n\r\n\r\nexport const createdDate = () => ({\r\n    headerName: 'Opening date',\r\n    editable: false,\r\n    lockPosition: true,\r\n    field: 'createdDate',\r\n    keyCreator: cellRenderBasedOnKey,\r\n    filter: 'agTextColumnFilter',\r\n    filterParams: globalFilterParams,\r\n    __isExported: true,\r\n    comparator: (date1, date2) => new Date(date1) - new Date(date2),\r\n    valueGetter: ({data }) => {\r\n        return data.createdDate\r\n        ? new Date(data.createdDate).toDateString()\r\n        : null\r\n    },\r\n})\r\n\r\nexport const action = (onValueChange) => ({\r\n    headerName: 'Action',\r\n    lockPosition: true,\r\n    __isExported: false,\r\n    hide: false,\r\n    editable: false,\r\n    field: 'action',\r\n    cellRenderer: \"RegistryAction\",\r\n    cellRendererParams: ({data}) => ({\r\n        onValueChange,\r\n        // id: data.sbp_request_id\r\n    }),\r\n    filter: false,\r\n    // width: 300,\r\n})\r\n\r\n\r\nexport default [\r\n    name,\r\n    no,\r\n    type,\r\n\r\n    createdDate,\r\n\r\n    action\r\n]","import ministryColDef from '../Dashboard/views/MinistryColDef/ministryColDef'\r\nimport adminColDef from '../Dashboard/views/Admin/adminColDef'\r\nimport departmentColDef from \"../AdminDashboard/views/DepartmentColDef/departmentColDef\";\r\nimport subDepartment from '../AdminDashboard/views/SubDepartmentColDef/subDepartmentColDef'\r\nimport staffColDef from '../AdminDashboard/views/Staff/staffColDef'\r\nimport incomingFile from '../ManageFile/views/IncomingColDef/incomingColDef'\r\nimport outgoingFile from '../ManageFile/views/OutgoingColDef/outgoingColDef'\r\nimport inProcessFile from '../ManageFile/views/InProcessFileColDef/inProcessColDef'\r\nimport sentFile from '../ManageFile/views/SentFileColDef/sentFileColDef'\r\nimport archivedFile from '../ManageFile/views/ArchivedFile/archivedFileColDef'\r\nimport delayedFile from '../ManageFile/views/DelayedFileColDef/delayedFileColDef'\r\nimport registryFile from '../ManageFile/views/Registry/registryColDef'\r\n\r\n// this function returns only the columns needed for specific view (for example /hr/global )\r\nexport default function getColumnDefs(viewName, onValueChange) {\r\n    let columnDefs\r\n    switch (viewName) {\r\n        case 'ministry':\r\n            columnDefs = [ ...ministryColDef ]\r\n            break;\r\n        case 'admin':\r\n            columnDefs = [ ...adminColDef ]\r\n            break;\r\n\r\n        case 'department':\r\n            columnDefs = [ ...departmentColDef ]\r\n            break;  \r\n\r\n        case 'subDepartment': \r\n            columnDefs = [ ...subDepartment ]\r\n            break;\r\n\r\n        case 'staff': \r\n            columnDefs = [ ...staffColDef ]\r\n            break;\r\n        \r\n        case 'incomingFile':\r\n            columnDefs= [ ...incomingFile ]\r\n            break;\r\n\r\n        case 'outgoingFile': \r\n            columnDefs= [ ...outgoingFile ]\r\n            break;\r\n\r\n        case 'inProcessFile': \r\n            columnDefs= [ ...inProcessFile ]\r\n            break;\r\n\r\n        case 'sentFile':\r\n            columnDefs=[...sentFile]\r\n            break;\r\n\r\n        case 'archivedFile':\r\n            columnDefs= [...archivedFile ]\r\n            break;\r\n\r\n        case 'delayedFile':\r\n            columnDefs= [...delayedFile]\r\n            break;\r\n\r\n        case 'registryFile':\r\n            columnDefs= [...registryFile];\r\n            break;\r\n            \r\n        default:\r\n            columnDefs = []\r\n            break\r\n    }\r\n\r\n    // compose column with optional callback on value change\r\n    // if object is passed then generate column definition and extend it with customProps\r\n    columnDefs = columnDefs.map((col) => {\r\n        if (typeof col === 'function') {\r\n            return col(onValueChange)\r\n        } else {\r\n            return { ...col.def(onValueChange), ...col.customProps }\r\n        }\r\n    })\r\n\r\n    // getting fields that should be exported to CSV\r\n    const exportedColumns = columnDefs\r\n        .filter((col) => col.__isExported === true)\r\n        .map((col) => col.field);\r\n\r\n    // deleting helper properties that are not part of ag-grid API\r\n    columnDefs = columnDefs.map((col) => {\r\n        const colCopy = { ...col }\r\n        delete colCopy.__isExported\r\n        return colCopy\r\n    })\r\n    return {\r\n        columnDefs,\r\n        exportedColumns,\r\n    }\r\n}\r\n","import React from 'react'\r\nimport useSWR, { trigger } from 'swr'\r\nimport { Button } from '@wfp/ui'\r\nimport {iconAddOutline} from '@wfp/icons';\r\n\r\nimport TableView from '../TableView'\r\nimport getColumnDefs from '../../shared/columnDefs'\r\n\r\nconst filters = [\r\n    {\r\n        title: 'Assigned',\r\n        role: 'Admin',\r\n        comparator: (rowData) =>\r\n            rowData.userId.firstName != null\r\n    },\r\n    {\r\n        title: 'Not assigned',\r\n        role: 'Admin',\r\n        warning: true,\r\n        comparator: (rowData) =>\r\n        rowData.userId.firstName == null\r\n    },\r\n]\r\nconst endpoint = '/v1/ministry/'\r\n\r\nconst MinistryView = ({props}) => {\r\n    const { data } = useSWR(endpoint)\r\n    const fetchData = () => true\r\n    const applications = data ? data.data : null;\r\n    return (\r\n        <>\r\n        <div id=\"export-button-portal\" >\r\n            <Button\r\n               onClick={(data)=> {\r\n                   console.log(data)\r\n                   props.history.push('/create-ministry')\r\n               }}\r\n                icon={iconAddOutline}\r\n                kind=\"secondary\"\r\n                small\r\n            >\r\n                Create ministry\r\n            </Button>\r\n        </div>\r\n        <TableView\r\n            title={'Created ministries'}\r\n            data={applications}\r\n            filters={[]}\r\n            fetchData={fetchData}\r\n            gridConfig={getColumnDefs('ministry', fetchData)}\r\n            exportFileName={'Ministry details'}\r\n        />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MinistryView\r\n","import React from 'react'\r\nimport TableView from '../TableView'\r\nimport getColumnDefs from '../../shared/columnDefs'\r\nimport { Button } from '@wfp/ui'\r\nimport {iconAddOutline} from '@wfp/icons';\r\nimport useSWR, { trigger } from 'swr'\r\n\r\nconst filters = [\r\n    {\r\n        title: 'Pending Screening',\r\n        role: 'Screener',\r\n        warning: true,\r\n        comparator: (rowData) =>\r\n            rowData.lastName == null,\r\n    },\r\n   \r\n]\r\nconst endpoint = '/v1/user/admin/admin-list'\r\n\r\nconst Admin = ({props}) => {\r\n    const { data } = useSWR(endpoint)\r\n    const fetchData = () => trigger(endpoint)\r\n    const applications = data ? data.data.data : null;\r\n\r\n    return (\r\n        <>\r\n        <div id=\"export-button-portal\" >\r\n            <Button\r\n                onClick={()=> props.history.push('/create-admin')}\r\n                icon={iconAddOutline}\r\n                kind=\"secondary\"\r\n                small\r\n            >\r\n                Create admin\r\n            </Button>\r\n        </div>\r\n        <TableView\r\n            title={'Ministry Administrators'}\r\n            data={applications}\r\n            filters={[]}\r\n            fetchData={fetchData}\r\n            gridConfig={getColumnDefs('admin', fetchData)}\r\n            // exportFileName={'Admin details'}\r\n        />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MySecondaryNavigation from './MySecondaryNavigation'\r\nimport { Wrapper, Tabs, Tab, MainNavigationItem } from '@wfp/ui'\r\n\r\nimport MinistryTable from './views/MinistryTable'\r\nimport AdminTable from './views/AdminTable'\r\n\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport ReactDOM from 'react-dom'\r\nimport Header from '../shared/Header'\r\nimport MiddleHeader from '../shared/MiddleHeader'\r\nimport Footer from '../shared/Footer'\r\n\r\nconst listElReactRouter = ({\r\n    index,\r\n    selected,\r\n    label,\r\n    to,\r\n    exact,\r\n    handleTabClick,\r\n}) => (\r\n    <Route\r\n        path={to}\r\n        exact={exact}\r\n        children={({ match }) => {\r\n            if (match && !selected) {\r\n                /* handle the Tab changes */\r\n                handleTabClick(index, label)\r\n            }\r\n            return (\r\n                <div\r\n                    className={\r\n                        match\r\n                            ? 'wfp--tabs__nav-item wfp--tabs__nav-item--selected'\r\n                            : 'wfp--tabs__nav-item'\r\n                    }\r\n                >\r\n                    <Link className=\"wfp--tabs__nav-link\" to={to}>\r\n                        {label}\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }}\r\n    />\r\n)\r\nconst Dashboard = (props) => {\r\n    const views = [\r\n        {\r\n            permissions: true,\r\n            default: true,\r\n            label: 'Ministry',\r\n            path: '/ministry/list',\r\n            component: () => <MinistryTable props={props} />,\r\n        },\r\n\r\n        {\r\n            permissions: true,\r\n            label: 'Admin',\r\n            path: '/ministry/admin',\r\n            component: () => <AdminTable props={props}  />,\r\n        },\r\n    ]\r\n\r\n    const defaultView = views.find((view) => view.default );\r\n    const allowedViews = views.filter((view) =>  view.permissions );\r\n    \r\n    return (\r\n        <div>\r\n            {/* <Header /> */}\r\n            <MySecondaryNavigation\r\n                l1Label=\"Traquer\"\r\n                l1Link=\"#\"\r\n                pageTitle={`Traquer`}\r\n                tabs={\r\n                    <Tabs customTabContent={true}>\r\n                        {allowedViews.map((view, i) => (\r\n                            <Tab\r\n                                key={i}\r\n                                label={view.label}\r\n                                to={view.path}\r\n                                renderListElement={listElReactRouter}\r\n                            ></Tab>\r\n                        ))}\r\n                    </Tabs>\r\n                }\r\n            ></MySecondaryNavigation>\r\n            <div\r\n                className=\"wfp--module__background\"\r\n                style={{ minHeight: '400px' }}\r\n            >\r\n                <Wrapper pageWidth=\"lg\" spacing=\"md\">\r\n                    <InnerWrapper>\r\n                        {/* <div id=\"export-button-portal\" /> */}\r\n                        <Switch>\r\n                            {allowedViews.map((view, i) => (\r\n                                <Route\r\n                                    key={i}\r\n                                    path={view.path}\r\n                                    render={view.component}\r\n                                />\r\n                            ))}\r\n\r\n                            <Redirect\r\n                                to={\r\n                                    defaultView\r\n                                        ? defaultView.path\r\n                                        : '/login'\r\n                                }\r\n                            />\r\n                        </Switch>\r\n                    </InnerWrapper>\r\n                </Wrapper>\r\n            </div>\r\n            {/* <Footer /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\nconst InnerWrapper = styled.div`\r\n    position: relative;\r\n    padding-bottom: 1rem;;\r\n    #export-button-portal {\r\n        position: absolute;\r\n        right: 0;\r\n        top: -95px;\r\n    }\r\n`\r\n","import Dashboard from './Dashboard'\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport _ from 'lodash'\r\nimport { Row, Col } from 'react-flexbox-grid'\r\nimport Select from 'react-select'\r\n\r\nimport MySecondaryNavigation from '../MySecondaryNavigation'\r\nimport {\r\n    Wrapper,\r\n    Loading,\r\n    Module,\r\n    ModuleHeader,\r\n    ModuleBody,\r\n    ModuleFooter,\r\n    Button,\r\n    FormGroup,\r\n    TextInput,\r\n    ReduxFormWrapper,\r\n} from '@wfp/ui'\r\nimport { iconCloseOutline } from '@wfp/icons'\r\nimport { gradeLevel, gender } from '../../shared/utils'\r\n\r\nimport { Form, FormSpy, Field } from 'react-final-form'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\nclass Create extends React.Component {\r\n    state = {\r\n        lastSaved: null,\r\n        formData: null,\r\n        showErrors: false,\r\n        loading: false,\r\n        ministry: [],\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        this.fetchMinistry()\r\n\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n\r\n        if(state && state.edit && state.data){\r\n            const { firstName, lastName, email, gender, telephone, gradeLevel, designation,\r\n                ministry,} = state.data;\r\n\r\n                console.log('state.data', state.data)\r\n            \r\n            this.setState({\r\n                formData:{\r\n                    firstName,\r\n                    lastName,\r\n                    email,\r\n                    gender: {label: gender, value: gender},\r\n                    telephone,\r\n                    gradeLevel: {label: gradeLevel, value: gradeLevel},\r\n                    designation,\r\n                    // staffId,\r\n                    ministry\r\n                }\r\n            })\r\n        };\r\n    }\r\n\r\n    fetchMinistry=  async () => {\r\n        try {\r\n            axios.get(`/v1/ministry`)\r\n            .then(data=> this.setState({ ministry : data.data }))\r\n        } catch (err) {\r\n            console.log('Error while loading ministry', err)\r\n        }\r\n    }\r\n    \r\n    onSubmit = async (values) => {\r\n        this.setState({ loading: true });\r\n\r\n        const { firstName, lastName, email, gender, telephone, gradeLevel, designation,\r\n        ministry,} = values;\r\n\r\n        const formData={\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            gender: gender.value,\r\n            telephone,\r\n            gradeLevel: gradeLevel.value,\r\n            designation,\r\n            // staffId,\r\n            ministry: ministry._id,\r\n            isAdmin: true,\r\n            isSuper: false,\r\n            isStaff: false,\r\n            // userType: 'Admin'\r\n        };\r\n\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n\r\n        try {\r\n            if(state && state.edit){\r\n                await axios.put(`/v1/user/update/${state.id}`, formData)\r\n                .then(()=> this.setState({ loading: false }))\r\n                toast('Successfully updated ', {closeOnClick: true, autoClose: 1000 });\r\n                this.props.history.goBack()\r\n            }\r\n            else{\r\n                await axios.post(`/v1/user/add`, formData)\r\n                .then(()=>toast('Successfully created'), {closeOnClick: true, autoClose: 1000 })\r\n                this.setState({ loading: false });\r\n                this.props.history.goBack()\r\n            }\r\n        } catch (err) {\r\n            console.log('Error in ScreeningForm onSubmit method', err)\r\n            toast.error('Oops! something went wrong. Please try again ', {closeOnClick: true, autoClose: 1000 });\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        const { showErrors } = this.state\r\n        const { formData, loading, ministry } = this.state\r\n        const { id } = this.props.match.params;\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n        \r\n        return (\r\n            <>\r\n                <MySecondaryNavigation\r\n                    l1Label=\"Admin\"\r\n                    l1Link=\"/ministry/admin\"\r\n                    l2Label={  state && state.edit ? \"Update Admin data\" : \"Create ministry administrator\"}\r\n                    l2Link=\"#\"\r\n                    pageTitle={  state && state.edit ? \"Update Admin data\" : \"Create ministry administrator\"}\r\n                />\r\n                {loading ? (\r\n                    <Loading active={true} withOverlay={true} />\r\n                ) : (\r\n                    <div\r\n                        className=\"wfp--module__background\"\r\n                        style={{ minHeight: '400px' }}\r\n                    >\r\n                        <Wrapper\r\n                            pageWidth=\"lg\"\r\n                            spacing=\"md\"\r\n                            mobilePageWidth=\"full\"\r\n                        >\r\n\r\n                            <Form\r\n                                onSubmit={this.onSubmit}\r\n                                initialValues={formData}\r\n                                validate={(values) => {\r\n                                    const errors = {}\r\n                                    const {\r\n                                        ministry,\r\n                                    } = values\r\n\r\n                                    if (!ministry) {\r\n                                        errors.ministry = {\r\n                                            value:\r\n                                                'Ministry name is required',\r\n                                            show: showErrors,\r\n                                        }\r\n                                    } \r\n                                    return errors\r\n                                }}\r\n                                render={({ values, onSave, valid, reset }) => (\r\n                                    <form>\r\n                                        <Module noMargin>\r\n                                            <ModuleHeader>\r\n                                                <span style={{ fontSize: 20 }}>\r\n                                                    Create administrator\r\n                                                </span>\r\n                                            </ModuleHeader>\r\n                                            <ModuleBody>\r\n                                                <Row>\r\n                                                <Col \r\n                                                    md={6}\r\n                                                    sm={6}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            inputComponent={\r\n                                                                TextInput\r\n                                                            }\r\n                                                            id=\"firstName\"\r\n                                                            name=\"firstName\"\r\n                                                            type=\"text\"\r\n                                                            labelText=\"First name\"\r\n                                                        />\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n\r\n                                                <Col \r\n                                                    md={5}\r\n                                                    sm={5}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            inputComponent={\r\n                                                                TextInput\r\n                                                            }\r\n                                                            id=\"lastName\"\r\n                                                            name=\"lastName\"\r\n                                                            type=\"text\"\r\n                                                            labelText=\"Last name\"\r\n                                                        />\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n                                                </Row>\r\n\r\n                                                <Col \r\n                                                    md={6}\r\n                                                    sm={6}\r\n                                                    xs={12}\r\n                                                >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"email\"\r\n                                                        name=\"email\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"Email\"\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                            <Col \r\n                                                md={6}\r\n                                                sm={6}\r\n                                                xs={12}\r\n                                            >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"telephone\"\r\n                                                        name=\"telephone\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"Telephone\"\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                            \r\n                                            <Col \r\n                                                md={6}\r\n                                                sm={6}\r\n                                                xs={12}\r\n                                            >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"designation\"\r\n                                                        name=\"designation\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"Designation\"\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                            <Col \r\n                                                md={6}\r\n                                                sm={6}\r\n                                                xs={12}\r\n                                            >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        name=\"gradeLevel\"\r\n                                                        labelText=\"Grade level\"\r\n                                                        placeholder=\"Select grade level\"\r\n                                                    >\r\n                                                        {({\r\n                                                            input,\r\n                                                            meta,\r\n                                                        }) => (\r\n                                                            <>\r\n                                                            <div className='wfp--label'>Grade level</div>\r\n                                                            <Select\r\n                                                                className=\"wfp--react-select-container auto-width\"\r\n                                                                classNamePrefix=\"wfp--react-select\"\r\n                                                                closeMenuOnSelect={true}\r\n                                                                // onChange={(vars) => {\r\n                                                                //     this.languageChange(vars, originalOnChange)\r\n                                                                // }}\r\n                                                                options={gradeLevel}\r\n                                                                getOptionValue={(option) =>\r\n                                                                    option['value'] ? option['value'] : option['id']\r\n                                                                }\r\n                                                                getOptionLabel={(option) =>\r\n                                                                    option['label']\r\n                                                                }\r\n                                                                {...input}\r\n                                                                {...meta}\r\n                                                            />\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Field>\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                            <Col \r\n                                                md={6}\r\n                                                sm={6}\r\n                                                xs={12}\r\n                                            >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        name=\"gender\"\r\n                                                        labelText=\"gender\"\r\n                                                        placeholder=\"Select gender\"\r\n                                                    >\r\n                                                        {({\r\n                                                            input,\r\n                                                            meta,\r\n                                                        }) => (\r\n                                                            <>\r\n                                                            <div className='wfp--label'>Gender</div>\r\n                                                            <Select\r\n                                                                className=\"wfp--react-select-container auto-width\"\r\n                                                                classNamePrefix=\"wfp--react-select\"\r\n                                                                closeMenuOnSelect={true}\r\n                                                                options={gender}\r\n                                                                getOptionValue={(option) =>\r\n                                                                    option['value'] ? option['value'] : option['id']\r\n                                                                }\r\n                                                                getOptionLabel={(option) =>\r\n                                                                    option['label']\r\n                                                                }\r\n                                                                {...input}\r\n                                                                {...meta}\r\n                                                            />\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Field>\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col \r\n                                                md={6}\r\n                                                sm={6}\r\n                                                xs={12}\r\n                                            >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        name=\"ministry\"\r\n                                                        labelText=\"Ministry\"\r\n                                                        placeholder=\"Select ministry\"\r\n                                                    >\r\n                                                        {({\r\n                                                            input,\r\n                                                            meta,\r\n                                                        }) => (\r\n                                                            <>\r\n                                                            <div className='wfp--label'>Ministry</div>\r\n                                                            <Select\r\n                                                                className=\"wfp--react-select-container auto-width\"\r\n                                                                classNamePrefix=\"wfp--react-select\"\r\n                                                                closeMenuOnSelect={true}\r\n                                                                // onChange={(vars) => {\r\n                                                                //     this.languageChange(vars, originalOnChange)\r\n                                                                // }}\r\n                                                                options={ministry}\r\n                                                                getOptionValue={(option) =>\r\n                                                                    option['_id'] \r\n                                                                }\r\n                                                                getOptionLabel={(option) =>\r\n                                                                    option['name']\r\n                                                                }\r\n                                                                {...input}\r\n                                                                {...meta}\r\n                                                            />\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Field>\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                            </ModuleBody>\r\n                                            <ModuleFooter>\r\n                                                <div></div>\r\n                                                <div\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        textAlign: 'right',\r\n                                                        margin: '1.5rem 0',\r\n                                                    }}\r\n                                                >\r\n                                                    <Button\r\n                                                        kind=\"secondary\"\r\n                                                        onClick={() =>\r\n                                                            this.props.history.goBack()\r\n                                                        }\r\n                                                    >\r\n                                                        Go back\r\n                                                    </Button>\r\n\r\n                                                    <Button\r\n                                                        // disabled={!valid}\r\n                                                        onClick={(e) => {\r\n                                                            e.preventDefault()\r\n                                                            this.onSubmit(\r\n                                                                values\r\n                                                            )\r\n                                                        }}\r\n                                                    >\r\n                                                       {state && state.edit ? \"Update\" : \"Create\"} \r\n                                                    </Button>\r\n                                                </div>\r\n                                            </ModuleFooter>\r\n                                        </Module>\r\n                                        {showErrors && (\r\n                                            <div\r\n                                                style={{\r\n                                                    padding: '5px',\r\n                                                    width: '100%',\r\n                                                    background: '#C5192D',\r\n                                                    color: 'white',\r\n                                                    textAlign: 'center',\r\n                                                }}\r\n                                            >\r\n                                                Please fill in all required\r\n                                                fields\r\n                                            </div>\r\n                                        )}\r\n                                    </form>\r\n                                )}\r\n                            />\r\n                        </Wrapper>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Create)\r\nconst FieldWrapper = styled.div`\r\n    margin-bottom: 30px;\r\n`\r\n","import React from 'react'\r\nimport useSWR, { trigger } from 'swr'\r\nimport { Button } from '@wfp/ui'\r\nimport {iconAddOutline, iconDocument} from '@wfp/icons';\r\n\r\nimport TableView from '../../Dashboard/TableView'\r\nimport getColumnDefs from '../../shared/columnDefs'\r\nimport store from '../../store'\r\n\r\nconst filters = [\r\n    {\r\n        title: 'Agency',\r\n        role: 'Type',\r\n        amountLabel: 'Section',\r\n        comparator: (rowData) =>\r\n            rowData.type == \"Agency\"\r\n    },\r\n    {\r\n        title: 'Department',\r\n        role: 'Type',\r\n        amountLabel: 'Section',\r\n        comparator: (rowData) =>\r\n        rowData.type == \"Department\"\r\n    },\r\n\r\n    {\r\n        title: 'Unit',\r\n        role: 'Type',\r\n        amountLabel: 'Section',                 \r\n        comparator: (rowData) =>\r\n        rowData.type == \"Unit\"\r\n    },\r\n\r\n    {\r\n        title: 'Uncategorized',\r\n        role: 'Type',\r\n        amountLabel: 'Section',\r\n        warning: true,\r\n        comparator: (rowData) =>\r\n        rowData.type == null\r\n    },\r\n]\r\n\r\n\r\nconst View = ({props}) => {\r\n\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n\r\n    const endpoint = `/v1/department/department-list/${user && user._id}`\r\n\r\n    const { data } = useSWR(endpoint)\r\n    const fetchData = () => true;\r\n    const applications = data ? data.data.data : null;\r\n    return (\r\n        <>\r\n        <div id=\"export-button-portal\" >\r\n            <Button\r\n                onClick={(data)=> {\r\n                    props.history.push(`/file`)\r\n                }}\r\n                    icon={iconDocument}\r\n                    kind=\"secondary\"\r\n                    small\r\n            >\r\n                    Manage file\r\n            </Button>\r\n            <span style={{ paddingLeft: 20 }} />\r\n            <Button\r\n               onClick={(data)=> {\r\n                   props.history.push('/create-department')\r\n               }}\r\n                icon={iconAddOutline}\r\n                kind=\"secondary\"\r\n                small\r\n            >\r\n                Create department\r\n            </Button>\r\n        </div>\r\n        <TableView\r\n            title={'Departments'}\r\n            data={applications}\r\n            filters={filters}\r\n            fetchData={fetchData}\r\n            gridConfig={getColumnDefs('department', fetchData)}\r\n            exportFileName={'department details'}\r\n        />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View\r\n","import React from 'react'\r\nimport TableView from '../../Dashboard/TableView'\r\nimport getColumnDefs from '../../shared/columnDefs'\r\nimport { Button } from '@wfp/ui'\r\nimport {iconAddOutline, iconDocument} from '@wfp/icons';\r\nimport useSWR, { trigger } from 'swr'\r\n\r\nconst filters = [\r\n    {\r\n        title: 'Pending Screening',\r\n        role: 'Screener',\r\n        warning: true,\r\n        comparator: (rowData) =>\r\n            rowData.lastName == null,\r\n    },\r\n   \r\n]\r\n\r\n\r\nconst Admin = ({props}) => {\r\n    const {user} = props;\r\n\r\n    const endpoint = `/v1/user/staff-list/${user && user._id}`\r\n    const { data } = useSWR(endpoint)\r\n    const fetchData = () => trigger(endpoint)\r\n    const applications = data ? data.data.data : null;\r\n\r\n    return (\r\n        <>\r\n        <div id=\"export-button-portal\" >\r\n            <Button\r\n                onClick={(data)=> {\r\n                    props.history.push(`/file`)\r\n                }}\r\n                    icon={iconDocument}\r\n                    kind=\"secondary\"\r\n                    small\r\n            >\r\n                    Manage file\r\n            </Button>\r\n            <span style={{ paddingLeft: 20 }} />\r\n\r\n            <Button\r\n                onClick={()=> props.history.push('/create-staff')}\r\n                icon={iconAddOutline}\r\n                kind=\"secondary\"\r\n                small\r\n            >\r\n                Create staff\r\n            </Button>\r\n        </div>\r\n        <TableView\r\n            title={'Staff list'}\r\n            data={applications}\r\n            filters={[]}\r\n            fetchData={fetchData}\r\n            gridConfig={getColumnDefs('staff', fetchData)}\r\n            // exportFileName={'Admin details'}\r\n        />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MySecondaryNavigation from '../Dashboard/MySecondaryNavigation'\r\nimport { Wrapper, Tabs, Tab, MainNavigationItem } from '@wfp/ui'\r\n\r\nimport DeptTable from './views/DepartmentTable'\r\nimport StaffTable from './views/StaffTable'\r\n\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst listElReactRouter = ({\r\n    index,\r\n    selected,\r\n    label,\r\n    to,\r\n    exact,\r\n    handleTabClick,\r\n}) => (\r\n    <Route\r\n        path={to}\r\n        exact={exact}\r\n        children={({ match }) => {\r\n            if (match && !selected) {\r\n                /* handle the Tab changes */\r\n                handleTabClick(index, label)\r\n            }\r\n            return (\r\n                <div\r\n                    className={\r\n                        match\r\n                            ? 'wfp--tabs__nav-item wfp--tabs__nav-item--selected'\r\n                            : 'wfp--tabs__nav-item'\r\n                    }\r\n                >\r\n                    <Link className=\"wfp--tabs__nav-link\" to={to}>\r\n                        {label}\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }}\r\n    />\r\n)\r\nconst Dashboard = (props) => {\r\n    const views = [\r\n        {\r\n            permissions: true,\r\n            default: true,\r\n            label: 'Department',\r\n            path: '/department/list',\r\n            component: () => <DeptTable props={props} />,\r\n        },\r\n\r\n        {\r\n            permissions: true,\r\n            label: 'Staff list',\r\n            path: '/department/staff/list',\r\n            component: () => <StaffTable props={props}  />,\r\n        },\r\n    ]\r\n\r\n    const defaultView = views.find((view) => view.default );\r\n    const allowedViews = views.filter((view) =>  view.permissions );\r\n    \r\n    return (\r\n        <div>\r\n            {/* <Header /> */}\r\n            <MySecondaryNavigation\r\n                l1Label=\"Admin dashboard\"\r\n                l1Link=\"#\"\r\n                pageTitle={`Traquer`}\r\n                tabs={\r\n                    <Tabs customTabContent={true}>\r\n                        {allowedViews.map((view, i) => (\r\n                            <Tab\r\n                                key={i}\r\n                                label={view.label}\r\n                                to={view.path}\r\n                                renderListElement={listElReactRouter}\r\n                            ></Tab>\r\n                        ))}\r\n                    </Tabs>\r\n                }\r\n            ></MySecondaryNavigation>\r\n            <div\r\n                className=\"wfp--module__background\"\r\n                style={{ minHeight: '400px' }}\r\n            >\r\n                <Wrapper pageWidth=\"lg\" spacing=\"md\">\r\n                    <InnerWrapper>\r\n                        {/* <div id=\"export-button-portal\" /> */}\r\n                        <Switch>\r\n                            {allowedViews.map((view, i) => (\r\n                                <Route\r\n                                    key={i}\r\n                                    path={view.path}\r\n                                    render={view.component}\r\n                                />\r\n                            ))}\r\n\r\n                            <Redirect\r\n                                to={\r\n                                    defaultView\r\n                                        ? defaultView.path\r\n                                        : '/login'\r\n                                }\r\n                            />\r\n                        </Switch>\r\n                    </InnerWrapper>\r\n                </Wrapper>\r\n            </div>\r\n            {/* <Footer /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\nconst InnerWrapper = styled.div`\r\n    position: relative;\r\n    padding-bottom: 1rem;;\r\n    #export-button-portal {\r\n        position: absolute;\r\n        right: 0;\r\n        top: -95px;\r\n    }\r\n`\r\n","import Dashboard from './Dashboard'\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport _ from 'lodash'\r\nimport { Row, Col } from 'react-flexbox-grid'\r\nimport { toast } from 'react-toastify'\r\nimport Select from 'react-select'\r\nimport { connect } from 'react-redux'\r\n\r\nimport MySecondaryNavigation from '../../Dashboard/MySecondaryNavigation'\r\nimport {\r\n    Wrapper,\r\n    Loading,\r\n    Module,\r\n    ModuleHeader,\r\n    ModuleBody,\r\n    ModuleFooter,\r\n    Button,\r\n    FormGroup,\r\n    TextInput,\r\n    ReduxFormWrapper,\r\n} from '@wfp/ui'\r\nimport { iconCloseOutline } from '@wfp/icons'\r\n\r\nimport { Form, FormSpy, Field } from 'react-final-form'\r\nimport { deptType } from '../../shared/utils'\r\n\r\n\r\nclass Create extends React.Component {\r\n    state = {\r\n        lastSaved: null,\r\n        formData: null,\r\n        showErrors: false,\r\n        loading: false,\r\n        admin: []\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n\r\n        if(state && state.edit && state.data){\r\n            this.setState({\r\n                formData: {\r\n                    name: state.data.name,\r\n                    type: {\r\n                        value: state.data.type,\r\n                        label: state.data.type\r\n                    }\r\n                }\r\n            })\r\n        };\r\n    }\r\n    \r\n    onSubmit = async (values) => {\r\n        this.setState({ loading: true });\r\n        const { location, userId } = this.props;\r\n        const {state}= location;\r\n        let formData={\r\n            name: values.name,\r\n            type: values.type.value\r\n        }\r\n\r\n        console.log('formData', formData)\r\n       \r\n        try {\r\n            if(state && state.edit){\r\n                await axios.put(`/v1/department/update/${state.id}`, formData)\r\n                .then(()=> this.setState({ loading: false }))\r\n                toast('Successfully updated a department', {closeOnClick: true, autoClose: 1000 });\r\n                this.props.history.goBack()\r\n            }\r\n            else{\r\n                await axios.post(`/v1/department/add/${userId}`, formData)\r\n                .then(()=> this.setState({ loading: false }))\r\n                toast('Successfully created department', {closeOnClick: true, autoClose: 1000 });\r\n                this.props.history.goBack()\r\n            }\r\n            \r\n            \r\n        } catch (err) {\r\n            console.log('Ooops! error occurred, please try again', err)\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        const { showErrors } = this.state;\r\n        const { formData, loading, admin } = this.state;\r\n        const { location, userId } = this.props;\r\n        const {state}= location;\r\n        return (\r\n            <>\r\n                <MySecondaryNavigation\r\n                    l1Label=\"Department\"\r\n                    l1Link=\"/department\"\r\n                    l2Label={  state && state.edit ? 'Update department' : 'Create department' }\r\n                    l2Link=\"#\"\r\n                    pageTitle={  state && state.edit ? 'Update department' : 'Create department' }\r\n                />\r\n                {loading ? (\r\n                    <Loading active={true} withOverlay={true} />\r\n                ) : (\r\n                    <div\r\n                        className=\"wfp--module__background\"\r\n                        style={{ minHeight: '400px' }}\r\n                    >\r\n                        <Wrapper\r\n                            pageWidth=\"lg\"\r\n                            spacing=\"md\"\r\n                            mobilePageWidth=\"full\"\r\n                        >\r\n                            <Form\r\n                                onSubmit={this.onSubmit}\r\n                                initialValues={formData}\r\n                                validate={(values) => {\r\n                                    const errors = {}\r\n                                    const {\r\n                                        name, \r\n                                        type,\r\n                                    } = values\r\n\r\n                                    if (!name) {\r\n                                        errors.name = {\r\n                                            value: 'Department name is required',\r\n                                            show: showErrors,\r\n                                        }\r\n                                    } \r\n\r\n                                    if (!type) {\r\n                                        errors.name = {\r\n                                            value: 'Department type is required',\r\n                                            show: showErrors,\r\n                                        }\r\n                                    } \r\n                                    return errors\r\n                                }}\r\n                                render={({ values, onSave, valid, reset }) => (\r\n                                    <form>\r\n                                        <Module noMargin>\r\n                                            <ModuleHeader>\r\n                                                <span style={{ fontSize: 20 }}>\r\n                                                    {  state && state.edit ? 'Update department' : 'Create department' }\r\n                                                </span>\r\n                                            </ModuleHeader>\r\n                                            <ModuleBody>\r\n                                                <Col \r\n                                                    md={6}\r\n                                                    sm={6}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            name=\"type\"\r\n                                                            labelText=\"Type\"\r\n                                                            placeholder=\"Select department type\"\r\n                                                        >\r\n                                                            {({\r\n                                                                input,\r\n                                                                meta,\r\n                                                            }) => (\r\n                                                                <>\r\n                                                                <div className='wfp--label'>Department type</div>\r\n                                                                <Select\r\n                                                                    className=\"wfp--react-select-container auto-width\"\r\n                                                                    classNamePrefix=\"wfp--react-select\"\r\n                                                                    closeMenuOnSelect={true}\r\n                                                                    options={deptType}\r\n                                                                    getOptionValue={(option) =>\r\n                                                                        option['value'] \r\n                                                                    }\r\n                                                                    getOptionLabel={(option) =>\r\n                                                                        option['label'] \r\n                                                                    }\r\n                                                                    {...input}\r\n                                                                    {...meta}\r\n                                                                />\r\n                                                                </>\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n\r\n                                                <Col \r\n                                                    md={6}\r\n                                                    sm={6}\r\n                                                    xs={12}\r\n                                                >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"department\"\r\n                                                        name=\"name\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"Department name\"\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n                                            </ModuleBody>\r\n                                            <ModuleFooter>\r\n                                                <div></div>\r\n                                                <div\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        textAlign: 'right',\r\n                                                        margin: '1.5rem 0',\r\n                                                    }}\r\n                                                >\r\n                                                    <Button\r\n                                                        kind=\"secondary\"\r\n                                                        onClick={() =>\r\n                                                            this.props.history.goBack()\r\n                                                        }\r\n                                                    >\r\n                                                        Go back\r\n                                                    </Button>\r\n\r\n                                                    <Button\r\n                                                        // disabled={!valid}\r\n                                                        onClick={(e) => {\r\n                                                            e.preventDefault()\r\n                                                            this.onSubmit(\r\n                                                                values\r\n                                                            )\r\n                                                        }}\r\n                                                        disabled={\r\n                                                            values.name && values.type\r\n                                                            ? false: true\r\n                                                        }\r\n                                                    >\r\n                                                       { state && state.edit ? 'Update' : 'Create' } \r\n                                                    </Button>\r\n                                                </div>\r\n                                            </ModuleFooter>\r\n                                        </Module>\r\n                                        {showErrors && (\r\n                                            <div\r\n                                                style={{\r\n                                                    padding: '5px',\r\n                                                    width: '100%',\r\n                                                    background: '#C5192D',\r\n                                                    color: 'white',\r\n                                                    textAlign: 'center',\r\n                                                }}\r\n                                            >\r\n                                                Please fill in all required\r\n                                                fields\r\n                                            </div>\r\n                                        )}\r\n                                    </form>\r\n                                )}\r\n                            />\r\n                        </Wrapper>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.user._id,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Create)\r\n\r\nconst FieldWrapper = styled.div`\r\n    margin-bottom: 30px;\r\n`\r\n","import React from 'react'\r\nimport useSWR, { trigger } from 'swr'\r\nimport { Button, Wrapper } from '@wfp/ui'\r\nimport {iconAddOutline, iconDocument} from '@wfp/icons';\r\n\r\nimport TableView from '../../Dashboard/TableView'\r\nimport getColumnDefs from '../../shared/columnDefs'\r\nimport MySecondaryNavigation from '../../Dashboard/MySecondaryNavigation'\r\nimport styled from 'styled-components'\r\n\r\nconst filters = [\r\n    {\r\n        title: 'Agency',\r\n        role: 'Type',\r\n        amountLabel: 'Section',\r\n        comparator: (rowData) =>\r\n            rowData.type == \"Agency\"\r\n    },\r\n    {\r\n        title: 'Department',\r\n        role: 'Type',\r\n        amountLabel: 'Section',\r\n        comparator: (rowData) =>\r\n        rowData.type == \"Department\"\r\n    },\r\n\r\n    {\r\n        title: 'Unit',\r\n        role: 'Type',\r\n        amountLabel: 'Section',                 \r\n        comparator: (rowData) =>\r\n        rowData.type == \"Unit\"\r\n    },\r\n\r\n    {\r\n        title: 'Uncategorized',\r\n        role: 'Type',\r\n        amountLabel: 'Section',\r\n        warning: true,\r\n        comparator: (rowData) =>\r\n        rowData.type == null\r\n    },\r\n]\r\n\r\n\r\nconst View = (props) => {\r\n    const { id } = props;\r\n\r\n    const endpoint = `/v1/department/details/${id}`\r\n\r\n    const { data } = useSWR(endpoint)\r\n    const fetchData = () => true;\r\n    const applications = data ? data.data.data.subDepartment : null;\r\n\r\n    return (\r\n        <>\r\n        <MySecondaryNavigation\r\n                l1Label=\"Traquer\"\r\n                l1Link='/department'\r\n                l2Label=\"Department\"\r\n                l2Link=\"/department\"\r\n                l3Label=\"Sub department\"\r\n                l3Link=\"#\"\r\n                pageTitle={`Traquer`}\r\n         />\r\n            <div\r\n                className=\"wfp--module__background\"\r\n                style={{ minHeight: '400px' }}\r\n            >\r\n                <Wrapper pageWidth=\"lg\" spacing=\"md\">\r\n                <InnerWrapper>\r\n                    <div id=\"export-button-portal\" >\r\n                    <Button\r\n                        onClick={(data)=> {\r\n                            props.history.push(`/create-sub-department/${id}`)\r\n                        }}\r\n                            icon={iconDocument}\r\n                            kind=\"secondary\"\r\n                            small\r\n                        >\r\n                            Manage file\r\n                        </Button>\r\n                        <span style={{ paddingLeft: 20 }} />\r\n                        <Button\r\n                        onClick={(data)=> {\r\n                            props.history.push(`/create-sub-department/${id}`)\r\n                        }}\r\n                            icon={iconAddOutline}\r\n                            kind=\"secondary\"\r\n                            small\r\n                        >\r\n                            Create sub department\r\n                        </Button>\r\n                    </div>\r\n                    <TableView\r\n                        title={'Sub Departments'}\r\n                        data={applications}\r\n                        filters={filters}\r\n                        fetchData={fetchData}\r\n                        gridConfig={getColumnDefs('subDepartment', fetchData)}\r\n                        exportFileName={'sub department details'}\r\n                    />\r\n                </InnerWrapper>\r\n            </Wrapper>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View\r\n\r\n\r\nconst InnerWrapper = styled.div`\r\n    position: relative;\r\n    padding-bottom: 1rem;;\r\n    #export-button-portal {\r\n        position: absolute;\r\n        right: 0;\r\n        top: -95px;\r\n    }\r\n`","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport _ from 'lodash'\r\nimport { Row, Col } from 'react-flexbox-grid'\r\nimport { toast } from 'react-toastify'\r\nimport Select from 'react-select'\r\nimport { connect } from 'react-redux'\r\n\r\nimport MySecondaryNavigation from '../../Dashboard/MySecondaryNavigation'\r\nimport {\r\n    Wrapper,\r\n    Loading,\r\n    Module,\r\n    ModuleHeader,\r\n    ModuleBody,\r\n    ModuleFooter,\r\n    Button,\r\n    FormGroup,\r\n    TextInput,\r\n    ReduxFormWrapper,\r\n} from '@wfp/ui'\r\nimport { iconCloseOutline } from '@wfp/icons'\r\n\r\nimport { Form, FormSpy, Field } from 'react-final-form'\r\nimport { deptType } from '../../shared/utils'\r\n\r\n\r\nclass Create extends React.Component {\r\n    state = {\r\n        lastSaved: null,\r\n        formData: null,\r\n        showErrors: false,\r\n        loading: false,\r\n        admin: []\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n\r\n        if(state && state.edit && state.data){\r\n            this.setState({\r\n                formData: {\r\n                    name: state.data.name,\r\n                    type: {\r\n                        value: state.data.type,\r\n                        label: state.data.type\r\n                    }\r\n                }\r\n            })\r\n        };\r\n    }\r\n    \r\n    onSubmit = async (values) => {\r\n        this.setState({ loading: true });\r\n        const { location, id, userId } = this.props;\r\n        const {state}= location;\r\n        let formData={\r\n            name: values.name,\r\n            type: values.type.value\r\n        }\r\n       \r\n        try {\r\n            if(state && state.edit){\r\n                await axios.put(`/v1/department/sub/update/${state.id}`, formData)\r\n                .then(()=> this.setState({ loading: false }))\r\n                toast('Successfully updated sub department', {closeOnClick: true, autoClose: 1000 });\r\n                this.props.history.goBack()\r\n            }\r\n            else{\r\n                await axios.post(`/v1/department/sub/add/${id}/${userId}`, formData)\r\n                .then(()=> this.setState({ loading: false }))\r\n                toast('Successfully created a sub department', {closeOnClick: true, autoClose: 1000 });\r\n                this.props.history.goBack()\r\n            }\r\n            \r\n            \r\n        } catch (err) {\r\n            console.log('Ooops! error occurred, please try again', err)\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        const { showErrors } = this.state;\r\n        const { formData, loading, admin } = this.state;\r\n        const { location, id } = this.props;\r\n        const {state}= location;\r\n        return (\r\n            <>\r\n                <MySecondaryNavigation\r\n                    l1Label=\"Department\"\r\n                    l1Link=\"/department\"\r\n                    l1Label=\"Sub Department\"\r\n                    l1Link=\"#\"\r\n                    l2Label={  state && state.edit ? 'Update sub department' : 'Create sub department' }\r\n                    l2Link=\"#\"\r\n                    pageTitle={  state && state.edit ? 'Update sub department' : 'Create sub department' }\r\n                />\r\n                {loading ? (\r\n                    <Loading active={true} withOverlay={true} />\r\n                ) : (\r\n                    <div\r\n                        className=\"wfp--module__background\"\r\n                        style={{ minHeight: '400px' }}\r\n                    >\r\n                        <Wrapper\r\n                            pageWidth=\"lg\"\r\n                            spacing=\"md\"\r\n                            mobilePageWidth=\"full\"\r\n                        >\r\n                            <Form\r\n                                onSubmit={this.onSubmit}\r\n                                initialValues={formData}\r\n                                validate={(values) => {\r\n                                    const errors = {}\r\n                                    const {\r\n                                        name, \r\n                                        type,\r\n                                    } = values\r\n\r\n                                    if (!name) {\r\n                                        errors.name = {\r\n                                            value: 'Sub Department name is required',\r\n                                            show: showErrors,\r\n                                        }\r\n                                    } \r\n\r\n                                    if (!type) {\r\n                                        errors.name = {\r\n                                            value: 'Sub Department type is required',\r\n                                            show: showErrors,\r\n                                        }\r\n                                    } \r\n                                    return errors\r\n                                }}\r\n                                render={({ values, onSave, valid, reset }) => (\r\n                                    <form>\r\n                                        <Module noMargin>\r\n                                            <ModuleHeader>\r\n                                                <span style={{ fontSize: 20 }}>\r\n                                                    {  state && state.edit ? 'Update Sub department' : 'Create Sub department' }\r\n                                                </span>\r\n                                            </ModuleHeader>\r\n                                            <ModuleBody>\r\n                                                <Col \r\n                                                    md={6}\r\n                                                    sm={6}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            name=\"type\"\r\n                                                            labelText=\"Type\"\r\n                                                            placeholder=\"Select department type\"\r\n                                                        >\r\n                                                            {({\r\n                                                                input,\r\n                                                                meta,\r\n                                                            }) => (\r\n                                                                <>\r\n                                                                <div className='wfp--label'>Sub Department type</div>\r\n                                                                <Select\r\n                                                                    className=\"wfp--react-select-container auto-width\"\r\n                                                                    classNamePrefix=\"wfp--react-select\"\r\n                                                                    closeMenuOnSelect={true}\r\n                                                                    options={deptType}\r\n                                                                    getOptionValue={(option) =>\r\n                                                                        option['value'] \r\n                                                                    }\r\n                                                                    getOptionLabel={(option) =>\r\n                                                                        option['label'] \r\n                                                                    }\r\n                                                                    {...input}\r\n                                                                    {...meta}\r\n                                                                />\r\n                                                                </>\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n\r\n                                                <Col \r\n                                                    md={6}\r\n                                                    sm={6}\r\n                                                    xs={12}\r\n                                                >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"subdepartment\"\r\n                                                        name=\"name\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"Sub Department name\"\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n                                            </ModuleBody>\r\n                                            <ModuleFooter>\r\n                                                <div></div>\r\n                                                <div\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        textAlign: 'right',\r\n                                                        margin: '1.5rem 0',\r\n                                                    }}\r\n                                                >\r\n                                                    <Button\r\n                                                        kind=\"secondary\"\r\n                                                        onClick={() =>\r\n                                                            this.props.history.goBack()\r\n                                                        }\r\n                                                    >\r\n                                                        Go back\r\n                                                    </Button>\r\n\r\n                                                    <Button\r\n                                                        // disabled={!valid}\r\n                                                        onClick={(e) => {\r\n                                                            e.preventDefault()\r\n                                                            this.onSubmit(\r\n                                                                values\r\n                                                            )\r\n                                                        }}\r\n                                                        disabled={\r\n                                                            values.name && values.type\r\n                                                            ? false: true\r\n                                                        }\r\n                                                    >\r\n                                                       { state && state.edit ? 'Update' : 'Create' } \r\n                                                    </Button>\r\n                                                </div>\r\n                                            </ModuleFooter>\r\n                                        </Module>\r\n                                        {showErrors && (\r\n                                            <div\r\n                                                style={{\r\n                                                    padding: '5px',\r\n                                                    width: '100%',\r\n                                                    background: '#C5192D',\r\n                                                    color: 'white',\r\n                                                    textAlign: 'center',\r\n                                                }}\r\n                                            >\r\n                                                Please fill in all required\r\n                                                fields\r\n                                            </div>\r\n                                        )}\r\n                                    </form>\r\n                                )}\r\n                            />\r\n                        </Wrapper>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.user._id,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Create)\r\n\r\nconst FieldWrapper = styled.div`\r\n    margin-bottom: 30px;\r\n`\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport _ from 'lodash'\r\nimport { Row, Col } from 'react-flexbox-grid'\r\nimport Select from 'react-select'\r\nimport { connect } from 'react-redux'\r\n\r\nimport MySecondaryNavigation from '../../Dashboard/MySecondaryNavigation'\r\nimport {\r\n    Wrapper,\r\n    Loading,\r\n    Module,\r\n    ModuleHeader,\r\n    ModuleBody,\r\n    ModuleFooter,\r\n    Button,\r\n    FormGroup,\r\n    TextInput,\r\n    ReduxFormWrapper,\r\n} from '@wfp/ui'\r\nimport { iconCloseOutline } from '@wfp/icons'\r\nimport { gradeLevel, gender } from '../../shared/utils'\r\n\r\nimport { Form, FormSpy, Field } from 'react-final-form'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\nclass Create extends React.Component {\r\n    state = {\r\n        lastSaved: null,\r\n        formData: null,\r\n        showErrors: false,\r\n        loading: false,\r\n        department: [],\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        this.fetchDept()\r\n\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n\r\n        if(state && state.edit && state.data){\r\n            const { firstName, lastName, email, gender, telephone, gradeLevel, designation,\r\n                department } = state.data;\r\n            \r\n            this.setState({\r\n                formData:{\r\n                    firstName,\r\n                    lastName,\r\n                    email,\r\n                    gender: {label: gender, value: gender},\r\n                    telephone,\r\n                    gradeLevel: {label: gradeLevel, value: gradeLevel},\r\n                    designation,\r\n                    // staffId,\r\n                    department\r\n                }\r\n            })\r\n        };\r\n    }\r\n\r\n    fetchDept=  async () => {\r\n        try {\r\n            axios.get(`/v1/department`)\r\n            .then(data=> this.setState({ department : data.data }))\r\n        } catch (err) {\r\n            console.log('Error while loading department', err)\r\n        }\r\n    }\r\n\r\n    fetchSubDept=  async val => {\r\n        console.log('fettingggh')\r\n        this.setState({ loading: true })\r\n        try {\r\n            axios.get(`/v1/department/details/${val._id}`)\r\n            .then(data=> this.setState({ subDepartment : data.data.subDeparment, loading: false }))\r\n        } catch (err) {\r\n            console.log('Error while loading sub department', err)\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    \r\n    onSubmit = async (values) => {\r\n        this.setState({ loading: true });\r\n\r\n        const { firstName, lastName, email, gender, telephone, gradeLevel, designation,\r\n        department, subDeparment } = values;\r\n        const {user} = this.props;\r\n\r\n        const formData={\r\n            firstName,\r\n            lastName,\r\n            email,\r\n\r\n            gender: gender && gender.value,\r\n            telephone,\r\n            gradeLevel: gradeLevel &&  gradeLevel.value,\r\n            designation,\r\n\r\n            ministry: user && user.ministry,\r\n            department: department && department._id,\r\n            subDeparment: subDeparment && subDeparment._id,\r\n            isAdmin: false,\r\n            isSuper: false,\r\n            isStaff: true,\r\n        };\r\n\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n\r\n        try {\r\n            if(state && state.edit){\r\n                await axios.put(`/v1/user/update/${state.id}`, formData)\r\n                .then(()=> this.setState({ loading: false }))\r\n                toast('Successfully updated ', {closeOnClick: true, autoClose: 1000 });\r\n                this.props.history.goBack()\r\n            }\r\n            else{\r\n                await axios.post(`/v1/user/add/staff`, formData)\r\n                .then(()=>toast('Successfully created'), {closeOnClick: true, autoClose: 1000 })\r\n                this.setState({ loading: false });\r\n                this.props.history.goBack()\r\n            }\r\n        } catch (err) {\r\n            console.log('Error in ScreeningForm onSubmit method', err)\r\n            toast.error('Oops! something went wrong. Please try again ', {closeOnClick: true, autoClose: 1000 });\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        const { showErrors } = this.state\r\n        const { formData, loading, department, subDeparment } = this.state\r\n        const { id } = this.props.match.params;\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n        \r\n        return (\r\n            <>\r\n                <MySecondaryNavigation\r\n                    l1Label=\"Admin dashboard\"\r\n                    l1Link=\"/department\"\r\n                    l2Label={  state && state.edit ? \"Update staff\" : \"Create staff\"}\r\n                    l2Link=\"#\"\r\n                    pageTitle={  state && state.edit ? \"Update staff\" : \"Create staff\"}\r\n                />\r\n                {loading ? (\r\n                    <Loading active={true} withOverlay={true} />\r\n                ) : (\r\n                    <div\r\n                        className=\"wfp--module__background\"\r\n                        style={{ minHeight: '400px' }}\r\n                    >\r\n                        <Wrapper\r\n                            pageWidth=\"lg\"\r\n                            spacing=\"md\"\r\n                            mobilePageWidth=\"full\"\r\n                        >\r\n\r\n                            <Form\r\n                                onSubmit={this.onSubmit}\r\n                                initialValues={formData}\r\n                                validate={(values) => {\r\n                                    const errors = {};\r\n                                    const {\r\n                                        department,\r\n                                        firstName,\r\n                                        lastName,\r\n                                        email,\r\n                                        telephone,\r\n                                        gender, \r\n                                        designation\r\n                                    } = values;\r\n                                    \r\n\r\n                                    if (!firstName || !lastName || !email || !telephone || !gender \r\n                                        || !department || !designation ) {\r\n                                        errors.firstName = {\r\n                                            value:\r\n                                                'Required',\r\n                                            show: showErrors,\r\n                                        }\r\n                                    } \r\n                                    return errors\r\n                                }}\r\n                                render={({ values, onSave, valid, reset }) => (\r\n                                    <form>\r\n                                        <Module noMargin>\r\n                                            <ModuleHeader>\r\n                                                <span style={{ fontSize: 20 }}>\r\n                                                    Create Staff\r\n                                                </span>\r\n                                            </ModuleHeader>\r\n                                            <ModuleBody>\r\n                                                <Row>\r\n                                                <Col \r\n                                                    md={6}\r\n                                                    sm={6}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            inputComponent={\r\n                                                                TextInput\r\n                                                            }\r\n                                                            id=\"firstName\"\r\n                                                            name=\"firstName\"\r\n                                                            type=\"text\"\r\n                                                            labelText=\"First name\"\r\n                                                        />\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n\r\n                                                <Col \r\n                                                    md={5}\r\n                                                    sm={5}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            inputComponent={\r\n                                                                TextInput\r\n                                                            }\r\n                                                            id=\"lastName\"\r\n                                                            name=\"lastName\"\r\n                                                            type=\"text\"\r\n                                                            labelText=\"Last name\"\r\n                                                        />\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n                                                </Row>\r\n\r\n                                                <Col \r\n                                                    md={6}\r\n                                                    sm={6}\r\n                                                    xs={12}\r\n                                                >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"email\"\r\n                                                        name=\"email\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"Email\"\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                            <Col \r\n                                                md={6}\r\n                                                sm={6}\r\n                                                xs={12}\r\n                                            >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"telephone\"\r\n                                                        name=\"telephone\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"Telephone\"\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n                                        <Row>\r\n                                            <Col \r\n                                                md={6}\r\n                                                sm={6}\r\n                                                xs={12}\r\n                                            >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        name=\"gender\"\r\n                                                        labelText=\"gender\"\r\n                                                        placeholder=\"Select gender\"\r\n                                                    >\r\n                                                        {({\r\n                                                            input,\r\n                                                            meta,\r\n                                                        }) => (\r\n                                                            <>\r\n                                                            <div className='wfp--label'>Gender</div>\r\n                                                            <Select\r\n                                                                className=\"wfp--react-select-container auto-width\"\r\n                                                                classNamePrefix=\"wfp--react-select\"\r\n                                                                closeMenuOnSelect={true}\r\n                                                                options={gender}\r\n                                                                getOptionValue={(option) =>\r\n                                                                    option['value'] ? option['value'] : option['id']\r\n                                                                }\r\n                                                                getOptionLabel={(option) =>\r\n                                                                    option['label']\r\n                                                                }\r\n                                                                {...input}\r\n                                                                {...meta}\r\n                                                            />\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Field>\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                            <Col \r\n                                                md={5}\r\n                                                sm={5}\r\n                                                xs={12}\r\n                                            >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"designation\"\r\n                                                        name=\"designation\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"Designation\"\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                            <Col \r\n                                                md={6}\r\n                                                sm={6}\r\n                                                xs={12}\r\n                                            >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        name=\"gradeLevel\"\r\n                                                        labelText=\"Grade level\"\r\n                                                        placeholder=\"Select grade level\"\r\n                                                    >\r\n                                                        {({\r\n                                                            input,\r\n                                                            meta,\r\n                                                        }) => (\r\n                                                            <>\r\n                                                            <div className='wfp--label'>Grade level</div>\r\n                                                            <Select\r\n                                                                className=\"wfp--react-select-container auto-width\"\r\n                                                                classNamePrefix=\"wfp--react-select\"\r\n                                                                closeMenuOnSelect={true}\r\n                                                                // onChange={(vars) => {\r\n                                                                //     this.languageChange(vars, originalOnChange)\r\n                                                                // }}\r\n                                                                options={gradeLevel}\r\n                                                                getOptionValue={(option) =>\r\n                                                                    option['value'] ? option['value'] : option['id']\r\n                                                                }\r\n                                                                getOptionLabel={(option) =>\r\n                                                                    option['label']\r\n                                                                }\r\n                                                                {...input}\r\n                                                                {...meta}\r\n                                                            />\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Field>\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                            \r\n                                        <Row>\r\n                                            <Col \r\n                                                md={6}\r\n                                                sm={6}\r\n                                                xs={12}\r\n                                            >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        name=\"department\"\r\n                                                        labelText=\"Department\"\r\n                                                        placeholder=\"Select department\"\r\n                                                    >\r\n                                                        {({\r\n                                                            input,\r\n                                                            meta,\r\n                                                        }) => (\r\n                                                            <>\r\n                                                            <div className='wfp--label'>Department</div>\r\n                                                            <Select\r\n                                                                className=\"wfp--react-select-container auto-width\"\r\n                                                                classNamePrefix=\"wfp--react-select\"\r\n                                                                closeMenuOnSelect={true}\r\n                                                                onChange={val=>this.fetchSubDept(val)}\r\n                                                                options={department}\r\n                                                                getOptionValue={(option) =>\r\n                                                                    option['_id'] \r\n                                                                }\r\n                                                                getOptionLabel={(option) =>\r\n                                                                    option['name']\r\n                                                                }\r\n                                                                {...input}\r\n                                                                {...meta}\r\n                                                            />\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Field>\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                            <Col \r\n                                                md={5}\r\n                                                sm={5}\r\n                                                xs={12}\r\n                                            >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        name=\"subDepartment\"\r\n                                                        labelText=\"Sub Department\"\r\n                                                        placeholder=\"Select sub department\"\r\n                                                    >\r\n                                                        {({\r\n                                                            input,\r\n                                                            meta,\r\n                                                        }) => (\r\n                                                            <>\r\n                                                            <div className='wfp--label'>Sub Department</div>\r\n                                                            <Select\r\n                                                                className=\"wfp--react-select-container auto-width\"\r\n                                                                classNamePrefix=\"wfp--react-select\"\r\n                                                                closeMenuOnSelect={true}\r\n                                                                // onChange={(vars) => {\r\n                                                                //     this.languageChange(vars, originalOnChange)\r\n                                                                // }}\r\n                                                                options={subDeparment}\r\n                                                                getOptionValue={(option) =>\r\n                                                                    option['_id'] \r\n                                                                }\r\n                                                                getOptionLabel={(option) =>\r\n                                                                    option['name']\r\n                                                                }\r\n                                                                {...input}\r\n                                                                {...meta}\r\n                                                            />\r\n                                                            </>\r\n                                                        )}\r\n                                                    </Field>\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n                                            </ModuleBody>\r\n                                            <ModuleFooter>\r\n                                                <div></div>\r\n                                                <div\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        textAlign: 'right',\r\n                                                        margin: '1.5rem 0',\r\n                                                    }}\r\n                                                >\r\n                                                    <Button\r\n                                                        kind=\"secondary\"\r\n                                                        onClick={() =>\r\n                                                            this.props.history.goBack()\r\n                                                        }\r\n                                                    >\r\n                                                        Go back\r\n                                                    </Button>\r\n\r\n                                                    <Button\r\n                                                        disabled={!valid}\r\n                                                        onClick={(e) => {\r\n                                                            e.preventDefault()\r\n                                                            this.onSubmit(\r\n                                                                values\r\n                                                            )\r\n                                                        }}\r\n                                                    >\r\n                                                       {state && state.edit ? \"Update\" : \"Create\"} \r\n                                                    </Button>\r\n                                                </div>\r\n                                            </ModuleFooter>\r\n                                        </Module>\r\n                                        {showErrors && (\r\n                                            <div\r\n                                                style={{\r\n                                                    padding: '5px',\r\n                                                    width: '100%',\r\n                                                    background: '#C5192D',\r\n                                                    color: 'white',\r\n                                                    textAlign: 'center',\r\n                                                }}\r\n                                            >\r\n                                                Please fill in all required\r\n                                                fields\r\n                                            </div>\r\n                                        )}\r\n                                    </form>\r\n                                )}\r\n                            />\r\n                        </Wrapper>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.user._id,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Create)\r\n\r\nconst FieldWrapper = styled.div`\r\n    margin-bottom: 30px;\r\n`\r\n","import React from 'react'\r\nimport useSWR, { trigger } from 'swr'\r\nimport { Button } from '@wfp/ui'\r\nimport {iconAddOutline, iconDocument} from '@wfp/icons';\r\n\r\nimport TableView from '../../Dashboard/TableView'\r\nimport getColumnDefs from '../../shared/columnDefs'\r\nimport store from '../../store'\r\n\r\nconst filters = [\r\n    {\r\n        title: 'Service file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n            rowData.type == \"Service file\"\r\n    },\r\n    {\r\n        title: 'Management file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n        rowData.type == 'Management file',\r\n    },\r\n    {\r\n        title: 'Uncategorized file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        warning: true,\r\n        comparator: (rowData) =>\r\n        rowData.type == null\r\n    },\r\n\r\n    {\r\n        title: 'Total files',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',                 \r\n        comparator: (rowData) =>\r\n        rowData.type \r\n    },\r\n]\r\n\r\n\r\nconst View = ({props}) => {\r\n\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n\r\n    const endpoint = `/v1/file/incoming/${user && user._id}`\r\n\r\n    const { data } = useSWR(endpoint)\r\n    const fetchData = () => true;\r\n    const applications = data ? data.data.data : null;\r\n\r\n    let filePerm = user \r\n        && user.permission\r\n        ? user.permission.createManagementFile\r\n        || user.permission.createServiceFile\r\n        ? true\r\n        : false\r\n        : false;\r\n\r\n    return (\r\n        <>\r\n        { filePerm && (\r\n            <div id=\"export-button-portal\" >\r\n                <Button\r\n                onClick={(data)=> {\r\n                    props.history.push('/create-file')\r\n                }}\r\n                    icon={iconAddOutline}\r\n                    kind=\"secondary\"\r\n                    small\r\n                >\r\n                    Create file\r\n                </Button>\r\n            </div>\r\n        )}\r\n        \r\n        <TableView\r\n            title={'Incoming files'}\r\n            data={applications}\r\n            filters={filters}\r\n            fetchData={fetchData}\r\n            gridConfig={getColumnDefs('incomingFile', fetchData)}\r\n            exportFileName={'incoming files'}\r\n        />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View\r\n","import React from 'react'\r\nimport useSWR, { trigger } from 'swr'\r\nimport { Button } from '@wfp/ui'\r\nimport {iconAddOutline, iconDocument} from '@wfp/icons';\r\n\r\nimport TableView from '../../Dashboard/TableView'\r\nimport getColumnDefs from '../../shared/columnDefs'\r\nimport store from '../../store'\r\n\r\nconst filters = [\r\n    {\r\n        title: 'Service file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n            rowData.type == \"Service file\"\r\n    },\r\n    {\r\n        title: 'Management file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n        rowData.type == 'Management file',\r\n    },\r\n    {\r\n        title: 'Uncategorized file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        warning: true,\r\n        comparator: (rowData) =>\r\n        rowData.type == null\r\n    },\r\n\r\n    {\r\n        title: 'Total files',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',                 \r\n        comparator: (rowData) =>\r\n        rowData.type \r\n    },\r\n]\r\n\r\n\r\nconst View = ({props}) => {\r\n\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n\r\n    const endpoint = `/v1/file/outgoing/${user && user._id}`\r\n\r\n    const { data } = useSWR(endpoint)\r\n    const fetchData = () => true;\r\n    const applications = data ? data.data.data : null;\r\n\r\n    let filePerm = user \r\n        && user.permission\r\n        ? user.permission.createManagementFile\r\n        || user.permission.createServiceFile\r\n        ? true\r\n        : false\r\n        : false;\r\n\r\n    return (\r\n        <>\r\n        { filePerm && (\r\n            <div id=\"export-button-portal\" >\r\n                <Button\r\n                onClick={(data)=> {\r\n                    props.history.push('/create-file')\r\n                }}\r\n                    icon={iconAddOutline}\r\n                    kind=\"secondary\"\r\n                    small\r\n                >\r\n                    Create file\r\n                </Button>\r\n            </div>\r\n        )}\r\n        <TableView\r\n            title={'Outgoing files'}\r\n            data={applications}\r\n            filters={filters}\r\n            fetchData={fetchData}\r\n            gridConfig={getColumnDefs('outgoingFile', fetchData)}\r\n            exportFileName={'incoming files'}\r\n        />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View\r\n","import React from 'react'\r\nimport useSWR, { trigger } from 'swr'\r\nimport { Button } from '@wfp/ui'\r\nimport {iconAddOutline, iconDocument} from '@wfp/icons';\r\n\r\nimport TableView from '../../Dashboard/TableView'\r\nimport getColumnDefs from '../../shared/columnDefs'\r\nimport store from '../../store'\r\n\r\nconst filters = [\r\n    {\r\n        title: 'Service file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n            rowData.type == \"Service file\"\r\n    },\r\n    {\r\n        title: 'Management file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n        rowData.type == 'Management file',\r\n    },\r\n    {\r\n        title: 'Uncategorized file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        warning: true,\r\n        comparator: (rowData) =>\r\n        rowData.type == null\r\n    },\r\n\r\n    {\r\n        title: 'Total files',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',                 \r\n        comparator: (rowData) =>\r\n        rowData.type \r\n    },\r\n]\r\n\r\n\r\nconst View = ({props}) => {\r\n\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n\r\n    const endpoint = `/v1/file/pending/${user && user._id}`\r\n\r\n    const { data } = useSWR(endpoint)\r\n    const fetchData = () => true;\r\n    const applications = data ? data.data.data : null;\r\n    let filePerm = user \r\n        && user.permission\r\n        ? user.permission.createManagementFile\r\n        || user.permission.createServiceFile\r\n        ? true\r\n        : false\r\n        : false;\r\n        \r\n    return (\r\n        <>\r\n        { filePerm && (\r\n            <div id=\"export-button-portal\" >\r\n                <Button\r\n                onClick={(data)=> {\r\n                    props.history.push('/create-file')\r\n                }}\r\n                    icon={iconAddOutline}\r\n                    kind=\"secondary\"\r\n                    small\r\n                >\r\n                    Create file\r\n                </Button>\r\n            </div>\r\n        )}\r\n        <TableView\r\n            title={'In-Process files'}\r\n            data={applications}\r\n            filters={filters}\r\n            fetchData={fetchData}\r\n            gridConfig={getColumnDefs('inProcessFile', fetchData)}\r\n            exportFileName={'In-process files'}\r\n        />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View\r\n","import React from 'react'\r\nimport useSWR, { trigger } from 'swr'\r\nimport { Button } from '@wfp/ui'\r\nimport {iconAddOutline, iconDocument} from '@wfp/icons';\r\n\r\nimport TableView from '../../Dashboard/TableView'\r\nimport getColumnDefs from '../../shared/columnDefs'\r\nimport store from '../../store'\r\n\r\nconst filters = [\r\n    {\r\n        title: 'Service file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n            rowData.type == \"Service file\"\r\n    },\r\n    {\r\n        title: 'Management file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n        rowData.type == 'Management file',\r\n    },\r\n    {\r\n        title: 'Uncategorized file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        warning: true,\r\n        comparator: (rowData) =>\r\n        rowData.type == null\r\n    },\r\n\r\n    {\r\n        title: 'Total files',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',                 \r\n        comparator: (rowData) =>\r\n        rowData.type \r\n    },\r\n]\r\n\r\n\r\nconst View = ({props}) => {\r\n\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n\r\n    const endpoint = `/v1/file/sent/${user && user._id}`\r\n\r\n    const { data } = useSWR(endpoint)\r\n    const fetchData = () => true;\r\n    const applications = data ? data.data.data : null;\r\n    const mapData = applications && applications.map(p=>\r\n        ({\r\n            _id: p._id,\r\n            fileNo: p.fileNo,\r\n            name: p.name,\r\n            type: p.type,\r\n            sent: p.sent.filter(p => p.sentBy && p.sentBy._id == user._id)\r\n        })\r\n    )\r\n\r\n    let filePerm = user \r\n        && user.permission\r\n        ? user.permission.createManagementFile\r\n        || user.permission.createServiceFile\r\n        ? true\r\n        : false\r\n        : false;\r\n\r\n    return (\r\n        <>\r\n        { filePerm && (\r\n            <div id=\"export-button-portal\" >\r\n                <Button\r\n                onClick={(data)=> {\r\n                    props.history.push('/create-file')\r\n                }}\r\n                    icon={iconAddOutline}\r\n                    kind=\"secondary\"\r\n                    small\r\n                >\r\n                    Create file\r\n                </Button>\r\n            </div>\r\n        )}\r\n        <TableView\r\n            title={'Sent files'}\r\n            data={mapData}\r\n            filters={filters}\r\n            fetchData={fetchData}\r\n            gridConfig={getColumnDefs('sentFile', fetchData)}\r\n            exportFileName={'sent files'}\r\n        />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View\r\n","import React from 'react'\r\nimport useSWR, { trigger } from 'swr'\r\nimport { Button } from '@wfp/ui'\r\nimport {iconAddOutline, iconDocument} from '@wfp/icons';\r\n\r\nimport TableView from '../../Dashboard/TableView'\r\nimport getColumnDefs from '../../shared/columnDefs'\r\nimport store from '../../store'\r\n\r\nconst filters = [\r\n    {\r\n        title: 'Service file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n            rowData.type == \"Service file\"\r\n    },\r\n    {\r\n        title: 'Management file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n        rowData.type == 'Management file',\r\n    },\r\n    {\r\n        title: 'Uncategorized file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        warning: true,\r\n        comparator: (rowData) =>\r\n        rowData.type == null\r\n    },\r\n\r\n    {\r\n        title: 'Total files',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',                 \r\n        comparator: (rowData) =>\r\n        rowData.type \r\n    },\r\n]\r\n\r\n\r\nconst View = ({props}) => {\r\n\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n\r\n    const endpoint = `/v1/file/archived/${user && user._id}`\r\n\r\n    const { data } = useSWR(endpoint)\r\n    const fetchData = () => true;\r\n    const applications = data ? data.data.data : null;\r\n\r\n    let filePerm = user \r\n        && user.permission\r\n        ? user.permission.createManagementFile\r\n        || user.permission.createServiceFile\r\n        ? true\r\n        : false\r\n        : false;\r\n        \r\n    return (\r\n        <>\r\n        { filePerm && (\r\n            <div id=\"export-button-portal\" >\r\n                <Button\r\n                onClick={(data)=> {\r\n                    props.history.push('/create-file')\r\n                }}\r\n                    icon={iconAddOutline}\r\n                    kind=\"secondary\"\r\n                    small\r\n                >\r\n                    Create file\r\n                </Button>\r\n            </div>\r\n        )}\r\n        <TableView\r\n            title={'Archived files'}\r\n            data={applications}\r\n            filters={filters}\r\n            fetchData={fetchData}\r\n            gridConfig={getColumnDefs('archivedFile', fetchData)}\r\n            exportFileName={'Archived files'}\r\n        />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View\r\n","import React from 'react'\r\nimport useSWR, { trigger } from 'swr'\r\nimport { Button } from '@wfp/ui'\r\nimport {iconAddOutline, iconDocument} from '@wfp/icons';\r\n\r\nimport TableView from '../../Dashboard/TableView'\r\nimport getColumnDefs from '../../shared/columnDefs'\r\nimport store from '../../store'\r\n\r\nconst filters = [\r\n    {\r\n        title: 'Service file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n            rowData.type == \"Service file\"\r\n    },\r\n    {\r\n        title: 'Management file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n        rowData.type == 'Management file',\r\n    },\r\n    {\r\n        title: 'Uncategorized file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        warning: true,\r\n        comparator: (rowData) =>\r\n        rowData.type == null\r\n    },\r\n\r\n    {\r\n        title: 'Total files',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',                 \r\n        comparator: (rowData) =>\r\n        rowData.type \r\n    },\r\n]\r\n\r\n\r\nconst View = ({props}) => {\r\n\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n\r\n    const endpoint = `/v1/file/delayed/${user && user._id}`\r\n\r\n    const { data } = useSWR(endpoint)\r\n    const fetchData = () => true;\r\n    const applications = data ? data.data.data : null;\r\n    let filePerm = user \r\n        && user.permission\r\n        ? user.permission.createManagementFile\r\n        || user.permission.createServiceFile\r\n        ? true\r\n        : false\r\n        : false;\r\n\r\n    return (\r\n        <>\r\n        { filePerm && (\r\n            <div id=\"export-button-portal\" >\r\n                <Button\r\n                onClick={(data)=> {\r\n                    props.history.push('/create-file')\r\n                }}\r\n                    icon={iconAddOutline}\r\n                    kind=\"secondary\"\r\n                    small\r\n                >\r\n                    Create file\r\n                </Button>\r\n            </div>\r\n        )}\r\n        <TableView\r\n            title={'Delayed files'}\r\n            data={applications}\r\n            filters={filters}\r\n            fetchData={fetchData}\r\n            gridConfig={getColumnDefs('delayedFile', fetchData)}\r\n            exportFileName={'Delayed files'}\r\n        />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View\r\n","import React from 'react'\r\nimport useSWR, { trigger } from 'swr'\r\nimport { Button } from '@wfp/ui'\r\nimport {iconAddOutline, iconDocument} from '@wfp/icons';\r\n\r\nimport TableView from '../../Dashboard/TableView'\r\nimport getColumnDefs from '../../shared/columnDefs'\r\nimport store from '../../store'\r\n\r\nconst filters = [\r\n    {\r\n        title: 'Service file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n            rowData.type == \"Service file\"\r\n    },\r\n    {\r\n        title: 'Management file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        comparator: (rowData) =>\r\n        rowData.type == 'Management file',\r\n    },\r\n    {\r\n        title: 'Uncategorized file',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',\r\n        warning: true,\r\n        comparator: (rowData) =>\r\n        rowData.type == null\r\n    },\r\n\r\n    {\r\n        title: 'Total files',\r\n        role: 'Type',\r\n        amountLabel: 'FILE',                 \r\n        comparator: (rowData) =>\r\n        rowData.type \r\n    },\r\n]\r\n\r\n\r\nconst View = ({props}) => {\r\n\r\n    const storeData = store.getState();\r\n    const {user} = storeData;\r\n\r\n    const endpoint = `/v1/file/registry/${user && user._id}`\r\n\r\n    const { data } = useSWR(endpoint)\r\n    const fetchData = () => true;\r\n    const applications = data ? data.data.data : null;\r\n\r\n    let filePerm = user \r\n        && user.permission\r\n        ? user.permission.createManagementFile\r\n        || user.permission.createServiceFile\r\n        ? true\r\n        : false\r\n        : false;\r\n\r\n    return (\r\n        <>\r\n        { filePerm && (\r\n            <div id=\"export-button-portal\" >\r\n                <Button\r\n                onClick={(data)=> {\r\n                    props.history.push('/create-file')\r\n                }}\r\n                    icon={iconAddOutline}\r\n                    kind=\"secondary\"\r\n                    small\r\n                >\r\n                    Create file\r\n                </Button>\r\n            </div>\r\n        )}\r\n        <TableView\r\n            title={'Open Registry'}\r\n            data={applications}\r\n            filters={filters}\r\n            fetchData={fetchData}\r\n            gridConfig={getColumnDefs('registryFile', fetchData)}\r\n            exportFileName={'Registry files'}\r\n        />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default View\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MySecondaryNavigation from '../Dashboard/MySecondaryNavigation'\r\nimport { Wrapper, Tabs, Tab,  } from '@wfp/ui'\r\n\r\nimport IncomingFile from './views/IncomingFile'\r\nimport OutgoingFile from './views/OutgoingFile'\r\nimport InProcessFile from './views/PendingFile'\r\nimport SentFile from './views/SentFile'\r\nimport ArchivedFile from './views/ArchivedFile'\r\nimport DelayedFile from './views/DelayedFile'\r\nimport RegistryFle from './views/Registry'\r\n\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from '../shared/Footer'\r\n\r\nconst listElReactRouter = ({\r\n    index,\r\n    selected,\r\n    label,\r\n    to,\r\n    exact,\r\n    handleTabClick,\r\n}) => (\r\n    <Route\r\n        path={to}\r\n        exact={exact}\r\n        children={({ match }) => {\r\n            if (match && !selected) {\r\n                /* handle the Tab changes */\r\n                handleTabClick(index, label)\r\n            }\r\n            return (\r\n                <div\r\n                    className={\r\n                        match\r\n                            ? 'wfp--tabs__nav-item wfp--tabs__nav-item--selected'\r\n                            : 'wfp--tabs__nav-item'\r\n                    }\r\n                >\r\n                    <Link className=\"wfp--tabs__nav-link\" to={to}>\r\n                        {label}\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }}\r\n    />\r\n)\r\nconst Dashboard = (props) => {\r\n    const { user } = props;\r\n    let filePerm = user \r\n        && user.permission\r\n        ? user.permission.createManagementFile\r\n        || user.permission.createServiceFile\r\n        ? true\r\n        : false\r\n        : false;\r\n\r\n    const views = [\r\n        {\r\n            permissions: true,\r\n            default: true,\r\n            label: 'Incoming file',\r\n            path: '/file/incoming',\r\n            component: () => <IncomingFile props={props} />,\r\n        },\r\n\r\n        {\r\n            permissions: true,\r\n            label: 'Outgoing file',\r\n            path: '/file/outgoing',\r\n            component: () => <OutgoingFile props={props} />,\r\n        },\r\n\r\n        {\r\n            permissions: true,\r\n            label: 'In-Process file',\r\n            path: '/file/pending',\r\n            component: () => <InProcessFile props={props} />,\r\n        },\r\n\r\n        {\r\n            permissions: true,\r\n            label: 'Sent file',\r\n            path: '/file/sent',\r\n            component: () => <SentFile props={props} />,\r\n        },\r\n\r\n        {\r\n            permissions: true,\r\n            label: 'Delayed file',\r\n            path: '/file/delayed',\r\n            component: () => <DelayedFile props={props}  />,\r\n        },\r\n\r\n        {\r\n            permissions: true,\r\n            label: 'Archived file',\r\n            path: '/file/archived',\r\n            component: () => <ArchivedFile props={props} />,\r\n        },\r\n\r\n        {\r\n            permissions: filePerm,\r\n            label: 'Open Registry',\r\n            path: '/file/registry',\r\n            component: () => <RegistryFle props={props} />,\r\n        },\r\n    ]\r\n\r\n    const defaultView = views.find((view) => view.default );\r\n    const allowedViews = views.filter((view) =>  view.permissions );\r\n    \r\n    return (\r\n        <div>\r\n            {/* <Header /> */}\r\n            <MySecondaryNavigation\r\n                l1Label={user.isStaff ? 'Manage File' : \"Admin dashboard\"}\r\n                l1Link={user.isStaff ? '#' : '/department'}\r\n                l2Label={user.isAdmin ? 'Manage File' : \"\"}\r\n                l2Link={user.isAdmin ? '#' : ''}\r\n                pageTitle={`Traquer`}\r\n                tabs={\r\n                    <Tabs customTabContent={true}>\r\n                        {allowedViews.map((view, i) => (\r\n                            <Tab\r\n                                key={i}\r\n                                label={view.label}\r\n                                to={view.path}\r\n                                renderListElement={listElReactRouter}\r\n                            ></Tab>\r\n                        ))}\r\n                    </Tabs>\r\n                }\r\n            ></MySecondaryNavigation>\r\n            <div\r\n                className=\"wfp--module__background\"\r\n                style={{ minHeight: '400px' }}\r\n            >\r\n                <Wrapper pageWidth=\"lg\" spacing=\"md\">\r\n                    <InnerWrapper>\r\n                        {/* <div id=\"export-button-portal\" /> */}\r\n                        <Switch>\r\n                            {allowedViews.map((view, i) => (\r\n                                <Route\r\n                                    key={i}\r\n                                    path={view.path}\r\n                                    render={view.component}\r\n                                />\r\n                            ))}\r\n\r\n                            <Redirect\r\n                                to={\r\n                                    defaultView\r\n                                        ? defaultView.path\r\n                                        : '/login'\r\n                                }\r\n                            />\r\n                        </Switch>\r\n                    </InnerWrapper>\r\n                </Wrapper>\r\n            </div>\r\n            {/* <Footer /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\nconst InnerWrapper = styled.div`\r\n    position: relative;\r\n    padding-bottom: 1rem;;\r\n    #export-button-portal {\r\n        position: absolute;\r\n        right: 0;\r\n        top: -95px;\r\n    }\r\n`\r\n","import Dashboard from './Dashboard'\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport _ from 'lodash'\r\nimport { Row, Col } from 'react-flexbox-grid'\r\nimport { toast } from 'react-toastify'\r\nimport Select from 'react-select'\r\nimport { connect } from 'react-redux'\r\n\r\nimport MySecondaryNavigation from '../../Dashboard/MySecondaryNavigation'\r\nimport {\r\n    Wrapper,\r\n    Loading,\r\n    Module,\r\n    ModuleHeader,\r\n    ModuleBody,\r\n    ModuleFooter,\r\n    Button,\r\n    FormGroup,\r\n    TextInput,\r\n    ReduxFormWrapper,\r\n} from '@wfp/ui'\r\nimport { iconCloseOutline } from '@wfp/icons'\r\n\r\nimport { Form, FormSpy, Field } from 'react-final-form'\r\nimport { deptType } from '../../shared/utils'\r\n\r\n\r\nclass Create extends React.Component {\r\n    state = {\r\n        lastSaved: null,\r\n        formData: null,\r\n        showErrors: false,\r\n        loading: false,\r\n        admin: []\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n        this.fetchFile();\r\n\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n\r\n        if(state && state.edit && state.data){\r\n            this.setState({\r\n                formData: {\r\n                    name: state.data.name,\r\n                    type: {\r\n                        value: state.data.type,\r\n                        label: state.data.type\r\n                    }\r\n                }\r\n            })\r\n        };\r\n    }\r\n\r\n    fetchFile=  async val => {\r\n        const { id }= this.props;\r\n        this.setState({ loading: true })\r\n        try {\r\n            axios.get(`/v1/file/history/${id}`)\r\n            .then(data=>{ \r\n                    this.setState({ \r\n                        file : data.data.data, \r\n                        history: data.data.data.history, \r\n                        loading: false \r\n                })})\r\n        } catch (err) {\r\n            console.log('Error while loading sub department', err)\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        const { showErrors } = this.state;\r\n        const { formData, loading, admin } = this.state;\r\n        const { location, userId } = this.props;\r\n        const {state}= location;\r\n        return (\r\n            <>\r\n                <MySecondaryNavigation\r\n                    l1Label=\"Manage file\"\r\n                    l1Link=\"/file\"\r\n                    l2Label={'File History' }\r\n                    l2Link=\"#\"\r\n                    pageTitle={\"Traquer\" }\r\n                />\r\n                {loading ? (\r\n                    <Loading active={true} withOverlay={true} />\r\n                ) : (\r\n                    <div\r\n                        className=\"wfp--module__background\"\r\n                        style={{ minHeight: '400px' }}\r\n                    >\r\n                        <Wrapper\r\n                            pageWidth=\"lg\"\r\n                            spacing=\"md\"\r\n                            mobilePageWidth=\"full\"\r\n                        >\r\n                            <Module noMargin>\r\n                                <ModuleHeader>\r\n                                    <span style={{ fontSize: 20 }}>\r\n                                       File History\r\n                                    </span>\r\n                                </ModuleHeader>\r\n                                <ModuleBody>\r\n                                    \r\n                                </ModuleBody>\r\n                                <ModuleFooter>\r\n                                    <div></div>\r\n                                    <div\r\n                                        style={{\r\n                                            width: '100%',\r\n                                            textAlign: 'right',\r\n                                            margin: '1.5rem 0',\r\n                                        }}\r\n                                    >\r\n                                        <Button\r\n                                            kind=\"secondary\"\r\n                                            onClick={() =>\r\n                                                this.props.history.goBack()\r\n                                            }\r\n                                        >\r\n                                            Go back\r\n                                        </Button>\r\n\r\n                                    </div>\r\n                                </ModuleFooter>\r\n                            </Module>\r\n                              \r\n                        </Wrapper>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.user._id,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Create)\r\n\r\nconst FieldWrapper = styled.div`\r\n    margin-bottom: 30px;\r\n`\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport _ from 'lodash'\r\nimport { Row, Col } from 'react-flexbox-grid'\r\nimport { toast } from 'react-toastify'\r\nimport Select from 'react-select'\r\nimport { connect } from 'react-redux'\r\nimport 'react-dates/initialize';\r\nimport { SingleDatePickerInput } from \"@wfp/ui\";\r\nimport { SingleDatePicker } from 'react-dates';\r\n\r\nimport MySecondaryNavigation from '../../Dashboard/MySecondaryNavigation'\r\nimport {\r\n    Wrapper,\r\n    Loading,\r\n    Module,\r\n    ModuleHeader,\r\n    ModuleBody,\r\n    ModuleFooter,\r\n    Button,\r\n    FormGroup,\r\n    TextInput,\r\n    ReduxFormWrapper,\r\n} from '@wfp/ui'\r\nimport { iconCloseOutline } from '@wfp/icons'\r\n\r\nimport { Form, FormSpy, Field } from 'react-final-form'\r\nimport { deptType, fileType } from '../../shared/utils'\r\nimport moment from 'moment'\r\n\r\nclass Create extends React.Component {\r\n    state = {\r\n        lastSaved: null,\r\n        formData: null,\r\n        showErrors: false,\r\n        loading: false,\r\n        date: moment(),\r\n        focused: null,\r\n        serviceType: []\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n\r\n        if(state && state.edit && state.data){\r\n            let oldNumber = state.data && state.data.fileNo\r\n                ? state.data.fileNo.slice(11)\r\n                : null;\r\n\r\n            this.setState({\r\n                formData: {\r\n                    name: state.data.name,\r\n                    type: {\r\n                        value: state.data.type,\r\n                        label: state.data.type\r\n                    },\r\n                    fileNo: oldNumber,\r\n                },\r\n                date: state.data.createdDate \r\n                    ? moment(state.data.createdDate) \r\n                    : moment(),\r\n                serviceType: {\r\n                    id: state.data.serviceFileType\r\n                }\r\n            })\r\n        };\r\n    }\r\n    \r\n    onSubmit = async (values) => {\r\n        this.setState({ loading: true });\r\n        const { location, userId } = this.props;\r\n        const {state}= location;\r\n        let formData={\r\n            name: values.name,\r\n            type: values.type.value,\r\n            fileNo: values.fileNo,\r\n            createdDate: this.state.date,\r\n            serviceFileType: values.type.value == 'Service file' \r\n                ? values.serviceType && values.serviceType._id\r\n                : null\r\n        }\r\n       \r\n        try {\r\n            if(state && state.edit){\r\n                let oldNumber = state && state.data.fileNo\r\n                ? state.data.fileNo.slice(0, 11)\r\n                : null;\r\n                let fileNo = oldNumber ? oldNumber + values.fileNo : values.fileNo;\r\n\r\n                await axios.put(`/v1/file/update/${state.id}`, { ...formData, fileNo })\r\n                .then(()=> this.setState({ loading: false }))\r\n                toast('File successfully updated', {closeOnClick: true, autoClose: 1000 });\r\n                this.props.history.goBack()\r\n            }\r\n            else{\r\n                await axios.post(`/v1/file/add/${userId}`, formData)\r\n                .then(()=> this.setState({ loading: false }))\r\n                toast('File successfully created', {closeOnClick: true, autoClose: 1000 });\r\n                this.props.history.goBack()\r\n            }\r\n            \r\n            \r\n        } catch (err) {\r\n            console.log('Ooops! error occurred, please try again', err)\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    fetchService =  async () => {\r\n        const { user } = this.props;\r\n        try {\r\n            axios.get(`/v1/service/file/${user && user.ministry}`)\r\n            .then(data=> this.setState({ serviceType : data.data }))\r\n        } catch (err) {\r\n            console.log('Error while loading department', err)\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        const { showErrors, serviceType } = this.state;\r\n        const { formData, loading, admin } = this.state;\r\n        const { location, userId, user } = this.props;\r\n        const {state}= location;\r\n        const permission = user && user.permission ? user.permission \r\n        : {\r\n            createServiceFile: false,\r\n            createManagementFile: false\r\n        };\r\n\r\n        const fileList = fileType.filter(p => \r\n            p.label == 'Service file' \r\n            && p.createServiceFile == permission.createServiceFile \r\n            || p.label == 'Management file' \r\n            && p.createManagementFile == permission.createManagementFile \r\n        );\r\n\r\n        return (\r\n            <>\r\n                <MySecondaryNavigation\r\n                    l1Label=\"Manage File\"\r\n                    l1Link=\"/file\"\r\n                    l2Label={  state && state.edit ? 'Update file' : 'Create file' }\r\n                    l2Link=\"#\"\r\n                    pageTitle={  state && state.edit ? 'Update file' : 'Create file' }\r\n                />\r\n                {loading ? (\r\n                    <Loading active={true} withOverlay={true} />\r\n                ) : (\r\n                    <div\r\n                        className=\"wfp--module__background\"\r\n                        style={{ minHeight: '400px' }}\r\n                    >\r\n                        <Wrapper\r\n                            pageWidth=\"lg\"\r\n                            spacing=\"md\"\r\n                            mobilePageWidth=\"full\"\r\n                        >\r\n                            <Form\r\n                                onSubmit={this.onSubmit}\r\n                                initialValues={formData}\r\n                                validate={(values) => {\r\n                                    const errors = {}\r\n                                    const {\r\n                                        name, \r\n                                        type,\r\n                                    } = values\r\n\r\n                                    if (!name) {\r\n                                        errors.name = {\r\n                                            value: 'Department name is required',\r\n                                            show: showErrors,\r\n                                        }\r\n                                    } \r\n\r\n                                    if (!type) {\r\n                                        errors.name = {\r\n                                            value: 'Department type is required',\r\n                                            show: showErrors,\r\n                                        }\r\n                                    } \r\n                                    return errors\r\n                                }}\r\n                                render={({ values, onSave, valid, reset }) => (\r\n                                    <form>\r\n                                        <Module noMargin>\r\n                                            <ModuleHeader>\r\n                                                <span style={{ fontSize: 20 }}>\r\n                                                    {  state && state.edit ? 'Update File' : 'Create File' }\r\n                                                </span>\r\n                                            </ModuleHeader>\r\n                                            <ModuleBody>\r\n                                                <Col \r\n                                                    md={8}\r\n                                                    sm={8}\r\n                                                    xs={12}\r\n                                                >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"name\"\r\n                                                        name=\"name\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"File name/title\"\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                            <Col \r\n                                                    md={8}\r\n                                                    sm={8}\r\n                                                    xs={12}\r\n                                                >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"fileNo\"\r\n                                                        name=\"fileNo\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"File number\"\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                                <Col \r\n                                                    md={8}\r\n                                                    sm={8}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            name=\"type\"\r\n                                                            labelText=\"File Type\"\r\n                                                            placeholder=\"Select file type\"\r\n                                                        >\r\n                                                            {({\r\n                                                                input,\r\n                                                                meta,\r\n                                                            }) => (\r\n                                                                <>\r\n                                                                <div className='wfp--label'>File type</div>\r\n                                                                <Select\r\n                                                                    className=\"wfp--react-select-container auto-width\"\r\n                                                                    classNamePrefix=\"wfp--react-select\"\r\n                                                                    closeMenuOnSelect={true}\r\n                                                                    options={fileList}\r\n                                                                    getOptionValue={(option) =>\r\n                                                                        option['value'] \r\n                                                                    }\r\n                                                                    getOptionLabel={(option) =>\r\n                                                                        option['label'] \r\n                                                                    }\r\n                                                                    {...input}\r\n                                                                    {...meta}\r\n                                                                />\r\n                                                                </>\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n\r\n                                                {fileList.filter(p=> p.label == 'Service file' ).length > 0 \r\n                                                && (\r\n                                                <Col \r\n                                                    md={8}\r\n                                                    sm={8}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            name=\"serviceType\"\r\n                                                            labelText=\"Service File Type\"\r\n                                                            placeholder=\"Select service file type\"\r\n                                                        >\r\n                                                            {({\r\n                                                                input,\r\n                                                                meta,\r\n                                                            }) => (\r\n                                                                <>\r\n                                                                <div className='wfp--label'>Service File type</div>\r\n                                                                <Select\r\n                                                                    className=\"wfp--react-select-container auto-width\"\r\n                                                                    classNamePrefix=\"wfp--react-select\"\r\n                                                                    closeMenuOnSelect={true}\r\n                                                                    options={serviceType}\r\n                                                                    getOptionValue={(option) =>\r\n                                                                        option['_id'] \r\n                                                                    }\r\n                                                                    getOptionLabel={(option) =>\r\n                                                                        option['name'] \r\n                                                                    }\r\n                                                                    {...input}\r\n                                                                    {...meta}\r\n                                                                    isDisabled={ values.type && values.type.label == \"Management file\" }\r\n                                                                />\r\n                                                                </>\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n                                                )}\r\n                                                \r\n                                            \r\n                                                <Col \r\n                                                    md={8}\r\n                                                    sm={8}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            name=\"date\"\r\n                                                            id='date'\r\n                                                        >\r\n                                                            {({\r\n                                                                input,\r\n                                                                meta,\r\n                                                            }) => (\r\n                                                                <SingleDatePickerInput\r\n                                                                    date={this.state.date }\r\n                                                                    datePicker={SingleDatePicker}\r\n                                                                    inputIconPosition=\"after\"\r\n                                                                    labelText=\"Opening date\"\r\n                                                                    onDateChange={date=> this.setState({ date: moment(date) })}\r\n                                                                    onChange={(date)=>this.setState({ date })}\r\n                                                                    focused={this.state.focused}\r\n                                                                    onFocusChange={({ focused }) =>\r\n                                                                        this.setState({ focused })\r\n                                                                    }\r\n                                                                    placeholder=\"Select opening date\"\r\n                                                                    numberOfMonths={1}\r\n                                                                    showDefaultInputIcon\r\n                                                                    isOutsideRange={() => false}\r\n                                                                    {...input}\r\n                                                                    {...meta}\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n                                                \r\n                                            </ModuleBody>\r\n                                            <ModuleFooter>\r\n                                                <div></div>\r\n                                                <div\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        textAlign: 'right',\r\n                                                        margin: '1.5rem 0',\r\n                                                    }}\r\n                                                >\r\n                                                    <Button\r\n                                                        kind=\"secondary\"\r\n                                                        onClick={() =>\r\n                                                            this.props.history.goBack()\r\n                                                        }\r\n                                                    >\r\n                                                        Go back\r\n                                                    </Button>\r\n\r\n                                                    <Button\r\n                                                        // disabled={!valid}\r\n                                                        onClick={(e) => {\r\n                                                            e.preventDefault()\r\n                                                            this.onSubmit(\r\n                                                                values\r\n                                                            )\r\n                                                        }}\r\n                                                        disabled={\r\n                                                            values.name && values.type\r\n                                                            ? false: true\r\n                                                        }\r\n                                                    >\r\n                                                       { state && state.edit ? 'Update' : 'Create' } \r\n                                                    </Button>\r\n                                                </div>\r\n                                            </ModuleFooter>\r\n                                        </Module>\r\n                                        {showErrors && (\r\n                                            <div\r\n                                                style={{\r\n                                                    padding: '5px',\r\n                                                    width: '100%',\r\n                                                    background: '#C5192D',\r\n                                                    color: 'white',\r\n                                                    textAlign: 'center',\r\n                                                }}\r\n                                            >\r\n                                                Please fill in all required\r\n                                                fields\r\n                                            </div>\r\n                                        )}\r\n                                    </form>\r\n                                )}\r\n                            />\r\n                        </Wrapper>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.user._id,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Create)\r\n\r\nconst FieldWrapper = styled.div`\r\n    margin-bottom: 30px;\r\n    .SingleDatePicker {\r\n        position: relative;\r\n        order: 3;\r\n        width: 100%;\r\n    }\r\n    .DateInput {\r\n        width: 100%;\r\n    }\r\n    .SingleDatePickerInput {\r\n        width: 100%;\r\n    }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n    User,\r\n    SubNavigation,\r\n    MainNavigation,\r\n    MainNavigationItem,\r\n    SubNavigationHeader,\r\n    SubNavigationTitle,\r\n    SubNavigationLink,\r\n    SubNavigationContent,\r\n    List,\r\n    ListItem,\r\n    Link,\r\n    Button\r\n} from '@wfp/ui'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { logout } from '../store/actions'\r\nimport { Link as DomLink } from 'react-router-dom'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomWrapper = styled.div`\r\n    .wfp--wrapper.wfp--wrapper--width-md.wfp--wrapper--width-mobile-full.wfp--main-navigation__wrapper {\r\n        max-width: 1200px;\r\n    }\r\n`\r\nconst Wrapper = styled.div`\r\n    .wfp--main-navigation{\r\n        background-color: #1841BA;\r\n    }\r\n`\r\nclass MainNav extends React.Component {\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object.isRequired,\r\n        location: PropTypes.object.isRequired,\r\n        history: PropTypes.object.isRequired\r\n      };\r\n    \r\n      constructor(props) {\r\n        super(props);\r\n        this.child = React.createRef();\r\n      }\r\n\r\n      componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.location != this.props.locaction) {\r\n          this.closeMenu();\r\n        }\r\n      }\r\n\r\n      closeMenu = () => {\r\n        this.child.current && this.child.current.props.onChangeSub('close');\r\n      };\r\n\r\n    render() {\r\n        const { logout, user, location, showSbpMenu } = this.props;\r\n\r\n        if (!user) return null\r\n        return (\r\n            <>\r\n                {location.pathname === '/login' ? null : (\r\n                    <Wrapper>\r\n                    <CustomWrapper>\r\n                        <MainNavigation\r\n                            logo={\r\n                                <a href=\"/\">\r\n                                    {' '}\r\n                                    Traquer\r\n                                </a>\r\n                            }\r\n                        >\r\n\r\n                            <MainNavigationItem\r\n                                className=\"wfp--main-navigation__user\"\r\n                                subNavigation={\r\n                                    <SubNavigation>\r\n                                        <SubNavigationHeader>\r\n                                            <SubNavigationTitle>\r\n                                                Welcome {user.firstName}!\r\n                                            </SubNavigationTitle>\r\n                                            <SubNavigationLink>\r\n                                                <Button\r\n                                                    kind=\"primary\"\r\n                                                    small\r\n                                                    onClick={() => logout()}\r\n                                                >\r\n                                                    Logout\r\n                                                </Button>\r\n                                            </SubNavigationLink>\r\n                                        </SubNavigationHeader>\r\n                                    </SubNavigation>\r\n                                }\r\n                            >\r\n                                <User\r\n                                    ellipsis\r\n                                    title=\"\"\r\n                                />\r\n                            </MainNavigationItem>\r\n                        </MainNavigation>\r\n                    </CustomWrapper>\r\n                    </Wrapper>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    logout: () => dispatch(logout()),\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainNav))\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport _ from 'lodash'\r\nimport { Row, Col } from 'react-flexbox-grid'\r\nimport { toast } from 'react-toastify'\r\nimport Select from 'react-select'\r\nimport { connect } from 'react-redux'\r\nimport 'react-dates/initialize';\r\nimport { SingleDatePickerInput } from \"@wfp/ui\";\r\nimport { SingleDatePicker } from 'react-dates';\r\n\r\nimport MySecondaryNavigation from '../../Dashboard/MySecondaryNavigation'\r\nimport {\r\n    Wrapper,\r\n    Loading,\r\n    Module,\r\n    ModuleHeader,\r\n    ModuleBody,\r\n    ModuleFooter,\r\n    Button,\r\n    FormGroup,\r\n    TextInput,\r\n    ReduxFormWrapper,\r\n} from '@wfp/ui'\r\nimport { iconCloseOutline } from '@wfp/icons'\r\n\r\nimport { Form, FormSpy, Field } from 'react-final-form'\r\nimport { deptType, fileType } from '../../shared/utils'\r\nimport moment from 'moment'\r\n\r\nclass Create extends React.Component {\r\n    state = {\r\n        lastSaved: null,\r\n        formData: null,\r\n        showErrors: false,\r\n        loading: false,\r\n        date: moment(),\r\n        focused: null,\r\n        serviceType: [],\r\n        deptList: [],\r\n        staffList: [],\r\n        department: {}\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n\r\n        const { location } = this.props;\r\n        const {state}= location;\r\n\r\n        this.fetchDepartment();\r\n\r\n        if(state && state.edit && state.data){\r\n            let oldNumber = state.data && state.data.fileNo\r\n                ? state.data.fileNo.slice(11)\r\n                : null;\r\n\r\n            this.setState({\r\n                formData: {\r\n                    name: state.data.name,\r\n                    type: {\r\n                        value: state.data.type,\r\n                        label: state.data.type\r\n                    },\r\n                    fileNo: oldNumber,\r\n                },\r\n                date: state.data.createdDate \r\n                    ? moment(state.data.createdDate) \r\n                    : moment(),\r\n                serviceType: {\r\n                    id: state.data.serviceFileType\r\n                }\r\n            })\r\n        };\r\n    }\r\n    \r\n    onSubmit = async (values) => {\r\n        this.setState({ loading: true });\r\n        const { location, userId, id } = this.props;\r\n        const {state}= location;\r\n        let formData={\r\n            receiverId: values.designatedOfficer._id, \r\n            sentDate: this.state.date,\r\n            sentTime: this.state.date,\r\n        }\r\n       \r\n        try {\r\n            await axios.post(`/v1/file/forward/${id}/${userId}`, formData)\r\n            .then(()=> this.setState({ loading: false }))\r\n            toast('File successfully forwarded', {closeOnClick: true, autoClose: 1000 });\r\n            this.props.history.push('/file/outgoing') \r\n        } catch (err) {\r\n            console.log('Ooops! error occurred, please try again', err)\r\n            toast.error('Ooops! error occurred, please try again', {closeOnClick: true, autoClose: 1000 });\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    fetchDepartment =  async () => {\r\n        const { user, id } = this.props;\r\n        this.setState({ loading: true})\r\n        try {\r\n            axios.get(`/v1/department`)\r\n            .then(data=> this.setState({ deptList : data.data, loading: false }))\r\n        } catch (err) {\r\n            console.log('Error while loading department', err)\r\n            this.setState({ loading: false})\r\n        }\r\n    }\r\n\r\n    \r\n    fetchStaff =  async (p) => {\r\n        const { user, id } = this.props;\r\n        this.setState({ loading: true})\r\n        try {\r\n            axios.get(`/v1/department/staff/${p && p._id}`)\r\n            .then(data=> {\r\n                this.setState({ staffList : data.data.data.staff, loading: false })\r\n            })\r\n        } catch (err) {\r\n            console.log('Error while loading department', err)\r\n            this.setState({ loading: false})\r\n        }\r\n    }\r\n\r\n    validate= values =>{\r\n        const error = {}\r\n        const {\r\n            department,\r\n            designatedOfficer,\r\n        } = values;\r\n\r\n        if(!department){\r\n            error.department = {\r\n                value: 'Department name is required',\r\n            }\r\n        }\r\n\r\n        if(!designatedOfficer){\r\n            error.designatedOfficer={\r\n                value: 'Select receiver',\r\n            }\r\n        }\r\n\r\n        if(department && department != this.state.department){\r\n            this.fetchStaff(department);\r\n            this.setState({department })\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    \r\n    render() {\r\n        const { showErrors, serviceType, deptList } = this.state;\r\n        const { formData, loading, staffList } = this.state;\r\n        const { location, userId, user } = this.props;\r\n        const {state}= location;\r\n        const permission = user && user.permission ? user.permission \r\n        : {\r\n            createServiceFile: false,\r\n            createManagementFile: false\r\n        };\r\n\r\n        const fileList = fileType.filter(p => \r\n            p.label == 'Service file' \r\n            && p.createServiceFile == permission.createServiceFile \r\n            || p.label == 'Management file' \r\n            && p.createManagementFile == permission.createManagementFile \r\n        );\r\n\r\n        return (\r\n            <>\r\n                <MySecondaryNavigation\r\n                    l1Label=\"Manage File\"\r\n                    l1Link=\"/file\"\r\n                    l2Label={\"File Transfer\" }\r\n                    l2Link=\"#\"\r\n                    pageTitle={\"File Transfer\" }\r\n                />\r\n                    <Loading active={loading} withOverlay={true} />\r\n                \r\n                    <div\r\n                        className=\"wfp--module__background\"\r\n                        style={{ minHeight: '400px' }}\r\n                    >\r\n                        <Wrapper\r\n                            pageWidth=\"lg\"\r\n                            spacing=\"md\"\r\n                            mobilePageWidth=\"full\"\r\n                        >\r\n                            <Form\r\n                                onSubmit={this.onSubmit}\r\n                                initialValues={formData}\r\n                                validate={(values) => this.validate(values)}\r\n                                render={({ values, onSave, valid, reset }) => (\r\n                                    <form>\r\n                                        <Module noMargin>\r\n                                            <ModuleHeader>\r\n                                                <span style={{ fontSize: 20 }}>\r\n                                                   Forward file\r\n                                                </span>\r\n                                            </ModuleHeader>\r\n                                            <ModuleBody>\r\n                                                <Col \r\n                                                    md={8}\r\n                                                    sm={8}\r\n                                                    xs={12}\r\n                                                >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"name\"\r\n                                                        name=\"name\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"File name/title\"\r\n                                                        disabled={ true}\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                            <Col \r\n                                                    md={8}\r\n                                                    sm={8}\r\n                                                    xs={12}\r\n                                                >\r\n                                                <FieldWrapper>\r\n                                                    <Field\r\n                                                        component={\r\n                                                            ReduxFormWrapper\r\n                                                        }\r\n                                                        inputComponent={\r\n                                                            TextInput\r\n                                                        }\r\n                                                        id=\"fileNo\"\r\n                                                        name=\"fileNo\"\r\n                                                        type=\"text\"\r\n                                                        labelText=\"File number\"\r\n                                                        disabled={ true}\r\n                                                    />\r\n                                                </FieldWrapper>\r\n                                            </Col>\r\n\r\n                                                <Col \r\n                                                    md={8}\r\n                                                    sm={8}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            name=\"type\"\r\n                                                            labelText=\"File Type\"\r\n                                                            placeholder=\"Select file type\"\r\n                                                        >\r\n                                                            {({\r\n                                                                input,\r\n                                                                meta,\r\n                                                            }) => (\r\n                                                                <>\r\n                                                                <div className='wfp--label wfp--label--disabled'>File type</div>\r\n                                                                <Select\r\n                                                                    className=\"wfp--react-select-container auto-width\"\r\n                                                                    classNamePrefix=\"wfp--react-select\"\r\n                                                                    closeMenuOnSelect={true}\r\n                                                                    options={fileList}\r\n                                                                    getOptionValue={(option) =>\r\n                                                                        option['value'] \r\n                                                                    }\r\n                                                                    getOptionLabel={(option) =>\r\n                                                                        option['label'] \r\n                                                                    }\r\n                                                                    {...input}\r\n                                                                    {...meta}\r\n                                                                    isDisabled={true}\r\n                                                                />\r\n                                                                </>\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n\r\n                                                {values.type == 'Service file'\r\n                                                && (\r\n                                                <Col \r\n                                                    md={8}\r\n                                                    sm={8}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            name=\"serviceType\"\r\n                                                            labelText=\"Service File Type\"\r\n                                                            placeholder=\"Select service file type\"\r\n                                                        >\r\n                                                            {({\r\n                                                                input,\r\n                                                                meta,\r\n                                                            }) => (\r\n                                                                <>\r\n                                                                <div className='wfp--label wfp--label--disabled'>Service File type</div>\r\n                                                                <Select\r\n                                                                    className=\"wfp--react-select-container auto-width\"\r\n                                                                    classNamePrefix=\"wfp--react-select\"\r\n                                                                    closeMenuOnSelect={true}\r\n                                                                    options={serviceType}\r\n                                                                    getOptionValue={(option) =>\r\n                                                                        option['_id'] \r\n                                                                    }\r\n                                                                    getOptionLabel={(option) =>\r\n                                                                        option['name'] \r\n                                                                    }\r\n                                                                    {...input}\r\n                                                                    {...meta}\r\n                                                                    isDisabled={ true }\r\n                                                                />\r\n                                                                </>\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n                                                )}\r\n                                                \r\n                                                <Col \r\n                                                    md={8}\r\n                                                    sm={8}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            name=\"department\"\r\n                                                            labelText=\"Destination\"\r\n                                                            placeholder=\"Select destination department\"\r\n                                                        >\r\n                                                            {({\r\n                                                                input,\r\n                                                                meta,\r\n                                                            }) => (\r\n                                                                <>\r\n                                                                <div className='wfp--label '>Destination</div>\r\n                                                                <Select\r\n                                                                    className=\"wfp--react-select-container auto-width\"\r\n                                                                    classNamePrefix=\"wfp--react-select\"\r\n                                                                    closeMenuOnSelect={true}\r\n                                                                    options={deptList}\r\n                                                                    getOptionValue={(option) =>\r\n                                                                        option['_id'] \r\n                                                                    }\r\n                                                                    getOptionLabel={(option) =>\r\n                                                                        option['name'] \r\n                                                                    }\r\n                                                                    {...input}\r\n                                                                    {...meta}\r\n                                                                />\r\n                                                                </>\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n\r\n                                                <Col \r\n                                                    md={8}\r\n                                                    sm={8}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            name=\"designatedOfficer\"\r\n                                                            labelText=\"Designated officer\"\r\n                                                            placeholder=\"Select designated officer\"\r\n                                                        >\r\n                                                            {({\r\n                                                                input,\r\n                                                                meta,\r\n                                                            }) => (\r\n                                                                <>\r\n                                                                <div className='wfp--label'>Designated officer</div>\r\n                                                                <Select\r\n                                                                    className=\"wfp--react-select-container auto-width\"\r\n                                                                    classNamePrefix=\"wfp--react-select\"\r\n                                                                    closeMenuOnSelect={true}\r\n                                                                    options={staffList}\r\n                                                                    getOptionValue={(option) =>\r\n                                                                        option['_id'] \r\n                                                                    }\r\n                                                                    getOptionLabel={(option) =>\r\n                                                                        option['firstName'] + \" \" + option['lastName']\r\n                                                                    }\r\n                                                                    {...input}\r\n                                                                    {...meta}\r\n                                                                />\r\n                                                                </>\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n\r\n                                            \r\n                                                <Col \r\n                                                    md={8}\r\n                                                    sm={8}\r\n                                                    xs={12}\r\n                                                >\r\n                                                    <FieldWrapper>\r\n                                                        <Field\r\n                                                            component={\r\n                                                                ReduxFormWrapper\r\n                                                            }\r\n                                                            name=\"date\"\r\n                                                            id='date'\r\n                                                        >\r\n                                                            {({\r\n                                                                input,\r\n                                                                meta,\r\n                                                            }) => (\r\n                                                                <SingleDatePickerInput\r\n                                                                    date={this.state.date }\r\n                                                                    datePicker={SingleDatePicker}\r\n                                                                    inputIconPosition=\"after\"\r\n                                                                    labelText=\"Date forwarded\"\r\n                                                                    onDateChange={date=> this.setState({ date: moment(date) })}\r\n                                                                    onChange={(date)=>this.setState({ date })}\r\n                                                                    focused={this.state.focused}\r\n                                                                    onFocusChange={({ focused }) =>\r\n                                                                        this.setState({ focused })\r\n                                                                    }\r\n                                                                    placeholder=\"Select opening date\"\r\n                                                                    numberOfMonths={1}\r\n                                                                    showDefaultInputIcon\r\n                                                                    isOutsideRange={() => false}\r\n                                                                    {...input}\r\n                                                                    {...meta}\r\n                                                                />\r\n                                                            )}\r\n                                                        </Field>\r\n                                                    </FieldWrapper>\r\n                                                </Col>\r\n                                                \r\n                                            </ModuleBody>\r\n                                            <ModuleFooter>\r\n                                                <div></div>\r\n                                                <div\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        textAlign: 'right',\r\n                                                        margin: '1.5rem 0',\r\n                                                    }}\r\n                                                >\r\n                                                    <Button\r\n                                                        kind=\"secondary\"\r\n                                                        onClick={() =>\r\n                                                            this.props.history.goBack()\r\n                                                        }\r\n                                                    >\r\n                                                        CANCEL\r\n                                                    </Button>\r\n\r\n                                                    <Button\r\n                                                        // disabled={!valid}\r\n                                                        onClick={(e) => {\r\n                                                            e.preventDefault()\r\n                                                            this.onSubmit(\r\n                                                                values\r\n                                                            )\r\n                                                        }}\r\n                                                        disabled={\r\n                                                            values.designatedOfficer && values.designatedOfficer._id\r\n                                                            ? false: true\r\n                                                        }\r\n                                                    >\r\n                                                      FORWARD FILE\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </ModuleFooter>\r\n                                        </Module>\r\n                                        {showErrors && (\r\n                                            <div\r\n                                                style={{\r\n                                                    padding: '5px',\r\n                                                    width: '100%',\r\n                                                    background: '#C5192D',\r\n                                                    color: 'white',\r\n                                                    textAlign: 'center',\r\n                                                }}\r\n                                            >\r\n                                                Please fill in all required\r\n                                                fields\r\n                                            </div>\r\n                                        )}\r\n                                    </form>\r\n                                )}\r\n                            />\r\n                        </Wrapper>\r\n                    </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.user._id,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Create)\r\n\r\nconst FieldWrapper = styled.div`\r\n    margin-bottom: 30px;\r\n    .SingleDatePicker {\r\n        position: relative;\r\n        order: 3;\r\n        width: 100%;\r\n    }\r\n    .DateInput {\r\n        width: 100%;\r\n    }\r\n    .SingleDatePickerInput {\r\n        width: 100%;\r\n    }\r\n`\r\n","import React from 'react'\r\nimport { SWRConfig } from 'swr'\r\nimport axios from 'axios'\r\nimport { Switch, BrowserRouter } from 'react-router-dom'\r\nimport { Route, Redirect } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { checkLoginStatus, logout } from './store/actions'\r\nimport ProtectedRoute from './ProtectedRoute'\r\nimport IdleTimer from 'react-idle-timer'\r\nimport { Modal, Wrapper, Loading, Blockquote } from '@wfp/ui'\r\nimport Login from './Login'\r\nimport Activate from './Activate'\r\nimport CreateMinistry from './Dashboard/views/CreateMinistry'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport Footer from './shared/Footer'\r\n\r\n// import 'ag-grid-enterprise'\r\nimport 'ag-grid-community/dist/styles/ag-grid.css'\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css'\r\n\r\nimport './App.css';\r\nimport ResetPassword from './ResetPassword'\r\nimport SA_Landing from './SuperAdmin/Landing'\r\nimport Dashboard from './Dashboard'\r\nimport CreateAdmin from './Dashboard/views/CreateAdmin'\r\nimport AdminDashboard from './AdminDashboard'\r\nimport CreateDepartment from './AdminDashboard/views/CreateDepartment'\r\nimport ViewSubDepartment from './AdminDashboard/views/SubDepartment'\r\nimport CreateSubDepartment from './AdminDashboard/views/CreateSubDepartment'\r\nimport CreateStaff from './AdminDashboard/views/CreateStaff'\r\nimport ManageFile from './ManageFile'\r\nimport ViewFileHistory from './ManageFile/views/ViewHistory'\r\nimport CreateFile from './ManageFile/views/CreateFile'\r\nimport MyMainNavigation from './shared/MyMainNavigation'\r\nimport ForwardFile from './ManageFile/views/ForwardFile'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n          timeout: 1000 * 60 * 10,\r\n          showModal: false,\r\n          isTimedOut: false,\r\n      }\r\n\r\n      this.idleTimer = null\r\n      this.onIdle = this._onIdle.bind(this)\r\n  }\r\n\r\n  _onIdle(e) {\r\n      if (window.location.pathname != '/login') {\r\n          this.setState({ showModal: true })\r\n          this.timeOut()\r\n      }\r\n  }\r\n\r\n  timeOut = () =>\r\n      setTimeout(() => {\r\n          if (this.state.showModal) {\r\n              this.setState({ showModal: false })\r\n              return this.props.logout()\r\n          }\r\n\r\n          return this.setState({ showModal: false })\r\n      }, 3 * 60 * 1000)\r\n\r\n  componentDidMount() {\r\n      const { checkLoginStatus } = this.props\r\n      // even tho we keep user data in local storage,\r\n      // refetch user data on mount because it might have been updated\r\n\r\n      checkLoginStatus();\r\n      // this.loadAvailabilityForms()\r\n  }\r\n  \r\n\r\n  toggleModal = () => {\r\n      this.setState((state) => ({\r\n          showModal: !state.showModal,\r\n      }))\r\n      this.idleTimer.reset()\r\n      this.props.checkLoginStatus()\r\n  }\r\n\r\n  logOut = () => {\r\n      this.setState((state) => ({\r\n          showModal: false,\r\n      }))\r\n\r\n      this.props.logout()\r\n  }\r\n\r\n  render() {\r\n      const { user, error, comment } = this.props;\r\n      const isLogged = user ? true : false;\r\n\r\n       // Internet Explorer 6-11\r\n      const isIE = /*@cc_on!@*/ false || !!document.documentMode;\r\n\r\n      return (\r\n          <SWRConfig\r\n              value={{\r\n                  fetcher: axios,\r\n                  revalidateOnFocus: false,\r\n                  dedupingInterval: 300,\r\n              }}\r\n          >\r\n              <IdleTimer\r\n                    ref={(ref) => {\r\n                        this.idleTimer = ref\r\n                    }}\r\n                    element={document}\r\n                    onIdle={this.onIdle}\r\n                    debounce={250}\r\n                    timeout={this.state.timeout}\r\n                />\r\n\r\n                <BrowserRouter>\r\n                    <>\r\n                    <Switch>\r\n                        <Route\r\n                            exact\r\n                            path=\"/login\"\r\n                            component={(props) => <Login {...props} />}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/activate\"\r\n                            component={(props) => <Activate {...props} />}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/reset-password\"\r\n                            component={(props) => <ResetPassword {...props} />}\r\n                        />\r\n                        \r\n                        <MyMainNavigation />\r\n                    </Switch>\r\n\r\n                        {!isLogged ? (\r\n                            <Switch>\r\n                                <Redirect to={`/login`} />\r\n\r\n                            </Switch>\r\n                        ) : (\r\n                            <>\r\n                            <Switch>\r\n                                {/* {isIE && <Redirect to='/outdated-browser' /> } */}\r\n\r\n                                <ProtectedRoute\r\n                                    isAllowed={isLogged}\r\n                                    path=\"/ministry\"\r\n                                    component={(props) => (\r\n                                        <Dashboard {...props} user={user} />\r\n                                    )}\r\n                                />\r\n\r\n                                <ProtectedRoute\r\n                                    isAllowed={isLogged}\r\n                                    path=\"/create-ministry\"\r\n                                    component={(props) => (\r\n                                        <CreateMinistry {...props} user={user} />\r\n                                    )}\r\n                                />\r\n\r\n                                <ProtectedRoute\r\n                                    isAllowed={isLogged}\r\n                                    path=\"/create-admin\"\r\n                                    component={(props) => (\r\n                                        <CreateAdmin {...props} user={user} />\r\n                                    )}\r\n                                />\r\n\r\n                                <ProtectedRoute\r\n                                    isAllowed={isLogged}\r\n                                    path=\"/create-staff\"\r\n                                    component={(props) => (\r\n                                        <CreateStaff {...props} user={user} />\r\n                                    )}\r\n                                />\r\n\r\n                                <ProtectedRoute\r\n                                    isAllowed={isLogged}\r\n                                    path=\"/department\"\r\n                                    component={(props) => (\r\n                                        <AdminDashboard {...props} user={user} />\r\n                                    )}\r\n                                />\r\n\r\n                                <ProtectedRoute\r\n                                    isAllowed={isLogged}\r\n                                    path=\"/create-department\"\r\n                                    component={(props) => (\r\n                                        <CreateDepartment {...props} user={user} />\r\n                                    )}\r\n                                />\r\n\r\n                                <ProtectedRoute\r\n                                    isAllowed={isLogged}\r\n                                    path=\"/sub/department/:id\"\r\n                                    component={(props) => (\r\n                                        <ViewSubDepartment {...props} id={props.match.params.id} />\r\n                                    )}\r\n                                />\r\n\r\n                                <ProtectedRoute\r\n                                    isAllowed={isLogged}\r\n                                    path=\"/create-sub-department/:id\"\r\n                                    component={(props) => (\r\n                                        <CreateSubDepartment {...props} user={user} id={props.match.params.id} />\r\n                                    )}\r\n                                />\r\n\r\n                                <ProtectedRoute\r\n                                    isAllowed={isLogged}\r\n                                    path=\"/file\"\r\n                                    component={(props) => (\r\n                                        <ManageFile {...props} user={user} />\r\n                                    )}\r\n                                />\r\n\r\n                                <ProtectedRoute\r\n                                    isAllowed={isLogged}\r\n                                    path=\"/history/file/:id\"\r\n                                    component={(props) => (\r\n                                        <ViewFileHistory {...props} user={user} id={props.match.params.id} />\r\n                                    )}\r\n                                />\r\n\r\n                                <ProtectedRoute\r\n                                    isAllowed={isLogged}\r\n                                    path=\"/create-file\"\r\n                                    component={(props) => (\r\n                                        <CreateFile {...props} user={user} id={props.match.params.id} />\r\n                                    )}\r\n                                />\r\n\r\n                                <ProtectedRoute\r\n                                    isAllowed={isLogged}\r\n                                    path=\"/forward/file/:id\"\r\n                                    component={(props) => (\r\n                                        <ForwardFile {...props} user={user} id={props.match.params.id} />\r\n                                    )}\r\n                                />\r\n\r\n                                <Route\r\n                                    // exact\r\n                                    path=\"/sa-landing\"\r\n                                    component={() => <SA_Landing />}\r\n                                />\r\n                                \r\n\r\n\r\n                            </Switch>\r\n                            </>\r\n                        )}\r\n\r\n                        <ToastContainer />\r\n\r\n                        {isLogged && <Footer /> }\r\n\r\n                        <Modal\r\n                            open={this.state.showModal}\r\n                            primaryButtonText=\"Stay\"\r\n                            onRequestSubmit={this.toggleModal}\r\n                            secondaryButtonText=\"Log out\"\r\n                            onSecondarySubmit={this.logOut}\r\n                            onRequestClose={this.toggleModal}\r\n                            modalHeading=\"You have been inactive!\"\r\n                        >\r\n                            <p className=\"wfp--modal-content__text\">\r\n                                You will get timed out. You want to stay?\r\n                            </p>\r\n                        </Modal>\r\n                \r\n                </>\r\n                </BrowserRouter>\r\n            </SWRConfig>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    checkLoginStatus: () => dispatch(checkLoginStatus()),\r\n    logout: () => dispatch(logout()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'babel-polyfill'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { render } from 'react-dom'\r\nimport store from './store'\r\nimport '@wfp/ui/assets/css/styles.css'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}